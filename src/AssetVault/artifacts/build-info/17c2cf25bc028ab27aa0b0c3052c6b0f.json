{
	"id": "17c2cf25bc028ab27aa0b0c3052c6b0f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/vault/AssetVault/AssetVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.25;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\ncontract AssetVault is AccessControl {\n    struct UserDeposit {\n        uint256 totalValue; // Total value deposited at the recorded time\n        mapping(address => uint256) assetBalances; // Balance of each asset deposited by the user\n    }\n\n    AggregatorV3Interface internal dataFeed;\n    bytes32 public constant VAULT_MANAGER_ROLE =\n        keccak256(\"VAULT_MANAGER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    IERC20[] public supportedAssets;\n    mapping(address => uint256) public totalVaultBalance;\n    mapping(address => AggregatorV3Interface) assetToOracle; // Store oracle addresses\n    mapping(address => UserDeposit) public userDeposits;\n    mapping(address => uint256) public userProfits;\n\n    uint256 public performanceFeePercentage;\n    uint256 public lastRecordedProfit;\n    uint256 public totalProfits;\n\n    constructor(\n        address _vaultManager,\n        address[] memory _initialAssets,\n        uint256 _performanceFee,\n        address _owner\n    ) {\n        grantRole(VAULT_MANAGER_ROLE, _vaultManager);\n        grantRole(DEFAULT_ADMIN_ROLE, _owner);\n        _setRoleAdmin(VAULT_MANAGER_ROLE, ADMIN_ROLE); // Admins can manage vault manager role\n        for (uint256 i = 0; i < _initialAssets.length; i++) {\n            supportedAssets.push(IERC20(_initialAssets[i]));\n        }\n        performanceFeePercentage = _performanceFee;\n        lastRecordedProfit = 0; // Initialize on contract creation\n    }\n\n    function setAssetToOracle(address _asset, address _oracle)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        assetToOracle[_asset] = AggregatorV3Interface(_oracle);\n    }\n\n    function estimateVaultValue() public view returns (uint256) {\n        uint256 totalValue = 0;\n        for (uint256 i = 0; i < supportedAssets.length; i++) {\n            totalValue += estimateAssetValue(\n                address(supportedAssets[i]),\n                totalVaultBalance[address(supportedAssets[i])]\n            );\n        }\n        return totalValue;\n    }\n\n    function deposit(address _asset, uint256 _amount) external {\n        require(isAssetSupported(IERC20(_asset)), \"Asset not supported\");\n        IERC20(_asset).transferFrom(_msgSender(), address(this), _amount);\n        totalVaultBalance[_asset] += _amount;\n        userDeposits[_msgSender()].totalValue += estimateAssetValue(\n            _asset,\n            _amount\n        );\n        userDeposits[_msgSender()].assetBalances[_asset] += _amount;\n    }\n\n    function withdraw(address _asset, uint256 _amount) external {\n        require(\n            userDeposits[_msgSender()].assetBalances[_asset] >= _amount,\n            \"Insufficient balance\"\n        );\n        userDeposits[_msgSender()].assetBalances[_asset] -= _amount;\n        totalVaultBalance[_asset] -= _amount;\n        IERC20(_asset).transfer(_msgSender(), _amount);\n\n        // Proportional Profit Calculation (more on this below)\n        uint256 profitShare = calculateUserProfitShare(_msgSender());\n        userProfits[_msgSender()] += profitShare;\n\n        // Update user deposit records accordingly\n        userDeposits[_msgSender()].totalValue -= estimateAssetValue(\n            _asset,\n            _amount\n        );\n        userDeposits[_msgSender()].assetBalances[_asset] -= _amount;\n    }\n\n    function calculateUserProfitShare(address _user)\n        internal\n        view\n        returns (uint256)\n    {\n        uint256 userShare = (userDeposits[_user].totalValue * 1e18) /\n            estimateVaultValue(); // 1e18 for decimals precision if needed\n        uint256 profitShare = (totalProfits * userShare) / 1e18;\n        return profitShare;\n    }\n\n    function trade(\n        IERC20 _asset1,\n        uint256 _amount1,\n        IERC20 _asset2,\n        uint256 _amount2\n    ) external onlyRole(VAULT_MANAGER_ROLE) {\n        // Logic to execute the trade on Uniswap\n        // Simplified profit estimation:\n        uint256 currentValue = estimateAssetValue(address(_asset2), _amount2); // Assuming you fetch the value of received assets\n        uint256 previousValue = estimateAssetValue(address(_asset1), _amount1);\n        uint256 profit = currentValue - previousValue;\n        totalProfits += profit;\n    }\n\n    function isAssetSupported(IERC20 _asset) internal view returns (bool) {\n        for (uint256 i = 0; i < supportedAssets.length; i++) {\n            if (supportedAssets[i] == _asset) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function estimateAssetValue(address _asset, uint256 _amount)\n        internal\n        view\n        returns (uint256)\n    {\n        AggregatorV3Interface priceFeed = assetToOracle[_asset];\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 value = uint256(price) * _amount;\n        return value;\n    }\n\n    function estimateAssetValueUSD(address _asset, uint256 _amount)\n        public\n        view\n        returns (uint256 valueUSD)\n    {\n        AggregatorV3Interface priceFeed = assetToOracle[_asset];\n        require(\n            priceFeed != AggregatorV3Interface(address(0)),\n            \"Oracle not set for asset\"\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid price data\");\n        uint256 decimals = uint256(priceFeed.decimals());\n        valueUSD = (_amount * uint256(price)) / (10**decimals);\n    }\n\n    function calculateProfits() internal view returns (uint256) {\n        // uint256 currentVaultValue = totalVaultBalance; // (Adjust based on your valuation strategy)\n        // uint256 generatedProfit = currentVaultValue - lastRecordedProfit;\n        // return generatedProfit;\n    }\n\n    function collectPerformanceFee() external onlyRole(VAULT_MANAGER_ROLE) {\n        uint256 profits = calculateProfits();\n        if (profits > 0) {\n            uint256 performanceFee = (profits * performanceFeePercentage) / 100;\n            // Transfer performanceFee to vaultManager (mechanism depends on your setup)\n            lastRecordedProfit = performanceFee;\n            // lastRecordedProfit = totalVaultBalance;\n        }\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)67_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)67_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)67_storage"
							},
							"t_struct(RoleData)67_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 64,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 66,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vault/AssetVault/AssetVault.sol": {
				"AssetVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_initialAssets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_performanceFee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VAULT_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectPerformanceFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "estimateAssetValueUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "valueUSD",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "estimateVaultValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRecordedProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "performanceFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "setAssetToOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "supportedAssets",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalProfits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalVaultBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_asset1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_asset2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount2",
									"type": "uint256"
								}
							],
							"name": "trade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalValue",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userProfits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vault/AssetVault/AssetVault.sol\":323:6427  contract AssetVault is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1181:1783  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1338:1382  grantRole(VAULT_MANAGER_ROLE, _vaultManager) */\n  tag_6\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":668:699  keccak256(\"VAULT_MANAGER_ROLE\") */\n  0xd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1368:1381  _vaultManager */\n  dup6\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1338:1347  grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1338:1382  grantRole(VAULT_MANAGER_ROLE, _vaultManager) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1392:1429  grantRole(DEFAULT_ADMIN_ROLE, _owner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1402:1420  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1422:1428  _owner */\n  dup3\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1392:1401  grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1392:1429  grantRole(DEFAULT_ADMIN_ROLE, _owner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1439:1484  _setRoleAdmin(VAULT_MANAGER_ROLE, ADMIN_ROLE) */\n  tag_9\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":668:699  keccak256(\"VAULT_MANAGER_ROLE\") */\n  0xd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":742:765  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1439:1452  _setRoleAdmin */\n  shl(0x20, tag_10)\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1439:1484  _setRoleAdmin(VAULT_MANAGER_ROLE, ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1539:1548  uint256 i */\n  0x00\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1534:1658  for (uint256 i = 0; i < _initialAssets.length; i++) {... */\ntag_11:\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1558:1572  _initialAssets */\n  dup4\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1558:1579  _initialAssets.length */\n  mload\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1554:1555  i */\n  dup2\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1554:1579  i < _initialAssets.length */\n  lt\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1534:1658  for (uint256 i = 0; i < _initialAssets.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1600:1615  supportedAssets */\n  0x02\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1628:1642  _initialAssets */\n  dup5\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1643:1644  i */\n  dup3\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1628:1645  _initialAssets[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_14\n  jumpi\n  tag_15\n  tag_16\n  jump\t// in\ntag_15:\ntag_14:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1600:1647  supportedAssets.push(IERC20(_initialAssets[i])) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1581:1584  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1534:1658  for (uint256 i = 0; i < _initialAssets.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1694:1709  _performanceFee */\n  dup2\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1667:1691  performanceFeePercentage */\n  0x07\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1667:1709  performanceFeePercentage = _performanceFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1740:1741  0 */\n  0x00\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1719:1737  lastRecordedProfit */\n  0x08\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1719:1741  lastRecordedProfit = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":1181:1783  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":323:6427  contract AssetVault is AccessControl {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  tag_25\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5822:5826  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5821  getRoleAdmin */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5827  bytes32 previousAdminRole = getRoleAdmin(role) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5871  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5843  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5844:5848  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5859  _roles[role].adminRole */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5928:5937  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5909:5926  previousAdminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5903:5907  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5771:5945  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  tag_31\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  tag_32\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_36\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_39\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_35)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_35:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_34:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  tag_43\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n  mload(0x40)\n  0xe2517d3f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_48:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_49:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_50:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_51:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_52:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_76\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_51\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_53:\n    /* \"#utility.yul\":641:665   */\n  tag_78\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_52\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_79:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_54:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_81\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_53\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_55:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1070   */\ntag_56:\n    /* \"#utility.yul\":1009:1015   */\n  0x00\n    /* \"#utility.yul\":1060:1062   */\n  0x1f\n    /* \"#utility.yul\":1056:1063   */\n  not\n    /* \"#utility.yul\":1051:1053   */\n  0x1f\n    /* \"#utility.yul\":1044:1049   */\n  dup4\n    /* \"#utility.yul\":1040:1054   */\n  add\n    /* \"#utility.yul\":1036:1064   */\n  and\n    /* \"#utility.yul\":1026:1064   */\n  swap1\n  pop\n    /* \"#utility.yul\":968:1070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1076:1256   */\ntag_57:\n    /* \"#utility.yul\":1124:1201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1114:1202   */\n  mstore\n    /* \"#utility.yul\":1221:1225   */\n  0x41\n    /* \"#utility.yul\":1218:1219   */\n  0x04\n    /* \"#utility.yul\":1211:1226   */\n  mstore\n    /* \"#utility.yul\":1245:1249   */\n  0x24\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1235:1250   */\n  revert\n    /* \"#utility.yul\":1262:1543   */\ntag_58:\n    /* \"#utility.yul\":1345:1372   */\n  tag_86\n    /* \"#utility.yul\":1367:1371   */\n  dup3\n    /* \"#utility.yul\":1345:1372   */\n  tag_56\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1337:1343   */\n  dup2\n    /* \"#utility.yul\":1333:1373   */\n  add\n    /* \"#utility.yul\":1475:1481   */\n  dup2\n    /* \"#utility.yul\":1463:1473   */\n  dup2\n    /* \"#utility.yul\":1460:1482   */\n  lt\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1427:1437   */\n  dup3\n    /* \"#utility.yul\":1424:1458   */\n  gt\n    /* \"#utility.yul\":1421:1483   */\n  or\n    /* \"#utility.yul\":1418:1506   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1486:1504   */\n  tag_88\n  tag_57\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1418:1506   */\ntag_87:\n    /* \"#utility.yul\":1526:1536   */\n  dup1\n    /* \"#utility.yul\":1522:1524   */\n  0x40\n    /* \"#utility.yul\":1515:1537   */\n  mstore\n    /* \"#utility.yul\":1305:1543   */\n  pop\n    /* \"#utility.yul\":1262:1543   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1549:1678   */\ntag_59:\n    /* \"#utility.yul\":1583:1589   */\n  0x00\n    /* \"#utility.yul\":1610:1630   */\n  tag_90\n  tag_48\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1600:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1639:1672   */\n  tag_91\n    /* \"#utility.yul\":1667:1671   */\n  dup3\n    /* \"#utility.yul\":1659:1665   */\n  dup3\n    /* \"#utility.yul\":1639:1672   */\n  tag_58\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1549:1678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1684:1995   */\ntag_60:\n    /* \"#utility.yul\":1761:1765   */\n  0x00\n    /* \"#utility.yul\":1851:1869   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1843:1849   */\n  dup3\n    /* \"#utility.yul\":1840:1870   */\n  gt\n    /* \"#utility.yul\":1837:1893   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1873:1891   */\n  tag_94\n  tag_57\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1837:1893   */\ntag_93:\n    /* \"#utility.yul\":1923:1927   */\n  0x20\n    /* \"#utility.yul\":1915:1921   */\n  dup3\n    /* \"#utility.yul\":1911:1928   */\n  mul\n    /* \"#utility.yul\":1903:1928   */\n  swap1\n  pop\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1977:1981   */\n  dup2\n    /* \"#utility.yul\":1973:1988   */\n  add\n    /* \"#utility.yul\":1965:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1684:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2118   */\ntag_61:\n    /* \"#utility.yul\":2110:2111   */\n  0x00\n    /* \"#utility.yul\":2107:2108   */\n  dup1\n    /* \"#utility.yul\":2100:2112   */\n  revert\n    /* \"#utility.yul\":2141:2873   */\ntag_62:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_97\n    /* \"#utility.yul\":2289:2353   */\n  tag_98\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_60\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2273:2354   */\n  tag_59\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_100\n  tag_61\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2505:2627   */\ntag_99:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_101:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_104\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_54\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_63:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_107\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2994:3116   */\ntag_106:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_108\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_62\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3364   */\ntag_64:\n    /* \"#utility.yul\":3324:3331   */\n  0x00\n    /* \"#utility.yul\":3353:3358   */\n  dup2\n    /* \"#utility.yul\":3342:3358   */\n  swap1\n  pop\n    /* \"#utility.yul\":3287:3364   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3370:3492   */\ntag_65:\n    /* \"#utility.yul\":3443:3467   */\n  tag_111\n    /* \"#utility.yul\":3461:3466   */\n  dup2\n    /* \"#utility.yul\":3443:3467   */\n  tag_64\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3436:3441   */\n  dup2\n    /* \"#utility.yul\":3433:3468   */\n  eq\n    /* \"#utility.yul\":3423:3486   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3479:3480   */\n  dup1\n    /* \"#utility.yul\":3472:3484   */\n  revert\n    /* \"#utility.yul\":3423:3486   */\ntag_112:\n    /* \"#utility.yul\":3370:3492   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3498:3641   */\ntag_66:\n    /* \"#utility.yul\":3555:3560   */\n  0x00\n    /* \"#utility.yul\":3586:3592   */\n  dup2\n    /* \"#utility.yul\":3580:3593   */\n  mload\n    /* \"#utility.yul\":3571:3593   */\n  swap1\n  pop\n    /* \"#utility.yul\":3602:3635   */\n  tag_114\n    /* \"#utility.yul\":3629:3634   */\n  dup2\n    /* \"#utility.yul\":3602:3635   */\n  tag_65\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3498:3641   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3647:4670   */\ntag_3:\n    /* \"#utility.yul\":3769:3775   */\n  0x00\n    /* \"#utility.yul\":3777:3783   */\n  dup1\n    /* \"#utility.yul\":3785:3791   */\n  0x00\n    /* \"#utility.yul\":3793:3799   */\n  dup1\n    /* \"#utility.yul\":3842:3845   */\n  0x80\n    /* \"#utility.yul\":3830:3839   */\n  dup6\n    /* \"#utility.yul\":3821:3828   */\n  dup8\n    /* \"#utility.yul\":3817:3840   */\n  sub\n    /* \"#utility.yul\":3813:3846   */\n  slt\n    /* \"#utility.yul\":3810:3930   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3849:3928   */\n  tag_117\n  tag_49\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3810:3930   */\ntag_116:\n    /* \"#utility.yul\":3969:3970   */\n  0x00\n    /* \"#utility.yul\":3994:4058   */\n  tag_118\n    /* \"#utility.yul\":4050:4057   */\n  dup8\n    /* \"#utility.yul\":4041:4047   */\n  dup3\n    /* \"#utility.yul\":4030:4039   */\n  dup9\n    /* \"#utility.yul\":4026:4048   */\n  add\n    /* \"#utility.yul\":3994:4058   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3984:4058   */\n  swap5\n  pop\n    /* \"#utility.yul\":3940:4068   */\n  pop\n    /* \"#utility.yul\":4128:4130   */\n  0x20\n    /* \"#utility.yul\":4117:4126   */\n  dup6\n    /* \"#utility.yul\":4113:4131   */\n  add\n    /* \"#utility.yul\":4107:4132   */\n  mload\n    /* \"#utility.yul\":4159:4177   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4151:4157   */\n  dup2\n    /* \"#utility.yul\":4148:4178   */\n  gt\n    /* \"#utility.yul\":4145:4262   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4181:4260   */\n  tag_120\n  tag_50\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4145:4262   */\ntag_119:\n    /* \"#utility.yul\":4286:4375   */\n  tag_121\n    /* \"#utility.yul\":4367:4374   */\n  dup8\n    /* \"#utility.yul\":4358:4364   */\n  dup3\n    /* \"#utility.yul\":4347:4356   */\n  dup9\n    /* \"#utility.yul\":4343:4365   */\n  add\n    /* \"#utility.yul\":4286:4375   */\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4276:4375   */\n  swap4\n  pop\n    /* \"#utility.yul\":4078:4385   */\n  pop\n    /* \"#utility.yul\":4424:4426   */\n  0x40\n    /* \"#utility.yul\":4450:4514   */\n  tag_122\n    /* \"#utility.yul\":4506:4513   */\n  dup8\n    /* \"#utility.yul\":4497:4503   */\n  dup3\n    /* \"#utility.yul\":4486:4495   */\n  dup9\n    /* \"#utility.yul\":4482:4504   */\n  add\n    /* \"#utility.yul\":4450:4514   */\n  tag_66\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4440:4514   */\n  swap3\n  pop\n    /* \"#utility.yul\":4395:4524   */\n  pop\n    /* \"#utility.yul\":4563:4565   */\n  0x60\n    /* \"#utility.yul\":4589:4653   */\n  tag_123\n    /* \"#utility.yul\":4645:4652   */\n  dup8\n    /* \"#utility.yul\":4636:4642   */\n  dup3\n    /* \"#utility.yul\":4625:4634   */\n  dup9\n    /* \"#utility.yul\":4621:4643   */\n  add\n    /* \"#utility.yul\":4589:4653   */\n  tag_54\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4579:4653   */\n  swap2\n  pop\n    /* \"#utility.yul\":4534:4663   */\n  pop\n    /* \"#utility.yul\":3647:4670   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4676:4856   */\ntag_16:\n    /* \"#utility.yul\":4724:4801   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4721:4722   */\n  0x00\n    /* \"#utility.yul\":4714:4802   */\n  mstore\n    /* \"#utility.yul\":4821:4825   */\n  0x32\n    /* \"#utility.yul\":4818:4819   */\n  0x04\n    /* \"#utility.yul\":4811:4826   */\n  mstore\n    /* \"#utility.yul\":4845:4849   */\n  0x24\n    /* \"#utility.yul\":4842:4843   */\n  0x00\n    /* \"#utility.yul\":4835:4850   */\n  revert\n    /* \"#utility.yul\":4862:4980   */\ntag_67:\n    /* \"#utility.yul\":4949:4973   */\n  tag_126\n    /* \"#utility.yul\":4967:4972   */\n  dup2\n    /* \"#utility.yul\":4949:4973   */\n  tag_52\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4937:4974   */\n  mstore\n    /* \"#utility.yul\":4862:4980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4986:5063   */\ntag_68:\n    /* \"#utility.yul\":5023:5030   */\n  0x00\n    /* \"#utility.yul\":5052:5057   */\n  dup2\n    /* \"#utility.yul\":5041:5057   */\n  swap1\n  pop\n    /* \"#utility.yul\":4986:5063   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5069:5187   */\ntag_69:\n    /* \"#utility.yul\":5156:5180   */\n  tag_129\n    /* \"#utility.yul\":5174:5179   */\n  dup2\n    /* \"#utility.yul\":5156:5180   */\n  tag_68\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5151:5154   */\n  dup3\n    /* \"#utility.yul\":5144:5181   */\n  mstore\n    /* \"#utility.yul\":5069:5187   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5193:5525   */\ntag_46:\n    /* \"#utility.yul\":5314:5318   */\n  0x00\n    /* \"#utility.yul\":5352:5354   */\n  0x40\n    /* \"#utility.yul\":5341:5350   */\n  dup3\n    /* \"#utility.yul\":5337:5355   */\n  add\n    /* \"#utility.yul\":5329:5355   */\n  swap1\n  pop\n    /* \"#utility.yul\":5365:5436   */\n  tag_131\n    /* \"#utility.yul\":5433:5434   */\n  0x00\n    /* \"#utility.yul\":5422:5431   */\n  dup4\n    /* \"#utility.yul\":5418:5435   */\n  add\n    /* \"#utility.yul\":5409:5415   */\n  dup6\n    /* \"#utility.yul\":5365:5436   */\n  tag_67\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5446:5518   */\n  tag_132\n    /* \"#utility.yul\":5514:5516   */\n  0x20\n    /* \"#utility.yul\":5503:5512   */\n  dup4\n    /* \"#utility.yul\":5499:5517   */\n  add\n    /* \"#utility.yul\":5490:5496   */\n  dup5\n    /* \"#utility.yul\":5446:5518   */\n  tag_69\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5193:5525   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/vault/AssetVault/AssetVault.sol\":323:6427  contract AssetVault is AccessControl {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":323:6427  contract AssetVault is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x90805c34\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbd998cb3\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbd998cb3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbe354836\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc68dbb37\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf4457fab\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x90805c34\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9e4a9369\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa356efc4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbb39a960\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x30e5065e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x30e5065e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x523820a1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5e5a24a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06f34c2f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ba36dcd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5990:6425  function collectPerformanceFee() external onlyRole(VAULT_MANAGER_ROLE) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":953:1004  mapping(address => UserDeposit) public userDeposits */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":808:860  mapping(address => uint256) public totalVaultBalance */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2349:2799  function deposit(address _asset, uint256 _amount) external {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1108:1141  uint256 public lastRecordedProfit */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":615:699  bytes32 public constant VAULT_MANAGER_ROLE =... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":705:765  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1789:1969  function setAssetToOracle(address _asset, address _oracle)... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1975:2343  function estimateVaultValue() public view returns (uint256) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5132:5696  function estimateAssetValueUSD(address _asset, uint256 _amount)... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3971:4524  function trade(... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1147:1174  uint256 public totalProfits */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1010:1056  mapping(address => uint256) public userProfits */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":771:802  IERC20[] public supportedAssets */\n    tag_22:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2805:3605  function withdraw(address _asset, uint256 _amount) external {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1063:1102  uint256 public performanceFeePercentage */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5990:6425  function collectPerformanceFee() external onlyRole(VAULT_MANAGER_ROLE) {... */\n    tag_36:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":668:699  keccak256(\"VAULT_MANAGER_ROLE\") */\n      0xd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6071:6086  uint256 profits */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6089:6107  calculateProfits() */\n      tag_125\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6089:6105  calculateProfits */\n      tag_126\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6089:6107  calculateProfits() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6071:6107  uint256 profits = calculateProfits() */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6131:6132  0 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6121:6128  profits */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6121:6132  profits > 0 */\n      gt\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6117:6419  if (profits > 0) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6148:6170  uint256 performanceFee */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6212:6215  100 */\n      0x64\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6184:6208  performanceFeePercentage */\n      sload(0x07)\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6174:6181  profits */\n      dup4\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6174:6208  profits * performanceFeePercentage */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6173:6215  (profits * performanceFeePercentage) / 100 */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6148:6215  uint256 performanceFee = (profits * performanceFeePercentage) / 100 */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6339:6353  performanceFee */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6318:6336  lastRecordedProfit */\n      0x08\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6318:6353  lastRecordedProfit = performanceFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6134:6419  {... */\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6117:6419  if (profits > 0) {... */\n    tag_127:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":6061:6425  {... */\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5990:6425  function collectPerformanceFee() external onlyRole(VAULT_MANAGER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":953:1004  mapping(address => UserDeposit) public userDeposits */\n    tag_40:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_46\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_137:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":808:860  mapping(address => uint256) public totalVaultBalance */\n    tag_55:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2349:2799  function deposit(address _asset, uint256 _amount) external {... */\n    tag_63:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2426:2458  isAssetSupported(IERC20(_asset)) */\n      tag_146\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2450:2456  _asset */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2426:2442  isAssetSupported */\n      tag_147\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2426:2458  isAssetSupported(IERC20(_asset)) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2418:2482  require(isAssetSupported(IERC20(_asset)), \"Asset not supported\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2499:2505  _asset */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2492:2519  IERC20(_asset).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2520:2532  _msgSender() */\n      tag_151\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2520:2530  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2520:2532  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2542:2546  this */\n      address\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2549:2556  _amount */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2492:2557  IERC20(_asset).transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2596:2603  _amount */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2567:2584  totalVaultBalance */\n      0x03\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2567:2592  totalVaultBalance[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2585:2591  _asset */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2567:2592  totalVaultBalance[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2567:2603  totalVaultBalance[_asset] += _amount */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2654:2723  estimateAssetValue(... */\n      tag_160\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2686:2692  _asset */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2706:2713  _amount */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2654:2672  estimateAssetValue */\n      tag_161\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2654:2723  estimateAssetValue(... */\n      jump\t// in\n    tag_160:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2613:2625  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2613:2639  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2626:2638  _msgSender() */\n      tag_162\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2626:2636  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2626:2638  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2613:2639  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2613:2650  userDeposits[_msgSender()].totalValue */\n      0x00\n      add\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2613:2723  userDeposits[_msgSender()].totalValue += estimateAssetValue(... */\n      dup3\n      dup3\n      sload\n      tag_163\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2785:2792  _amount */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2745  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2759  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2746:2758  _msgSender() */\n      tag_164\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2746:2756  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2746:2758  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2759  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2773  userDeposits[_msgSender()].assetBalances */\n      0x01\n      add\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2781  userDeposits[_msgSender()].assetBalances[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2774:2780  _asset */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2781  userDeposits[_msgSender()].assetBalances[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2733:2792  userDeposits[_msgSender()].assetBalances[_asset] += _amount */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2349:2799  function deposit(address _asset, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1108:1141  uint256 public lastRecordedProfit */\n    tag_65:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":615:699  bytes32 public constant VAULT_MANAGER_ROLE =... */\n    tag_68:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":668:699  keccak256(\"VAULT_MANAGER_ROLE\") */\n      0xd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":615:699  bytes32 public constant VAULT_MANAGER_ROLE =... */\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":705:765  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_71:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":742:765  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":705:765  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1789:1969  function setAssetToOracle(address _asset, address _oracle)... */\n    tag_76:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":742:765  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1954:1961  _oracle */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1908:1921  assetToOracle */\n      0x04\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1908:1929  assetToOracle[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1922:1928  _asset */\n      dup6\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1908:1929  assetToOracle[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1908:1962  assetToOracle[_asset] = AggregatorV3Interface(_oracle) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1789:1969  function setAssetToOracle(address _asset, address _oracle)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1975:2343  function estimateVaultValue() public view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2026:2033  uint256 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2045:2063  uint256 totalValue */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2066:2067  0 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2045:2067  uint256 totalValue = 0 */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2082:2091  uint256 i */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2077:2310  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n    tag_171:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2101:2116  supportedAssets */\n      0x02\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2101:2123  supportedAssets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2097:2098  i */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2097:2123  i < supportedAssets.length */\n      lt\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2077:2310  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2158:2299  estimateAssetValue(... */\n      tag_174\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2202:2217  supportedAssets */\n      0x02\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2218:2219  i */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2202:2220  supportedAssets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n    tag_175:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2239:2256  totalVaultBalance */\n      0x03\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2239:2285  totalVaultBalance[address(supportedAssets[i])] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2265:2280  supportedAssets */\n      0x02\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2281:2282  i */\n      dup6\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2265:2283  supportedAssets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_177\n      jump\t// in\n    tag_180:\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2239:2285  totalVaultBalance[address(supportedAssets[i])] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2158:2176  estimateAssetValue */\n      tag_161\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2158:2299  estimateAssetValue(... */\n      jump\t// in\n    tag_174:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2144:2299  totalValue += estimateAssetValue(... */\n      dup3\n      tag_182\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_182:\n      swap2\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2125:2128  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2077:2310  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2326:2336  totalValue */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2319:2336  return totalValue */\n      swap2\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1975:2343  function estimateVaultValue() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5132:5696  function estimateAssetValueUSD(address _asset, uint256 _amount)... */\n    tag_89:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5241:5257  uint256 valueUSD */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5273:5304  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5307:5320  assetToOracle */\n      0x04\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5307:5328  assetToOracle[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5321:5327  _asset */\n      dup6\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5307:5328  assetToOracle[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5273:5328  AggregatorV3Interface priceFeed = assetToOracle[_asset] */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5402:5403  0 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5359:5405  priceFeed != AggregatorV3Interface(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5359:5368  priceFeed */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5359:5405  priceFeed != AggregatorV3Interface(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5338:5455  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5468:5480  int256 price */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5490:5499  priceFeed */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5490:5515  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5490:5517  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5465:5517  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5543:5544  0 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5535:5540  price */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5535:5544  price > 0 */\n      sgt\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5527:5567  require(price > 0, \"Invalid price data\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5577:5593  uint256 decimals */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5604:5613  priceFeed */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5604:5622  priceFeed.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5604:5624  priceFeed.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5596:5625  uint256(priceFeed.decimals()) */\n      0xff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5577:5625  uint256 decimals = uint256(priceFeed.decimals()) */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5680:5688  decimals */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5676:5678  10 */\n      0x0a\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5676:5688  10**decimals */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5665:5670  price */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5647:5654  _amount */\n      dup7\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5647:5671  _amount * uint256(price) */\n      tag_200\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_200:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5646:5689  (_amount * uint256(price)) / (10**decimals) */\n      tag_201\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_201:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5635:5689  valueUSD = (_amount * uint256(price)) / (10**decimals) */\n      swap4\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5263:5696  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5132:5696  function estimateAssetValueUSD(address _asset, uint256 _amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3971:4524  function trade(... */\n    tag_94:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":668:699  keccak256(\"VAULT_MANAGER_ROLE\") */\n      0xd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4230:4250  uint256 currentValue */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4253:4299  estimateAssetValue(address(_asset2), _amount2) */\n      tag_205\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4280:4287  _asset2 */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4290:4298  _amount2 */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4253:4271  estimateAssetValue */\n      tag_161\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4253:4299  estimateAssetValue(address(_asset2), _amount2) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4230:4299  uint256 currentValue = estimateAssetValue(address(_asset2), _amount2) */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4360:4381  uint256 previousValue */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4384:4430  estimateAssetValue(address(_asset1), _amount1) */\n      tag_206\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4411:4418  _asset1 */\n      dup8\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4421:4429  _amount1 */\n      dup8\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4384:4402  estimateAssetValue */\n      tag_161\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4384:4430  estimateAssetValue(address(_asset1), _amount1) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4360:4430  uint256 previousValue = estimateAssetValue(address(_asset1), _amount1) */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4440:4454  uint256 profit */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4472:4485  previousValue */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4457:4469  currentValue */\n      dup4\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4457:4485  currentValue - previousValue */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4440:4485  uint256 profit = currentValue - previousValue */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4511:4517  profit */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4495:4507  totalProfits */\n      0x09\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4495:4517  totalProfits += profit */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4130:4524  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3971:4524  function trade(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1147:1174  uint256 public totalProfits */\n    tag_96:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1010:1056  mapping(address => uint256) public userProfits */\n    tag_100:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":771:802  IERC20[] public supportedAssets */\n    tag_105:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_46\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_216\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_216:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2805:3605  function withdraw(address _asset, uint256 _amount) external {... */\n    tag_113:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2948:2955  _amount */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2908  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2922  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2909:2921  _msgSender() */\n      tag_218\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2909:2919  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2909:2921  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2922  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2936  userDeposits[_msgSender()].assetBalances */\n      0x01\n      add\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2944  userDeposits[_msgSender()].assetBalances[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2937:2943  _asset */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2944  userDeposits[_msgSender()].assetBalances[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2896:2955  userDeposits[_msgSender()].assetBalances[_asset] >= _amount */\n      lt\n      iszero\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2875:3001  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3063:3070  _amount */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3023  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3037  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3024:3036  _msgSender() */\n      tag_222\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3024:3034  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3024:3036  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3037  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3051  userDeposits[_msgSender()].assetBalances */\n      0x01\n      add\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3059  userDeposits[_msgSender()].assetBalances[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3052:3058  _asset */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3059  userDeposits[_msgSender()].assetBalances[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3011:3070  userDeposits[_msgSender()].assetBalances[_asset] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_223\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_223:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3109:3116  _amount */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3080:3097  totalVaultBalance */\n      0x03\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3080:3105  totalVaultBalance[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3098:3104  _asset */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3080:3105  totalVaultBalance[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3080:3116  totalVaultBalance[_asset] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3133:3139  _asset */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3126:3149  IERC20(_asset).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3150:3162  _msgSender() */\n      tag_225\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3150:3160  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3150:3162  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3164:3171  _amount */\n      dup4\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3126:3172  IERC20(_asset).transfer(_msgSender(), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_230:\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3247:3266  uint256 profitShare */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3269:3307  calculateUserProfitShare(_msgSender()) */\n      tag_231\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3294:3306  _msgSender() */\n      tag_232\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3294:3304  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3294:3306  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3269:3293  calculateUserProfitShare */\n      tag_233\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3269:3307  calculateUserProfitShare(_msgSender()) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3247:3307  uint256 profitShare = calculateUserProfitShare(_msgSender()) */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3346:3357  profitShare */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3317:3328  userProfits */\n      0x06\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3317:3342  userProfits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3329:3341  _msgSender() */\n      tag_234\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3329:3339  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3329:3341  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3317:3342  userProfits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3317:3357  userProfits[_msgSender()] += profitShare */\n      dup3\n      dup3\n      sload\n      tag_235\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_235:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3460:3529  estimateAssetValue(... */\n      tag_236\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3492:3498  _asset */\n      dup4\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3512:3519  _amount */\n      dup4\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3460:3478  estimateAssetValue */\n      tag_161\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3460:3529  estimateAssetValue(... */\n      jump\t// in\n    tag_236:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3419:3431  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3419:3445  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3432:3444  _msgSender() */\n      tag_237\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3432:3442  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3432:3444  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3419:3445  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3419:3456  userDeposits[_msgSender()].totalValue */\n      0x00\n      add\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3419:3529  userDeposits[_msgSender()].totalValue -= estimateAssetValue(... */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3591:3598  _amount */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3551  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3565  userDeposits[_msgSender()] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3552:3564  _msgSender() */\n      tag_239\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3552:3562  _msgSender */\n      tag_141\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3552:3564  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3565  userDeposits[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3579  userDeposits[_msgSender()].assetBalances */\n      0x01\n      add\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3587  userDeposits[_msgSender()].assetBalances[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3580:3586  _asset */\n      dup6\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3587  userDeposits[_msgSender()].assetBalances[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3539:3598  userDeposits[_msgSender()].assetBalances[_asset] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2865:3605  {... */\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":2805:3605  function withdraw(address _asset, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":1063:1102  uint256 public performanceFeePercentage */\n    tag_115:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_243\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_245\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5702:5984  function calculateProfits() internal view returns (uint256) {... */\n    tag_126:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5753:5760  uint256 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5702:5984  function calculateProfits() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_247:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_253)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_253:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4530:4793  function isAssetSupported(IERC20 _asset) internal view returns (bool) {... */\n    tag_147:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4594:4598  bool */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4615:4624  uint256 i */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4627:4628  0 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4615:4628  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4610:4765  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n    tag_259:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4634:4649  supportedAssets */\n      0x02\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4634:4656  supportedAssets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4630:4631  i */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4630:4656  i < supportedAssets.length */\n      lt\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4610:4765  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4703:4709  _asset */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4681:4709  supportedAssets[i] == _asset */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4681:4696  supportedAssets */\n      0x02\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4697:4698  i */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4681:4699  supportedAssets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_263\n      tag_177\n      jump\t// in\n    tag_263:\n    tag_262:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4681:4709  supportedAssets[i] == _asset */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4677:4755  if (supportedAssets[i] == _asset) {... */\n      tag_265\n      jumpi\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4736:4740  true */\n      0x01\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4729:4740  return true */\n      swap2\n      pop\n      pop\n      jump(tag_258)\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4677:4755  if (supportedAssets[i] == _asset) {... */\n    tag_265:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4658:4661  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4610:4765  for (uint256 i = 0; i < supportedAssets.length; i++) {... */\n      jump(tag_259)\n    tag_260:\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4781:4786  false */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4774:4786  return false */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4530:4793  function isAssetSupported(IERC20 _asset) internal view returns (bool) {... */\n    tag_258:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4799:5126  function estimateAssetValue(address _asset, uint256 _amount)... */\n    tag_161:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4907:4914  uint256 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4930:4961  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4964:4977  assetToOracle */\n      0x04\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4964:4985  assetToOracle[_asset] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4978:4984  _asset */\n      dup6\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4964:4985  assetToOracle[_asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4930:4985  AggregatorV3Interface priceFeed = assetToOracle[_asset] */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4998:5010  int256 price */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5020:5029  priceFeed */\n      dup2\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5020:5045  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5020:5047  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_269:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4995:5047  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5057:5070  uint256 value */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5090:5097  _amount */\n      dup5\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5081:5086  price */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5073:5097  uint256(price) * _amount */\n      tag_270\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_270:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5057:5097  uint256 value = uint256(price) * _amount */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5114:5119  value */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":5107:5119  return value */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":4799:5126  function estimateAssetValue(address _asset, uint256 _amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3611:3965  function calculateUserProfitShare(address _user)... */\n    tag_233:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3707:3714  uint256 */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3730:3747  uint256 userShare */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3804:3824  estimateVaultValue() */\n      tag_272\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3804:3822  estimateVaultValue */\n      tag_82\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3804:3824  estimateVaultValue() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3784:3788  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3751:3763  userDeposits */\n      0x05\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3751:3770  userDeposits[_user] */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3764:3769  _user */\n      dup7\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3751:3770  userDeposits[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3751:3781  userDeposits[_user].totalValue */\n      0x00\n      add\n      sload\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3751:3788  userDeposits[_user].totalValue * 1e18 */\n      tag_273\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_273:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3750:3824  (userDeposits[_user].totalValue * 1e18) /... */\n      tag_274\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_274:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3730:3824  uint256 userShare = (userDeposits[_user].totalValue * 1e18) /... */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3875:3894  uint256 profitShare */\n      0x00\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3926:3930  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3913:3922  userShare */\n      dup3\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3898:3910  totalProfits */\n      sload(0x09)\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3898:3922  totalProfits * userShare */\n      tag_275\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_275:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3897:3930  (totalProfits * userShare) / 1e18 */\n      tag_276\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_276:\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3875:3930  uint256 profitShare = (totalProfits * userShare) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3947:3958  profitShare */\n      dup1\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3940:3958  return profitShare */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/vault/AssetVault/AssetVault.sol\":3611:3965  function calculateUserProfitShare(address _user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_283:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_285:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_286:\n        /* \"#utility.yul\":561:584   */\n      tag_343\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_285\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_344:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_287:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_346\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_286\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_349\n      tag_283\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":833:952   */\n    tag_348:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_350\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_287\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_288:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_289:\n        /* \"#utility.yul\":1268:1289   */\n      tag_353\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_288\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_355\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_289\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_290:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_291:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_358\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_290\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_292:\n        /* \"#utility.yul\":1825:1849   */\n      tag_360\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_291\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_361:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_293:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_363\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_292\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_39:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_366\n      tag_283\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2101:2220   */\n    tag_365:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_367\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_293\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_294:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_295:\n        /* \"#utility.yul\":2530:2554   */\n      tag_370\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_294\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_42:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_372\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_295\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2872   */\n    tag_296:\n        /* \"#utility.yul\":2832:2839   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2850:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3000   */\n    tag_297:\n        /* \"#utility.yul\":2951:2975   */\n      tag_375\n        /* \"#utility.yul\":2969:2974   */\n      dup2\n        /* \"#utility.yul\":2951:2975   */\n      tag_296\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2941:2976   */\n      eq\n        /* \"#utility.yul\":2931:2994   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2987:2988   */\n      dup1\n        /* \"#utility.yul\":2980:2992   */\n      revert\n        /* \"#utility.yul\":2931:2994   */\n    tag_376:\n        /* \"#utility.yul\":2878:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3145   */\n    tag_298:\n        /* \"#utility.yul\":3052:3057   */\n      0x00\n        /* \"#utility.yul\":3090:3096   */\n      dup2\n        /* \"#utility.yul\":3077:3097   */\n      calldataload\n        /* \"#utility.yul\":3068:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3139   */\n      tag_378\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3106:3139   */\n      tag_297\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3006:3145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3151:3480   */\n    tag_45:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3259:3261   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup3\n        /* \"#utility.yul\":3238:3245   */\n      dup5\n        /* \"#utility.yul\":3234:3257   */\n      sub\n        /* \"#utility.yul\":3230:3262   */\n      slt\n        /* \"#utility.yul\":3227:3346   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3265:3344   */\n      tag_381\n      tag_283\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3227:3346   */\n    tag_380:\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3410:3463   */\n      tag_382\n        /* \"#utility.yul\":3455:3462   */\n      dup5\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup6\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_298\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3400:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3356:3473   */\n      pop\n        /* \"#utility.yul\":3151:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3604   */\n    tag_299:\n        /* \"#utility.yul\":3573:3597   */\n      tag_384\n        /* \"#utility.yul\":3591:3596   */\n      dup2\n        /* \"#utility.yul\":3573:3597   */\n      tag_296\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3568:3571   */\n      dup3\n        /* \"#utility.yul\":3561:3598   */\n      mstore\n        /* \"#utility.yul\":3486:3604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3832   */\n    tag_48:\n        /* \"#utility.yul\":3703:3707   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x20\n        /* \"#utility.yul\":3730:3739   */\n      dup3\n        /* \"#utility.yul\":3726:3744   */\n      add\n        /* \"#utility.yul\":3718:3744   */\n      swap1\n      pop\n        /* \"#utility.yul\":3754:3825   */\n      tag_386\n        /* \"#utility.yul\":3822:3823   */\n      0x00\n        /* \"#utility.yul\":3811:3820   */\n      dup4\n        /* \"#utility.yul\":3807:3824   */\n      add\n        /* \"#utility.yul\":3798:3804   */\n      dup5\n        /* \"#utility.yul\":3754:3825   */\n      tag_299\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3610:3832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4312   */\n    tag_51:\n        /* \"#utility.yul\":3906:3912   */\n      0x00\n        /* \"#utility.yul\":3914:3920   */\n      dup1\n        /* \"#utility.yul\":3963:3965   */\n      0x40\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3942:3949   */\n      dup6\n        /* \"#utility.yul\":3938:3961   */\n      sub\n        /* \"#utility.yul\":3934:3966   */\n      slt\n        /* \"#utility.yul\":3931:4050   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3969:4048   */\n      tag_389\n      tag_283\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3931:4050   */\n    tag_388:\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4114:4167   */\n      tag_390\n        /* \"#utility.yul\":4159:4166   */\n      dup6\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4135:4157   */\n      add\n        /* \"#utility.yul\":4114:4167   */\n      tag_298\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4104:4167   */\n      swap3\n      pop\n        /* \"#utility.yul\":4060:4177   */\n      pop\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4242:4295   */\n      tag_391\n        /* \"#utility.yul\":4287:4294   */\n      dup6\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4267:4276   */\n      dup7\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4242:4295   */\n      tag_293\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4232:4295   */\n      swap2\n      pop\n        /* \"#utility.yul\":4187:4305   */\n      pop\n        /* \"#utility.yul\":3838:4312   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4318:4440   */\n    tag_300:\n        /* \"#utility.yul\":4391:4415   */\n      tag_393\n        /* \"#utility.yul\":4409:4414   */\n      dup2\n        /* \"#utility.yul\":4391:4415   */\n      tag_294\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4384:4389   */\n      dup2\n        /* \"#utility.yul\":4381:4416   */\n      eq\n        /* \"#utility.yul\":4371:4434   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4430:4431   */\n      0x00\n        /* \"#utility.yul\":4427:4428   */\n      dup1\n        /* \"#utility.yul\":4420:4432   */\n      revert\n        /* \"#utility.yul\":4371:4434   */\n    tag_394:\n        /* \"#utility.yul\":4318:4440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4446:4585   */\n    tag_301:\n        /* \"#utility.yul\":4492:4497   */\n      0x00\n        /* \"#utility.yul\":4530:4536   */\n      dup2\n        /* \"#utility.yul\":4517:4537   */\n      calldataload\n        /* \"#utility.yul\":4508:4537   */\n      swap1\n      pop\n        /* \"#utility.yul\":4546:4579   */\n      tag_396\n        /* \"#utility.yul\":4573:4578   */\n      dup2\n        /* \"#utility.yul\":4546:4579   */\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4446:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:5065   */\n    tag_62:\n        /* \"#utility.yul\":4659:4665   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      dup1\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4704:4713   */\n      dup4\n        /* \"#utility.yul\":4695:4702   */\n      dup6\n        /* \"#utility.yul\":4691:4714   */\n      sub\n        /* \"#utility.yul\":4687:4719   */\n      slt\n        /* \"#utility.yul\":4684:4803   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_399\n      tag_283\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4684:4803   */\n    tag_398:\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4867:4920   */\n      tag_400\n        /* \"#utility.yul\":4912:4919   */\n      dup6\n        /* \"#utility.yul\":4903:4909   */\n      dup3\n        /* \"#utility.yul\":4892:4901   */\n      dup7\n        /* \"#utility.yul\":4888:4910   */\n      add\n        /* \"#utility.yul\":4867:4920   */\n      tag_293\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4857:4920   */\n      swap3\n      pop\n        /* \"#utility.yul\":4813:4930   */\n      pop\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"#utility.yul\":4995:5048   */\n      tag_401\n        /* \"#utility.yul\":5040:5047   */\n      dup6\n        /* \"#utility.yul\":5031:5037   */\n      dup3\n        /* \"#utility.yul\":5020:5029   */\n      dup7\n        /* \"#utility.yul\":5016:5038   */\n      add\n        /* \"#utility.yul\":4995:5048   */\n      tag_301\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4985:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4940:5058   */\n      pop\n        /* \"#utility.yul\":4591:5065   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5545   */\n    tag_75:\n        /* \"#utility.yul\":5139:5145   */\n      0x00\n        /* \"#utility.yul\":5147:5153   */\n      dup1\n        /* \"#utility.yul\":5196:5198   */\n      0x40\n        /* \"#utility.yul\":5184:5193   */\n      dup4\n        /* \"#utility.yul\":5175:5182   */\n      dup6\n        /* \"#utility.yul\":5171:5194   */\n      sub\n        /* \"#utility.yul\":5167:5199   */\n      slt\n        /* \"#utility.yul\":5164:5283   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5202:5281   */\n      tag_404\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5164:5283   */\n    tag_403:\n        /* \"#utility.yul\":5322:5323   */\n      0x00\n        /* \"#utility.yul\":5347:5400   */\n      tag_405\n        /* \"#utility.yul\":5392:5399   */\n      dup6\n        /* \"#utility.yul\":5383:5389   */\n      dup3\n        /* \"#utility.yul\":5372:5381   */\n      dup7\n        /* \"#utility.yul\":5368:5390   */\n      add\n        /* \"#utility.yul\":5347:5400   */\n      tag_293\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5337:5400   */\n      swap3\n      pop\n        /* \"#utility.yul\":5293:5410   */\n      pop\n        /* \"#utility.yul\":5449:5451   */\n      0x20\n        /* \"#utility.yul\":5475:5528   */\n      tag_406\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5511:5517   */\n      dup3\n        /* \"#utility.yul\":5500:5509   */\n      dup7\n        /* \"#utility.yul\":5496:5518   */\n      add\n        /* \"#utility.yul\":5475:5528   */\n      tag_293\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5465:5528   */\n      swap2\n      pop\n        /* \"#utility.yul\":5420:5538   */\n      pop\n        /* \"#utility.yul\":5071:5545   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5551:5661   */\n    tag_302:\n        /* \"#utility.yul\":5602:5609   */\n      0x00\n        /* \"#utility.yul\":5631:5655   */\n      tag_408\n        /* \"#utility.yul\":5649:5654   */\n      dup3\n        /* \"#utility.yul\":5631:5655   */\n      tag_291\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5620:5655   */\n      swap1\n      pop\n        /* \"#utility.yul\":5551:5661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5667:5817   */\n    tag_303:\n        /* \"#utility.yul\":5754:5792   */\n      tag_410\n        /* \"#utility.yul\":5786:5791   */\n      dup2\n        /* \"#utility.yul\":5754:5792   */\n      tag_302\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5747:5752   */\n      dup2\n        /* \"#utility.yul\":5744:5793   */\n      eq\n        /* \"#utility.yul\":5734:5811   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":5807:5808   */\n      0x00\n        /* \"#utility.yul\":5804:5805   */\n      dup1\n        /* \"#utility.yul\":5797:5809   */\n      revert\n        /* \"#utility.yul\":5734:5811   */\n    tag_411:\n        /* \"#utility.yul\":5667:5817   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:5990   */\n    tag_304:\n        /* \"#utility.yul\":5883:5888   */\n      0x00\n        /* \"#utility.yul\":5921:5927   */\n      dup2\n        /* \"#utility.yul\":5908:5928   */\n      calldataload\n        /* \"#utility.yul\":5899:5928   */\n      swap1\n      pop\n        /* \"#utility.yul\":5937:5984   */\n      tag_413\n        /* \"#utility.yul\":5978:5983   */\n      dup2\n        /* \"#utility.yul\":5937:5984   */\n      tag_303\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5823:5990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5996:6817   */\n    tag_93:\n        /* \"#utility.yul\":6110:6116   */\n      0x00\n        /* \"#utility.yul\":6118:6124   */\n      dup1\n        /* \"#utility.yul\":6126:6132   */\n      0x00\n        /* \"#utility.yul\":6134:6140   */\n      dup1\n        /* \"#utility.yul\":6183:6186   */\n      0x80\n        /* \"#utility.yul\":6171:6180   */\n      dup6\n        /* \"#utility.yul\":6162:6169   */\n      dup8\n        /* \"#utility.yul\":6158:6181   */\n      sub\n        /* \"#utility.yul\":6154:6187   */\n      slt\n        /* \"#utility.yul\":6151:6271   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6190:6269   */\n      tag_416\n      tag_283\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6151:6271   */\n    tag_415:\n        /* \"#utility.yul\":6310:6311   */\n      0x00\n        /* \"#utility.yul\":6335:6402   */\n      tag_417\n        /* \"#utility.yul\":6394:6401   */\n      dup8\n        /* \"#utility.yul\":6385:6391   */\n      dup3\n        /* \"#utility.yul\":6374:6383   */\n      dup9\n        /* \"#utility.yul\":6370:6392   */\n      add\n        /* \"#utility.yul\":6335:6402   */\n      tag_304\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6325:6402   */\n      swap5\n      pop\n        /* \"#utility.yul\":6281:6412   */\n      pop\n        /* \"#utility.yul\":6451:6453   */\n      0x20\n        /* \"#utility.yul\":6477:6530   */\n      tag_418\n        /* \"#utility.yul\":6522:6529   */\n      dup8\n        /* \"#utility.yul\":6513:6519   */\n      dup3\n        /* \"#utility.yul\":6502:6511   */\n      dup9\n        /* \"#utility.yul\":6498:6520   */\n      add\n        /* \"#utility.yul\":6477:6530   */\n      tag_301\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6467:6530   */\n      swap4\n      pop\n        /* \"#utility.yul\":6422:6540   */\n      pop\n        /* \"#utility.yul\":6579:6581   */\n      0x40\n        /* \"#utility.yul\":6605:6672   */\n      tag_419\n        /* \"#utility.yul\":6664:6671   */\n      dup8\n        /* \"#utility.yul\":6655:6661   */\n      dup3\n        /* \"#utility.yul\":6644:6653   */\n      dup9\n        /* \"#utility.yul\":6640:6662   */\n      add\n        /* \"#utility.yul\":6605:6672   */\n      tag_304\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6595:6672   */\n      swap3\n      pop\n        /* \"#utility.yul\":6550:6682   */\n      pop\n        /* \"#utility.yul\":6721:6723   */\n      0x60\n        /* \"#utility.yul\":6747:6800   */\n      tag_420\n        /* \"#utility.yul\":6792:6799   */\n      dup8\n        /* \"#utility.yul\":6783:6789   */\n      dup3\n        /* \"#utility.yul\":6772:6781   */\n      dup9\n        /* \"#utility.yul\":6768:6790   */\n      add\n        /* \"#utility.yul\":6747:6800   */\n      tag_301\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6737:6800   */\n      swap2\n      pop\n        /* \"#utility.yul\":6692:6810   */\n      pop\n        /* \"#utility.yul\":5996:6817   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6823:7152   */\n    tag_104:\n        /* \"#utility.yul\":6882:6888   */\n      0x00\n        /* \"#utility.yul\":6931:6933   */\n      0x20\n        /* \"#utility.yul\":6919:6928   */\n      dup3\n        /* \"#utility.yul\":6910:6917   */\n      dup5\n        /* \"#utility.yul\":6906:6929   */\n      sub\n        /* \"#utility.yul\":6902:6934   */\n      slt\n        /* \"#utility.yul\":6899:7018   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":6937:7016   */\n      tag_423\n      tag_283\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6899:7018   */\n    tag_422:\n        /* \"#utility.yul\":7057:7058   */\n      0x00\n        /* \"#utility.yul\":7082:7135   */\n      tag_424\n        /* \"#utility.yul\":7127:7134   */\n      dup5\n        /* \"#utility.yul\":7118:7124   */\n      dup3\n        /* \"#utility.yul\":7107:7116   */\n      dup6\n        /* \"#utility.yul\":7103:7125   */\n      add\n        /* \"#utility.yul\":7082:7135   */\n      tag_301\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7072:7135   */\n      swap2\n      pop\n        /* \"#utility.yul\":7028:7145   */\n      pop\n        /* \"#utility.yul\":6823:7152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7158:7218   */\n    tag_305:\n        /* \"#utility.yul\":7186:7189   */\n      0x00\n        /* \"#utility.yul\":7207:7212   */\n      dup2\n        /* \"#utility.yul\":7200:7212   */\n      swap1\n      pop\n        /* \"#utility.yul\":7158:7218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7224:7366   */\n    tag_306:\n        /* \"#utility.yul\":7274:7283   */\n      0x00\n        /* \"#utility.yul\":7307:7360   */\n      tag_427\n        /* \"#utility.yul\":7325:7359   */\n      tag_428\n        /* \"#utility.yul\":7334:7358   */\n      tag_429\n        /* \"#utility.yul\":7352:7357   */\n      dup5\n        /* \"#utility.yul\":7334:7358   */\n      tag_290\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7325:7359   */\n      tag_305\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7307:7360   */\n      tag_290\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7294:7360   */\n      swap1\n      pop\n        /* \"#utility.yul\":7224:7366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7372:7498   */\n    tag_307:\n        /* \"#utility.yul\":7422:7431   */\n      0x00\n        /* \"#utility.yul\":7455:7492   */\n      tag_431\n        /* \"#utility.yul\":7486:7491   */\n      dup3\n        /* \"#utility.yul\":7455:7492   */\n      tag_306\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7442:7492   */\n      swap1\n      pop\n        /* \"#utility.yul\":7372:7498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7504:7644   */\n    tag_308:\n        /* \"#utility.yul\":7568:7577   */\n      0x00\n        /* \"#utility.yul\":7601:7638   */\n      tag_433\n        /* \"#utility.yul\":7632:7637   */\n      dup3\n        /* \"#utility.yul\":7601:7638   */\n      tag_307\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7588:7638   */\n      swap1\n      pop\n        /* \"#utility.yul\":7504:7644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7650:7809   */\n    tag_309:\n        /* \"#utility.yul\":7751:7802   */\n      tag_435\n        /* \"#utility.yul\":7796:7801   */\n      dup2\n        /* \"#utility.yul\":7751:7802   */\n      tag_308\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7746:7749   */\n      dup3\n        /* \"#utility.yul\":7739:7803   */\n      mstore\n        /* \"#utility.yul\":7650:7809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7815:8065   */\n    tag_107:\n        /* \"#utility.yul\":7922:7926   */\n      0x00\n        /* \"#utility.yul\":7960:7962   */\n      0x20\n        /* \"#utility.yul\":7949:7958   */\n      dup3\n        /* \"#utility.yul\":7945:7963   */\n      add\n        /* \"#utility.yul\":7937:7963   */\n      swap1\n      pop\n        /* \"#utility.yul\":7973:8058   */\n      tag_437\n        /* \"#utility.yul\":8055:8056   */\n      0x00\n        /* \"#utility.yul\":8044:8053   */\n      dup4\n        /* \"#utility.yul\":8040:8057   */\n      add\n        /* \"#utility.yul\":8031:8037   */\n      dup5\n        /* \"#utility.yul\":7973:8058   */\n      tag_309\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7815:8065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8071:8251   */\n    tag_310:\n        /* \"#utility.yul\":8119:8196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8116:8117   */\n      0x00\n        /* \"#utility.yul\":8109:8197   */\n      mstore\n        /* \"#utility.yul\":8216:8220   */\n      0x11\n        /* \"#utility.yul\":8213:8214   */\n      0x04\n        /* \"#utility.yul\":8206:8221   */\n      mstore\n        /* \"#utility.yul\":8240:8244   */\n      0x24\n        /* \"#utility.yul\":8237:8238   */\n      0x00\n        /* \"#utility.yul\":8230:8245   */\n      revert\n        /* \"#utility.yul\":8257:8667   */\n    tag_129:\n        /* \"#utility.yul\":8297:8304   */\n      0x00\n        /* \"#utility.yul\":8320:8340   */\n      tag_440\n        /* \"#utility.yul\":8338:8339   */\n      dup3\n        /* \"#utility.yul\":8320:8340   */\n      tag_294\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8315:8340   */\n      swap2\n      pop\n        /* \"#utility.yul\":8354:8374   */\n      tag_441\n        /* \"#utility.yul\":8372:8373   */\n      dup4\n        /* \"#utility.yul\":8354:8374   */\n      tag_294\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8349:8374   */\n      swap3\n      pop\n        /* \"#utility.yul\":8409:8410   */\n      dup3\n        /* \"#utility.yul\":8406:8407   */\n      dup3\n        /* \"#utility.yul\":8402:8411   */\n      mul\n        /* \"#utility.yul\":8431:8461   */\n      tag_442\n        /* \"#utility.yul\":8449:8460   */\n      dup2\n        /* \"#utility.yul\":8431:8461   */\n      tag_294\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8420:8461   */\n      swap2\n      pop\n        /* \"#utility.yul\":8610:8611   */\n      dup3\n        /* \"#utility.yul\":8601:8608   */\n      dup3\n        /* \"#utility.yul\":8597:8612   */\n      div\n        /* \"#utility.yul\":8594:8595   */\n      dup5\n        /* \"#utility.yul\":8591:8613   */\n      eq\n        /* \"#utility.yul\":8571:8572   */\n      dup4\n        /* \"#utility.yul\":8564:8573   */\n      iszero\n        /* \"#utility.yul\":8544:8627   */\n      or\n        /* \"#utility.yul\":8521:8660   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":8640:8658   */\n      tag_444\n      tag_310\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8521:8660   */\n    tag_443:\n        /* \"#utility.yul\":8305:8667   */\n      pop\n        /* \"#utility.yul\":8257:8667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8673:8853   */\n    tag_311:\n        /* \"#utility.yul\":8721:8798   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8718:8719   */\n      0x00\n        /* \"#utility.yul\":8711:8799   */\n      mstore\n        /* \"#utility.yul\":8818:8822   */\n      0x12\n        /* \"#utility.yul\":8815:8816   */\n      0x04\n        /* \"#utility.yul\":8808:8823   */\n      mstore\n        /* \"#utility.yul\":8842:8846   */\n      0x24\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8832:8847   */\n      revert\n        /* \"#utility.yul\":8859:9044   */\n    tag_131:\n        /* \"#utility.yul\":8899:8900   */\n      0x00\n        /* \"#utility.yul\":8916:8936   */\n      tag_447\n        /* \"#utility.yul\":8934:8935   */\n      dup3\n        /* \"#utility.yul\":8916:8936   */\n      tag_294\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8911:8936   */\n      swap2\n      pop\n        /* \"#utility.yul\":8950:8970   */\n      tag_448\n        /* \"#utility.yul\":8968:8969   */\n      dup4\n        /* \"#utility.yul\":8950:8970   */\n      tag_294\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8945:8970   */\n      swap3\n      pop\n        /* \"#utility.yul\":8989:8990   */\n      dup3\n        /* \"#utility.yul\":8979:9014   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":8994:9012   */\n      tag_450\n      tag_311\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8979:9014   */\n    tag_449:\n        /* \"#utility.yul\":9036:9037   */\n      dup3\n        /* \"#utility.yul\":9033:9034   */\n      dup3\n        /* \"#utility.yul\":9029:9038   */\n      div\n        /* \"#utility.yul\":9024:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":8859:9044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9050:9219   */\n    tag_312:\n        /* \"#utility.yul\":9134:9145   */\n      0x00\n        /* \"#utility.yul\":9168:9174   */\n      dup3\n        /* \"#utility.yul\":9163:9166   */\n      dup3\n        /* \"#utility.yul\":9156:9175   */\n      mstore\n        /* \"#utility.yul\":9208:9212   */\n      0x20\n        /* \"#utility.yul\":9203:9206   */\n      dup3\n        /* \"#utility.yul\":9199:9213   */\n      add\n        /* \"#utility.yul\":9184:9213   */\n      swap1\n      pop\n        /* \"#utility.yul\":9050:9219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9225:9394   */\n    tag_313:\n        /* \"#utility.yul\":9365:9386   */\n      0x4173736574206e6f7420737570706f7274656400000000000000000000000000\n        /* \"#utility.yul\":9361:9362   */\n      0x00\n        /* \"#utility.yul\":9353:9359   */\n      dup3\n        /* \"#utility.yul\":9349:9363   */\n      add\n        /* \"#utility.yul\":9342:9387   */\n      mstore\n        /* \"#utility.yul\":9225:9394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9400:9766   */\n    tag_314:\n        /* \"#utility.yul\":9542:9545   */\n      0x00\n        /* \"#utility.yul\":9563:9630   */\n      tag_454\n        /* \"#utility.yul\":9627:9629   */\n      0x13\n        /* \"#utility.yul\":9622:9625   */\n      dup4\n        /* \"#utility.yul\":9563:9630   */\n      tag_312\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9556:9630   */\n      swap2\n      pop\n        /* \"#utility.yul\":9639:9732   */\n      tag_455\n        /* \"#utility.yul\":9728:9731   */\n      dup3\n        /* \"#utility.yul\":9639:9732   */\n      tag_313\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9757:9759   */\n      0x20\n        /* \"#utility.yul\":9752:9755   */\n      dup3\n        /* \"#utility.yul\":9748:9760   */\n      add\n        /* \"#utility.yul\":9741:9760   */\n      swap1\n      pop\n        /* \"#utility.yul\":9400:9766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9772:10191   */\n    tag_150:\n        /* \"#utility.yul\":9938:9942   */\n      0x00\n        /* \"#utility.yul\":9976:9978   */\n      0x20\n        /* \"#utility.yul\":9965:9974   */\n      dup3\n        /* \"#utility.yul\":9961:9979   */\n      add\n        /* \"#utility.yul\":9953:9979   */\n      swap1\n      pop\n        /* \"#utility.yul\":10025:10034   */\n      dup2\n        /* \"#utility.yul\":10019:10023   */\n      dup2\n        /* \"#utility.yul\":10015:10035   */\n      sub\n        /* \"#utility.yul\":10011:10012   */\n      0x00\n        /* \"#utility.yul\":10000:10009   */\n      dup4\n        /* \"#utility.yul\":9996:10013   */\n      add\n        /* \"#utility.yul\":9989:10036   */\n      mstore\n        /* \"#utility.yul\":10053:10184   */\n      tag_457\n        /* \"#utility.yul\":10179:10183   */\n      dup2\n        /* \"#utility.yul\":10053:10184   */\n      tag_314\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10045:10184   */\n      swap1\n      pop\n        /* \"#utility.yul\":9772:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10315   */\n    tag_315:\n        /* \"#utility.yul\":10284:10308   */\n      tag_459\n        /* \"#utility.yul\":10302:10307   */\n      dup2\n        /* \"#utility.yul\":10284:10308   */\n      tag_291\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10279:10282   */\n      dup3\n        /* \"#utility.yul\":10272:10309   */\n      mstore\n        /* \"#utility.yul\":10197:10315   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10321:10763   */\n    tag_153:\n        /* \"#utility.yul\":10470:10474   */\n      0x00\n        /* \"#utility.yul\":10508:10510   */\n      0x60\n        /* \"#utility.yul\":10497:10506   */\n      dup3\n        /* \"#utility.yul\":10493:10511   */\n      add\n        /* \"#utility.yul\":10485:10511   */\n      swap1\n      pop\n        /* \"#utility.yul\":10521:10592   */\n      tag_461\n        /* \"#utility.yul\":10589:10590   */\n      0x00\n        /* \"#utility.yul\":10578:10587   */\n      dup4\n        /* \"#utility.yul\":10574:10591   */\n      add\n        /* \"#utility.yul\":10565:10571   */\n      dup7\n        /* \"#utility.yul\":10521:10592   */\n      tag_315\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10602:10674   */\n      tag_462\n        /* \"#utility.yul\":10670:10672   */\n      0x20\n        /* \"#utility.yul\":10659:10668   */\n      dup4\n        /* \"#utility.yul\":10655:10673   */\n      add\n        /* \"#utility.yul\":10646:10652   */\n      dup6\n        /* \"#utility.yul\":10602:10674   */\n      tag_315\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10684:10756   */\n      tag_463\n        /* \"#utility.yul\":10752:10754   */\n      0x40\n        /* \"#utility.yul\":10741:10750   */\n      dup4\n        /* \"#utility.yul\":10737:10755   */\n      add\n        /* \"#utility.yul\":10728:10734   */\n      dup5\n        /* \"#utility.yul\":10684:10756   */\n      tag_295\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10321:10763   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10769:10885   */\n    tag_316:\n        /* \"#utility.yul\":10839:10860   */\n      tag_465\n        /* \"#utility.yul\":10854:10859   */\n      dup2\n        /* \"#utility.yul\":10839:10860   */\n      tag_288\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10832:10837   */\n      dup2\n        /* \"#utility.yul\":10829:10861   */\n      eq\n        /* \"#utility.yul\":10819:10879   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10875:10876   */\n      0x00\n        /* \"#utility.yul\":10872:10873   */\n      dup1\n        /* \"#utility.yul\":10865:10877   */\n      revert\n        /* \"#utility.yul\":10819:10879   */\n    tag_466:\n        /* \"#utility.yul\":10769:10885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10891:11028   */\n    tag_317:\n        /* \"#utility.yul\":10945:10950   */\n      0x00\n        /* \"#utility.yul\":10976:10982   */\n      dup2\n        /* \"#utility.yul\":10970:10983   */\n      mload\n        /* \"#utility.yul\":10961:10983   */\n      swap1\n      pop\n        /* \"#utility.yul\":10992:11022   */\n      tag_468\n        /* \"#utility.yul\":11016:11021   */\n      dup2\n        /* \"#utility.yul\":10992:11022   */\n      tag_316\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10891:11028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11034:11379   */\n    tag_157:\n        /* \"#utility.yul\":11101:11107   */\n      0x00\n        /* \"#utility.yul\":11150:11152   */\n      0x20\n        /* \"#utility.yul\":11138:11147   */\n      dup3\n        /* \"#utility.yul\":11129:11136   */\n      dup5\n        /* \"#utility.yul\":11125:11148   */\n      sub\n        /* \"#utility.yul\":11121:11153   */\n      slt\n        /* \"#utility.yul\":11118:11237   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11156:11235   */\n      tag_471\n      tag_283\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11118:11237   */\n    tag_470:\n        /* \"#utility.yul\":11276:11277   */\n      0x00\n        /* \"#utility.yul\":11301:11362   */\n      tag_472\n        /* \"#utility.yul\":11354:11361   */\n      dup5\n        /* \"#utility.yul\":11345:11351   */\n      dup3\n        /* \"#utility.yul\":11334:11343   */\n      dup6\n        /* \"#utility.yul\":11330:11352   */\n      add\n        /* \"#utility.yul\":11301:11362   */\n      tag_317\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11291:11362   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11372   */\n      pop\n        /* \"#utility.yul\":11034:11379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11385:11576   */\n    tag_159:\n        /* \"#utility.yul\":11425:11428   */\n      0x00\n        /* \"#utility.yul\":11444:11464   */\n      tag_474\n        /* \"#utility.yul\":11462:11463   */\n      dup3\n        /* \"#utility.yul\":11444:11464   */\n      tag_294\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11439:11464   */\n      swap2\n      pop\n        /* \"#utility.yul\":11478:11498   */\n      tag_475\n        /* \"#utility.yul\":11496:11497   */\n      dup4\n        /* \"#utility.yul\":11478:11498   */\n      tag_294\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11473:11498   */\n      swap3\n      pop\n        /* \"#utility.yul\":11521:11522   */\n      dup3\n        /* \"#utility.yul\":11518:11519   */\n      dup3\n        /* \"#utility.yul\":11514:11523   */\n      add\n        /* \"#utility.yul\":11507:11523   */\n      swap1\n      pop\n        /* \"#utility.yul\":11542:11545   */\n      dup1\n        /* \"#utility.yul\":11539:11540   */\n      dup3\n        /* \"#utility.yul\":11536:11546   */\n      gt\n        /* \"#utility.yul\":11533:11569   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":11549:11567   */\n      tag_477\n      tag_310\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11533:11569   */\n    tag_476:\n        /* \"#utility.yul\":11385:11576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11582:11762   */\n    tag_177:\n        /* \"#utility.yul\":11630:11707   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11627:11628   */\n      0x00\n        /* \"#utility.yul\":11620:11708   */\n      mstore\n        /* \"#utility.yul\":11727:11731   */\n      0x32\n        /* \"#utility.yul\":11724:11725   */\n      0x04\n        /* \"#utility.yul\":11717:11732   */\n      mstore\n        /* \"#utility.yul\":11751:11755   */\n      0x24\n        /* \"#utility.yul\":11748:11749   */\n      0x00\n        /* \"#utility.yul\":11741:11756   */\n      revert\n        /* \"#utility.yul\":11768:11942   */\n    tag_318:\n        /* \"#utility.yul\":11908:11934   */\n      0x4f7261636c65206e6f742073657420666f722061737365740000000000000000\n        /* \"#utility.yul\":11904:11905   */\n      0x00\n        /* \"#utility.yul\":11896:11902   */\n      dup3\n        /* \"#utility.yul\":11892:11906   */\n      add\n        /* \"#utility.yul\":11885:11935   */\n      mstore\n        /* \"#utility.yul\":11768:11942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12314   */\n    tag_319:\n        /* \"#utility.yul\":12090:12093   */\n      0x00\n        /* \"#utility.yul\":12111:12178   */\n      tag_481\n        /* \"#utility.yul\":12175:12177   */\n      0x18\n        /* \"#utility.yul\":12170:12173   */\n      dup4\n        /* \"#utility.yul\":12111:12178   */\n      tag_312\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12104:12178   */\n      swap2\n      pop\n        /* \"#utility.yul\":12187:12280   */\n      tag_482\n        /* \"#utility.yul\":12276:12279   */\n      dup3\n        /* \"#utility.yul\":12187:12280   */\n      tag_318\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12305:12307   */\n      0x20\n        /* \"#utility.yul\":12300:12303   */\n      dup3\n        /* \"#utility.yul\":12296:12308   */\n      add\n        /* \"#utility.yul\":12289:12308   */\n      swap1\n      pop\n        /* \"#utility.yul\":11948:12314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12739   */\n    tag_186:\n        /* \"#utility.yul\":12486:12490   */\n      0x00\n        /* \"#utility.yul\":12524:12526   */\n      0x20\n        /* \"#utility.yul\":12513:12522   */\n      dup3\n        /* \"#utility.yul\":12509:12527   */\n      add\n        /* \"#utility.yul\":12501:12527   */\n      swap1\n      pop\n        /* \"#utility.yul\":12573:12582   */\n      dup2\n        /* \"#utility.yul\":12567:12571   */\n      dup2\n        /* \"#utility.yul\":12563:12583   */\n      sub\n        /* \"#utility.yul\":12559:12560   */\n      0x00\n        /* \"#utility.yul\":12548:12557   */\n      dup4\n        /* \"#utility.yul\":12544:12561   */\n      add\n        /* \"#utility.yul\":12537:12584   */\n      mstore\n        /* \"#utility.yul\":12601:12732   */\n      tag_484\n        /* \"#utility.yul\":12727:12731   */\n      dup2\n        /* \"#utility.yul\":12601:12732   */\n      tag_319\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12593:12732   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12745:12850   */\n    tag_320:\n        /* \"#utility.yul\":12781:12788   */\n      0x00\n        /* \"#utility.yul\":12821:12843   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":12814:12819   */\n      dup3\n        /* \"#utility.yul\":12810:12844   */\n      and\n        /* \"#utility.yul\":12799:12844   */\n      swap1\n      pop\n        /* \"#utility.yul\":12745:12850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12856:12976   */\n    tag_321:\n        /* \"#utility.yul\":12928:12951   */\n      tag_487\n        /* \"#utility.yul\":12945:12950   */\n      dup2\n        /* \"#utility.yul\":12928:12951   */\n      tag_320\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12921:12926   */\n      dup2\n        /* \"#utility.yul\":12918:12952   */\n      eq\n        /* \"#utility.yul\":12908:12970   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":12966:12967   */\n      0x00\n        /* \"#utility.yul\":12963:12964   */\n      dup1\n        /* \"#utility.yul\":12956:12968   */\n      revert\n        /* \"#utility.yul\":12908:12970   */\n    tag_488:\n        /* \"#utility.yul\":12856:12976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12982:13123   */\n    tag_322:\n        /* \"#utility.yul\":13038:13043   */\n      0x00\n        /* \"#utility.yul\":13069:13075   */\n      dup2\n        /* \"#utility.yul\":13063:13076   */\n      mload\n        /* \"#utility.yul\":13054:13076   */\n      swap1\n      pop\n        /* \"#utility.yul\":13085:13117   */\n      tag_490\n        /* \"#utility.yul\":13111:13116   */\n      dup2\n        /* \"#utility.yul\":13085:13117   */\n      tag_321\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12982:13123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13129:13205   */\n    tag_323:\n        /* \"#utility.yul\":13165:13172   */\n      0x00\n        /* \"#utility.yul\":13194:13199   */\n      dup2\n        /* \"#utility.yul\":13183:13199   */\n      swap1\n      pop\n        /* \"#utility.yul\":13129:13205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13211:13331   */\n    tag_324:\n        /* \"#utility.yul\":13283:13306   */\n      tag_493\n        /* \"#utility.yul\":13300:13305   */\n      dup2\n        /* \"#utility.yul\":13283:13306   */\n      tag_323\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13276:13281   */\n      dup2\n        /* \"#utility.yul\":13273:13307   */\n      eq\n        /* \"#utility.yul\":13263:13325   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":13321:13322   */\n      0x00\n        /* \"#utility.yul\":13318:13319   */\n      dup1\n        /* \"#utility.yul\":13311:13323   */\n      revert\n        /* \"#utility.yul\":13263:13325   */\n    tag_494:\n        /* \"#utility.yul\":13211:13331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13337:13478   */\n    tag_325:\n        /* \"#utility.yul\":13393:13398   */\n      0x00\n        /* \"#utility.yul\":13424:13430   */\n      dup2\n        /* \"#utility.yul\":13418:13431   */\n      mload\n        /* \"#utility.yul\":13409:13431   */\n      swap1\n      pop\n        /* \"#utility.yul\":13440:13472   */\n      tag_496\n        /* \"#utility.yul\":13466:13471   */\n      dup2\n        /* \"#utility.yul\":13440:13472   */\n      tag_324\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13337:13478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13484:13627   */\n    tag_326:\n        /* \"#utility.yul\":13541:13546   */\n      0x00\n        /* \"#utility.yul\":13572:13578   */\n      dup2\n        /* \"#utility.yul\":13566:13579   */\n      mload\n        /* \"#utility.yul\":13557:13579   */\n      swap1\n      pop\n        /* \"#utility.yul\":13588:13621   */\n      tag_498\n        /* \"#utility.yul\":13615:13620   */\n      dup2\n        /* \"#utility.yul\":13588:13621   */\n      tag_300\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13484:13627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13633:14604   */\n    tag_190:\n        /* \"#utility.yul\":13736:13742   */\n      0x00\n        /* \"#utility.yul\":13744:13750   */\n      dup1\n        /* \"#utility.yul\":13752:13758   */\n      0x00\n        /* \"#utility.yul\":13760:13766   */\n      dup1\n        /* \"#utility.yul\":13768:13774   */\n      0x00\n        /* \"#utility.yul\":13817:13820   */\n      0xa0\n        /* \"#utility.yul\":13805:13814   */\n      dup7\n        /* \"#utility.yul\":13796:13803   */\n      dup9\n        /* \"#utility.yul\":13792:13815   */\n      sub\n        /* \"#utility.yul\":13788:13821   */\n      slt\n        /* \"#utility.yul\":13785:13905   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":13824:13903   */\n      tag_501\n      tag_283\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13785:13905   */\n    tag_500:\n        /* \"#utility.yul\":13944:13945   */\n      0x00\n        /* \"#utility.yul\":13969:14032   */\n      tag_502\n        /* \"#utility.yul\":14024:14031   */\n      dup9\n        /* \"#utility.yul\":14015:14021   */\n      dup3\n        /* \"#utility.yul\":14004:14013   */\n      dup10\n        /* \"#utility.yul\":14000:14022   */\n      add\n        /* \"#utility.yul\":13969:14032   */\n      tag_322\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13959:14032   */\n      swap6\n      pop\n        /* \"#utility.yul\":13915:14042   */\n      pop\n        /* \"#utility.yul\":14081:14083   */\n      0x20\n        /* \"#utility.yul\":14107:14170   */\n      tag_503\n        /* \"#utility.yul\":14162:14169   */\n      dup9\n        /* \"#utility.yul\":14153:14159   */\n      dup3\n        /* \"#utility.yul\":14142:14151   */\n      dup10\n        /* \"#utility.yul\":14138:14160   */\n      add\n        /* \"#utility.yul\":14107:14170   */\n      tag_325\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14097:14170   */\n      swap5\n      pop\n        /* \"#utility.yul\":14052:14180   */\n      pop\n        /* \"#utility.yul\":14219:14221   */\n      0x40\n        /* \"#utility.yul\":14245:14309   */\n      tag_504\n        /* \"#utility.yul\":14301:14308   */\n      dup9\n        /* \"#utility.yul\":14292:14298   */\n      dup3\n        /* \"#utility.yul\":14281:14290   */\n      dup10\n        /* \"#utility.yul\":14277:14299   */\n      add\n        /* \"#utility.yul\":14245:14309   */\n      tag_326\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14235:14309   */\n      swap4\n      pop\n        /* \"#utility.yul\":14190:14319   */\n      pop\n        /* \"#utility.yul\":14358:14360   */\n      0x60\n        /* \"#utility.yul\":14384:14448   */\n      tag_505\n        /* \"#utility.yul\":14440:14447   */\n      dup9\n        /* \"#utility.yul\":14431:14437   */\n      dup3\n        /* \"#utility.yul\":14420:14429   */\n      dup10\n        /* \"#utility.yul\":14416:14438   */\n      add\n        /* \"#utility.yul\":14384:14448   */\n      tag_326\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14374:14448   */\n      swap3\n      pop\n        /* \"#utility.yul\":14329:14458   */\n      pop\n        /* \"#utility.yul\":14497:14500   */\n      0x80\n        /* \"#utility.yul\":14524:14587   */\n      tag_506\n        /* \"#utility.yul\":14579:14586   */\n      dup9\n        /* \"#utility.yul\":14570:14576   */\n      dup3\n        /* \"#utility.yul\":14559:14568   */\n      dup10\n        /* \"#utility.yul\":14555:14577   */\n      add\n        /* \"#utility.yul\":14524:14587   */\n      tag_322\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14514:14587   */\n      swap2\n      pop\n        /* \"#utility.yul\":14468:14597   */\n      pop\n        /* \"#utility.yul\":13633:14604   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14610:14778   */\n    tag_327:\n        /* \"#utility.yul\":14750:14770   */\n      0x496e76616c696420707269636520646174610000000000000000000000000000\n        /* \"#utility.yul\":14746:14747   */\n      0x00\n        /* \"#utility.yul\":14738:14744   */\n      dup3\n        /* \"#utility.yul\":14734:14748   */\n      add\n        /* \"#utility.yul\":14727:14771   */\n      mstore\n        /* \"#utility.yul\":14610:14778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14784:15150   */\n    tag_328:\n        /* \"#utility.yul\":14926:14929   */\n      0x00\n        /* \"#utility.yul\":14947:15014   */\n      tag_509\n        /* \"#utility.yul\":15011:15013   */\n      0x12\n        /* \"#utility.yul\":15006:15009   */\n      dup4\n        /* \"#utility.yul\":14947:15014   */\n      tag_312\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14940:15014   */\n      swap2\n      pop\n        /* \"#utility.yul\":15023:15116   */\n      tag_510\n        /* \"#utility.yul\":15112:15115   */\n      dup3\n        /* \"#utility.yul\":15023:15116   */\n      tag_327\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15141:15143   */\n      0x20\n        /* \"#utility.yul\":15136:15139   */\n      dup3\n        /* \"#utility.yul\":15132:15144   */\n      add\n        /* \"#utility.yul\":15125:15144   */\n      swap1\n      pop\n        /* \"#utility.yul\":14784:15150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15156:15575   */\n    tag_193:\n        /* \"#utility.yul\":15322:15326   */\n      0x00\n        /* \"#utility.yul\":15360:15362   */\n      0x20\n        /* \"#utility.yul\":15349:15358   */\n      dup3\n        /* \"#utility.yul\":15345:15363   */\n      add\n        /* \"#utility.yul\":15337:15363   */\n      swap1\n      pop\n        /* \"#utility.yul\":15409:15418   */\n      dup2\n        /* \"#utility.yul\":15403:15407   */\n      dup2\n        /* \"#utility.yul\":15399:15419   */\n      sub\n        /* \"#utility.yul\":15395:15396   */\n      0x00\n        /* \"#utility.yul\":15384:15393   */\n      dup4\n        /* \"#utility.yul\":15380:15397   */\n      add\n        /* \"#utility.yul\":15373:15420   */\n      mstore\n        /* \"#utility.yul\":15437:15568   */\n      tag_512\n        /* \"#utility.yul\":15563:15567   */\n      dup2\n        /* \"#utility.yul\":15437:15568   */\n      tag_328\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15429:15568   */\n      swap1\n      pop\n        /* \"#utility.yul\":15156:15575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15581:15667   */\n    tag_329:\n        /* \"#utility.yul\":15616:15623   */\n      0x00\n        /* \"#utility.yul\":15656:15660   */\n      0xff\n        /* \"#utility.yul\":15649:15654   */\n      dup3\n        /* \"#utility.yul\":15645:15661   */\n      and\n        /* \"#utility.yul\":15634:15661   */\n      swap1\n      pop\n        /* \"#utility.yul\":15581:15667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15673:15791   */\n    tag_330:\n        /* \"#utility.yul\":15744:15766   */\n      tag_515\n        /* \"#utility.yul\":15760:15765   */\n      dup2\n        /* \"#utility.yul\":15744:15766   */\n      tag_329\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15737:15742   */\n      dup2\n        /* \"#utility.yul\":15734:15767   */\n      eq\n        /* \"#utility.yul\":15724:15785   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":15781:15782   */\n      0x00\n        /* \"#utility.yul\":15778:15779   */\n      dup1\n        /* \"#utility.yul\":15771:15783   */\n      revert\n        /* \"#utility.yul\":15724:15785   */\n    tag_516:\n        /* \"#utility.yul\":15673:15791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15797:15936   */\n    tag_331:\n        /* \"#utility.yul\":15852:15857   */\n      0x00\n        /* \"#utility.yul\":15883:15889   */\n      dup2\n        /* \"#utility.yul\":15877:15890   */\n      mload\n        /* \"#utility.yul\":15868:15890   */\n      swap1\n      pop\n        /* \"#utility.yul\":15899:15930   */\n      tag_518\n        /* \"#utility.yul\":15924:15929   */\n      dup2\n        /* \"#utility.yul\":15899:15930   */\n      tag_330\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15797:15936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15942:16289   */\n    tag_197:\n        /* \"#utility.yul\":16010:16016   */\n      0x00\n        /* \"#utility.yul\":16059:16061   */\n      0x20\n        /* \"#utility.yul\":16047:16056   */\n      dup3\n        /* \"#utility.yul\":16038:16045   */\n      dup5\n        /* \"#utility.yul\":16034:16057   */\n      sub\n        /* \"#utility.yul\":16030:16062   */\n      slt\n        /* \"#utility.yul\":16027:16146   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":16065:16144   */\n      tag_521\n      tag_283\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16027:16146   */\n    tag_520:\n        /* \"#utility.yul\":16185:16186   */\n      0x00\n        /* \"#utility.yul\":16210:16272   */\n      tag_522\n        /* \"#utility.yul\":16264:16271   */\n      dup5\n        /* \"#utility.yul\":16255:16261   */\n      dup3\n        /* \"#utility.yul\":16244:16253   */\n      dup6\n        /* \"#utility.yul\":16240:16262   */\n      add\n        /* \"#utility.yul\":16210:16272   */\n      tag_331\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16200:16272   */\n      swap2\n      pop\n        /* \"#utility.yul\":16156:16282   */\n      pop\n        /* \"#utility.yul\":15942:16289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16295:16397   */\n    tag_332:\n        /* \"#utility.yul\":16337:16345   */\n      0x00\n        /* \"#utility.yul\":16384:16389   */\n      dup2\n        /* \"#utility.yul\":16381:16382   */\n      0x01\n        /* \"#utility.yul\":16377:16390   */\n      shr\n        /* \"#utility.yul\":16356:16390   */\n      swap1\n      pop\n        /* \"#utility.yul\":16295:16397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16403:17251   */\n    tag_333:\n        /* \"#utility.yul\":16464:16469   */\n      0x00\n        /* \"#utility.yul\":16471:16475   */\n      dup1\n        /* \"#utility.yul\":16495:16501   */\n      dup3\n        /* \"#utility.yul\":16486:16501   */\n      swap2\n      pop\n        /* \"#utility.yul\":16519:16524   */\n      dup4\n        /* \"#utility.yul\":16510:16524   */\n      swap1\n      pop\n        /* \"#utility.yul\":16533:17245   */\n    tag_525:\n        /* \"#utility.yul\":16554:16555   */\n      0x01\n        /* \"#utility.yul\":16544:16552   */\n      dup6\n        /* \"#utility.yul\":16541:16556   */\n      gt\n        /* \"#utility.yul\":16533:17245   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":16649:16653   */\n      dup1\n        /* \"#utility.yul\":16644:16647   */\n      dup7\n        /* \"#utility.yul\":16640:16654   */\n      div\n        /* \"#utility.yul\":16634:16638   */\n      dup2\n        /* \"#utility.yul\":16631:16655   */\n      gt\n        /* \"#utility.yul\":16628:16678   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":16658:16676   */\n      tag_529\n      tag_310\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16628:16678   */\n    tag_528:\n        /* \"#utility.yul\":16708:16709   */\n      0x01\n        /* \"#utility.yul\":16698:16706   */\n      dup6\n        /* \"#utility.yul\":16694:16710   */\n      and\n        /* \"#utility.yul\":16691:17142   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":17123:17127   */\n      dup1\n        /* \"#utility.yul\":17116:17121   */\n      dup3\n        /* \"#utility.yul\":17112:17128   */\n      mul\n        /* \"#utility.yul\":17103:17128   */\n      swap2\n      pop\n        /* \"#utility.yul\":16691:17142   */\n    tag_530:\n        /* \"#utility.yul\":17173:17177   */\n      dup1\n        /* \"#utility.yul\":17167:17171   */\n      dup2\n        /* \"#utility.yul\":17163:17178   */\n      mul\n        /* \"#utility.yul\":17155:17178   */\n      swap1\n      pop\n        /* \"#utility.yul\":17203:17235   */\n      tag_531\n        /* \"#utility.yul\":17226:17234   */\n      dup6\n        /* \"#utility.yul\":17203:17235   */\n      tag_332\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":17191:17235   */\n      swap5\n      pop\n        /* \"#utility.yul\":16533:17245   */\n      jump(tag_525)\n    tag_527:\n        /* \"#utility.yul\":16403:17251   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17257:18330   */\n    tag_334:\n        /* \"#utility.yul\":17311:17316   */\n      0x00\n        /* \"#utility.yul\":17502:17510   */\n      dup3\n        /* \"#utility.yul\":17492:17532   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":17523:17524   */\n      0x01\n        /* \"#utility.yul\":17514:17524   */\n      swap1\n      pop\n        /* \"#utility.yul\":17525:17530   */\n      jump(tag_532)\n        /* \"#utility.yul\":17492:17532   */\n    tag_533:\n        /* \"#utility.yul\":17551:17555   */\n      dup2\n        /* \"#utility.yul\":17541:17577   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":17568:17569   */\n      0x00\n        /* \"#utility.yul\":17559:17569   */\n      swap1\n      pop\n        /* \"#utility.yul\":17570:17575   */\n      jump(tag_532)\n        /* \"#utility.yul\":17541:17577   */\n    tag_534:\n        /* \"#utility.yul\":17637:17641   */\n      dup2\n        /* \"#utility.yul\":17685:17686   */\n      0x01\n        /* \"#utility.yul\":17680:17707   */\n      dup2\n      eq\n      tag_536\n      jumpi\n        /* \"#utility.yul\":17721:17722   */\n      0x02\n        /* \"#utility.yul\":17716:17907   */\n      dup2\n      eq\n      tag_537\n      jumpi\n        /* \"#utility.yul\":17630:17907   */\n      jump(tag_535)\n        /* \"#utility.yul\":17680:17707   */\n    tag_536:\n        /* \"#utility.yul\":17698:17699   */\n      0x01\n        /* \"#utility.yul\":17689:17699   */\n      swap2\n      pop\n        /* \"#utility.yul\":17700:17705   */\n      pop\n      jump(tag_532)\n        /* \"#utility.yul\":17716:17907   */\n    tag_537:\n        /* \"#utility.yul\":17761:17764   */\n      0xff\n        /* \"#utility.yul\":17751:17759   */\n      dup5\n        /* \"#utility.yul\":17748:17765   */\n      gt\n        /* \"#utility.yul\":17745:17788   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":17768:17786   */\n      tag_539\n      tag_310\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17745:17788   */\n    tag_538:\n        /* \"#utility.yul\":17817:17825   */\n      dup4\n        /* \"#utility.yul\":17814:17815   */\n      0x02\n        /* \"#utility.yul\":17810:17826   */\n      exp\n        /* \"#utility.yul\":17801:17826   */\n      swap2\n      pop\n        /* \"#utility.yul\":17852:17855   */\n      dup5\n        /* \"#utility.yul\":17845:17850   */\n      dup3\n        /* \"#utility.yul\":17842:17856   */\n      gt\n        /* \"#utility.yul\":17839:17879   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":17859:17877   */\n      tag_541\n      tag_310\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17839:17879   */\n    tag_540:\n        /* \"#utility.yul\":17892:17897   */\n      pop\n      jump(tag_532)\n        /* \"#utility.yul\":17630:17907   */\n    tag_535:\n      pop\n        /* \"#utility.yul\":18016:18018   */\n      0x20\n        /* \"#utility.yul\":18006:18014   */\n      dup4\n        /* \"#utility.yul\":18003:18019   */\n      lt\n        /* \"#utility.yul\":17997:18000   */\n      0x0133\n        /* \"#utility.yul\":17991:17995   */\n      dup4\n        /* \"#utility.yul\":17988:18001   */\n      lt\n        /* \"#utility.yul\":17984:18020   */\n      and\n        /* \"#utility.yul\":17966:17968   */\n      0x4e\n        /* \"#utility.yul\":17956:17964   */\n      dup5\n        /* \"#utility.yul\":17953:17969   */\n      lt\n        /* \"#utility.yul\":17948:17950   */\n      0x0b\n        /* \"#utility.yul\":17942:17946   */\n      dup5\n        /* \"#utility.yul\":17939:17951   */\n      lt\n        /* \"#utility.yul\":17935:17970   */\n      and\n        /* \"#utility.yul\":17919:18030   */\n      or\n        /* \"#utility.yul\":17916:18162   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":18072:18080   */\n      dup3\n        /* \"#utility.yul\":18066:18070   */\n      dup3\n        /* \"#utility.yul\":18062:18081   */\n      exp\n        /* \"#utility.yul\":18053:18081   */\n      swap1\n      pop\n        /* \"#utility.yul\":18107:18110   */\n      dup4\n        /* \"#utility.yul\":18100:18105   */\n      dup2\n        /* \"#utility.yul\":18097:18111   */\n      gt\n        /* \"#utility.yul\":18094:18134   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":18114:18132   */\n      tag_544\n      tag_310\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18094:18134   */\n    tag_543:\n        /* \"#utility.yul\":18147:18152   */\n      jump(tag_532)\n        /* \"#utility.yul\":17916:18162   */\n    tag_542:\n        /* \"#utility.yul\":18187:18229   */\n      tag_545\n        /* \"#utility.yul\":18225:18228   */\n      dup5\n        /* \"#utility.yul\":18215:18223   */\n      dup5\n        /* \"#utility.yul\":18209:18213   */\n      dup5\n        /* \"#utility.yul\":18206:18207   */\n      0x01\n        /* \"#utility.yul\":18187:18229   */\n      tag_333\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":18172:18229   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":18261:18265   */\n      dup2\n        /* \"#utility.yul\":18256:18259   */\n      dup5\n        /* \"#utility.yul\":18252:18266   */\n      div\n        /* \"#utility.yul\":18245:18250   */\n      dup2\n        /* \"#utility.yul\":18242:18267   */\n      gt\n        /* \"#utility.yul\":18239:18290   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":18270:18288   */\n      tag_547\n      tag_310\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":18239:18290   */\n    tag_546:\n        /* \"#utility.yul\":18319:18323   */\n      dup2\n        /* \"#utility.yul\":18312:18317   */\n      dup2\n        /* \"#utility.yul\":18308:18324   */\n      mul\n        /* \"#utility.yul\":18299:18324   */\n      swap1\n      pop\n        /* \"#utility.yul\":17257:18330   */\n    tag_532:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18336:18621   */\n    tag_199:\n        /* \"#utility.yul\":18396:18401   */\n      0x00\n        /* \"#utility.yul\":18420:18443   */\n      tag_549\n        /* \"#utility.yul\":18438:18442   */\n      dup3\n        /* \"#utility.yul\":18420:18443   */\n      tag_294\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18412:18443   */\n      swap2\n      pop\n        /* \"#utility.yul\":18464:18491   */\n      tag_550\n        /* \"#utility.yul\":18482:18490   */\n      dup4\n        /* \"#utility.yul\":18464:18491   */\n      tag_294\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":18452:18491   */\n      swap3\n      pop\n        /* \"#utility.yul\":18510:18614   */\n      tag_551\n        /* \"#utility.yul\":18547:18613   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18537:18545   */\n      dup5\n        /* \"#utility.yul\":18531:18535   */\n      dup5\n        /* \"#utility.yul\":18510:18614   */\n      tag_334\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18501:18614   */\n      swap1\n      pop\n        /* \"#utility.yul\":18336:18621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18627:18821   */\n    tag_208:\n        /* \"#utility.yul\":18667:18671   */\n      0x00\n        /* \"#utility.yul\":18687:18707   */\n      tag_553\n        /* \"#utility.yul\":18705:18706   */\n      dup3\n        /* \"#utility.yul\":18687:18707   */\n      tag_294\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18682:18707   */\n      swap2\n      pop\n        /* \"#utility.yul\":18721:18741   */\n      tag_554\n        /* \"#utility.yul\":18739:18740   */\n      dup4\n        /* \"#utility.yul\":18721:18741   */\n      tag_294\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":18716:18741   */\n      swap3\n      pop\n        /* \"#utility.yul\":18765:18766   */\n      dup3\n        /* \"#utility.yul\":18762:18763   */\n      dup3\n        /* \"#utility.yul\":18758:18767   */\n      sub\n        /* \"#utility.yul\":18750:18767   */\n      swap1\n      pop\n        /* \"#utility.yul\":18789:18790   */\n      dup2\n        /* \"#utility.yul\":18783:18787   */\n      dup2\n        /* \"#utility.yul\":18780:18791   */\n      gt\n        /* \"#utility.yul\":18777:18814   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":18794:18812   */\n      tag_556\n      tag_310\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18777:18814   */\n    tag_555:\n        /* \"#utility.yul\":18627:18821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18827:18997   */\n    tag_335:\n        /* \"#utility.yul\":18967:18989   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":18963:18964   */\n      0x00\n        /* \"#utility.yul\":18955:18961   */\n      dup3\n        /* \"#utility.yul\":18951:18965   */\n      add\n        /* \"#utility.yul\":18944:18990   */\n      mstore\n        /* \"#utility.yul\":18827:18997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19003:19369   */\n    tag_336:\n        /* \"#utility.yul\":19145:19148   */\n      0x00\n        /* \"#utility.yul\":19166:19233   */\n      tag_559\n        /* \"#utility.yul\":19230:19232   */\n      0x14\n        /* \"#utility.yul\":19225:19228   */\n      dup4\n        /* \"#utility.yul\":19166:19233   */\n      tag_312\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19159:19233   */\n      swap2\n      pop\n        /* \"#utility.yul\":19242:19335   */\n      tag_560\n        /* \"#utility.yul\":19331:19334   */\n      dup3\n        /* \"#utility.yul\":19242:19335   */\n      tag_335\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19360:19362   */\n      0x20\n        /* \"#utility.yul\":19355:19358   */\n      dup3\n        /* \"#utility.yul\":19351:19363   */\n      add\n        /* \"#utility.yul\":19344:19363   */\n      swap1\n      pop\n        /* \"#utility.yul\":19003:19369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19375:19794   */\n    tag_221:\n        /* \"#utility.yul\":19541:19545   */\n      0x00\n        /* \"#utility.yul\":19579:19581   */\n      0x20\n        /* \"#utility.yul\":19568:19577   */\n      dup3\n        /* \"#utility.yul\":19564:19582   */\n      add\n        /* \"#utility.yul\":19556:19582   */\n      swap1\n      pop\n        /* \"#utility.yul\":19628:19637   */\n      dup2\n        /* \"#utility.yul\":19622:19626   */\n      dup2\n        /* \"#utility.yul\":19618:19638   */\n      sub\n        /* \"#utility.yul\":19614:19615   */\n      0x00\n        /* \"#utility.yul\":19603:19612   */\n      dup4\n        /* \"#utility.yul\":19599:19616   */\n      add\n        /* \"#utility.yul\":19592:19639   */\n      mstore\n        /* \"#utility.yul\":19656:19787   */\n      tag_562\n        /* \"#utility.yul\":19782:19786   */\n      dup2\n        /* \"#utility.yul\":19656:19787   */\n      tag_336\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19648:19787   */\n      swap1\n      pop\n        /* \"#utility.yul\":19375:19794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19800:20132   */\n    tag_227:\n        /* \"#utility.yul\":19921:19925   */\n      0x00\n        /* \"#utility.yul\":19959:19961   */\n      0x40\n        /* \"#utility.yul\":19948:19957   */\n      dup3\n        /* \"#utility.yul\":19944:19962   */\n      add\n        /* \"#utility.yul\":19936:19962   */\n      swap1\n      pop\n        /* \"#utility.yul\":19972:20043   */\n      tag_564\n        /* \"#utility.yul\":20040:20041   */\n      0x00\n        /* \"#utility.yul\":20029:20038   */\n      dup4\n        /* \"#utility.yul\":20025:20042   */\n      add\n        /* \"#utility.yul\":20016:20022   */\n      dup6\n        /* \"#utility.yul\":19972:20043   */\n      tag_315\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":20053:20125   */\n      tag_565\n        /* \"#utility.yul\":20121:20123   */\n      0x20\n        /* \"#utility.yul\":20110:20119   */\n      dup4\n        /* \"#utility.yul\":20106:20124   */\n      add\n        /* \"#utility.yul\":20097:20103   */\n      dup5\n        /* \"#utility.yul\":20053:20125   */\n      tag_295\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19800:20132   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20138:20470   */\n    tag_281:\n        /* \"#utility.yul\":20259:20263   */\n      0x00\n        /* \"#utility.yul\":20297:20299   */\n      0x40\n        /* \"#utility.yul\":20286:20295   */\n      dup3\n        /* \"#utility.yul\":20282:20300   */\n      add\n        /* \"#utility.yul\":20274:20300   */\n      swap1\n      pop\n        /* \"#utility.yul\":20310:20381   */\n      tag_567\n        /* \"#utility.yul\":20378:20379   */\n      0x00\n        /* \"#utility.yul\":20367:20376   */\n      dup4\n        /* \"#utility.yul\":20363:20380   */\n      add\n        /* \"#utility.yul\":20354:20360   */\n      dup6\n        /* \"#utility.yul\":20310:20381   */\n      tag_315\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":20391:20463   */\n      tag_568\n        /* \"#utility.yul\":20459:20461   */\n      0x20\n        /* \"#utility.yul\":20448:20457   */\n      dup4\n        /* \"#utility.yul\":20444:20462   */\n      add\n        /* \"#utility.yul\":20435:20441   */\n      dup5\n        /* \"#utility.yul\":20391:20463   */\n      tag_299\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20138:20470   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203122113be70ffbcfa896301971a9ee8c4aea628265c5674c75ed26967e7e4c9864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_685": {
									"entryPoint": null,
									"id": 685,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_139": {
									"entryPoint": 564,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_160": {
									"entryPoint": 858,
									"id": 160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_302": {
									"entryPoint": 600,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_514": {
									"entryPoint": 851,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setRoleAdmin_263": {
									"entryPoint": 440,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_174": {
									"entryPoint": 536,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_193": {
									"entryPoint": 382,
									"id": 193,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_126": {
									"entryPoint": 950,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_address_fromMemory": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5528:8",
										"nodeType": "YulBlock",
										"src": "0:5528:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "934:28:8",
													"nodeType": "YulBlock",
													"src": "934:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:8",
																		"nodeType": "YulLiteral",
																		"src": "951:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:8",
																		"nodeType": "YulLiteral",
																		"src": "954:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:8"
																},
																"nativeSrc": "944:12:8",
																"nodeType": "YulFunctionCall",
																"src": "944:12:8"
															},
															"nativeSrc": "944:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:8"
											},
											{
												"body": {
													"nativeSrc": "1016:54:8",
													"nodeType": "YulBlock",
													"src": "1016:54:8",
													"statements": [
														{
															"nativeSrc": "1026:38:8",
															"nodeType": "YulAssignment",
															"src": "1026:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1044:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1044:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1040:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:8"
																		},
																		"nativeSrc": "1040:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1040:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1056:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:8"
																		},
																		"nativeSrc": "1056:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1056:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1036:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:8"
																},
																"nativeSrc": "1036:28:8",
																"nodeType": "YulFunctionCall",
																"src": "1036:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1026:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "968:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "999:5:8",
														"nodeType": "YulTypedName",
														"src": "999:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1009:6:8",
														"nodeType": "YulTypedName",
														"src": "1009:6:8",
														"type": ""
													}
												],
												"src": "968:102:8"
											},
											{
												"body": {
													"nativeSrc": "1104:152:8",
													"nodeType": "YulBlock",
													"src": "1104:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1124:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1124:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:8"
																},
																"nativeSrc": "1114:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1114:88:8"
															},
															"nativeSrc": "1114:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1114:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1221:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1221:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:8"
																},
																"nativeSrc": "1211:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1211:15:8"
															},
															"nativeSrc": "1211:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1211:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:8"
																},
																"nativeSrc": "1235:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:8"
															},
															"nativeSrc": "1235:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1076:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1076:180:8"
											},
											{
												"body": {
													"nativeSrc": "1305:238:8",
													"nodeType": "YulBlock",
													"src": "1305:238:8",
													"statements": [
														{
															"nativeSrc": "1315:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1337:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1367:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1367:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1345:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "1345:21:8"
																		},
																		"nativeSrc": "1345:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1333:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:8"
																},
																"nativeSrc": "1333:40:8",
																"nodeType": "YulFunctionCall",
																"src": "1333:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1319:10:8",
																	"nodeType": "YulTypedName",
																	"src": "1319:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1484:22:8",
																"nodeType": "YulBlock",
																"src": "1484:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1486:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1486:16:8"
																			},
																			"nativeSrc": "1486:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1486:18:8"
																		},
																		"nativeSrc": "1486:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1427:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1427:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1439:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1424:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1424:2:8"
																		},
																		"nativeSrc": "1424:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1463:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1463:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1475:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1475:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1460:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:8"
																		},
																		"nativeSrc": "1460:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1421:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:8"
																},
																"nativeSrc": "1421:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1421:62:8"
															},
															"nativeSrc": "1418:88:8",
															"nodeType": "YulIf",
															"src": "1418:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1526:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1526:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1515:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:8"
																},
																"nativeSrc": "1515:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1515:22:8"
															},
															"nativeSrc": "1515:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1515:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1262:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1291:6:8",
														"nodeType": "YulTypedName",
														"src": "1291:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1299:4:8",
														"nodeType": "YulTypedName",
														"src": "1299:4:8",
														"type": ""
													}
												],
												"src": "1262:281:8"
											},
											{
												"body": {
													"nativeSrc": "1590:88:8",
													"nodeType": "YulBlock",
													"src": "1590:88:8",
													"statements": [
														{
															"nativeSrc": "1600:30:8",
															"nodeType": "YulAssignment",
															"src": "1600:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1610:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1610:18:8"
																},
																"nativeSrc": "1610:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1610:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1659:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1667:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1667:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1639:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1639:19:8"
																},
																"nativeSrc": "1639:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1639:33:8"
															},
															"nativeSrc": "1639:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1639:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1549:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1574:4:8",
														"nodeType": "YulTypedName",
														"src": "1574:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1583:6:8",
														"nodeType": "YulTypedName",
														"src": "1583:6:8",
														"type": ""
													}
												],
												"src": "1549:129:8"
											},
											{
												"body": {
													"nativeSrc": "1766:229:8",
													"nodeType": "YulBlock",
													"src": "1766:229:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1871:22:8",
																"nodeType": "YulBlock",
																"src": "1871:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1873:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1873:16:8"
																			},
																			"nativeSrc": "1873:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1873:18:8"
																		},
																		"nativeSrc": "1873:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1873:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1843:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1843:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1851:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1851:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1840:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1840:2:8"
																},
																"nativeSrc": "1840:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1840:30:8"
															},
															"nativeSrc": "1837:56:8",
															"nodeType": "YulIf",
															"src": "1837:56:8"
														},
														{
															"nativeSrc": "1903:25:8",
															"nodeType": "YulAssignment",
															"src": "1903:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1915:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1923:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1923:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:8"
																},
																"nativeSrc": "1911:17:8",
																"nodeType": "YulFunctionCall",
																"src": "1911:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1903:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1903:4:8"
																}
															]
														},
														{
															"nativeSrc": "1965:23:8",
															"nodeType": "YulAssignment",
															"src": "1965:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1977:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1977:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1973:3:8"
																},
																"nativeSrc": "1973:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1973:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1965:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1684:311:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1750:6:8",
														"nodeType": "YulTypedName",
														"src": "1750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1761:4:8",
														"nodeType": "YulTypedName",
														"src": "1761:4:8",
														"type": ""
													}
												],
												"src": "1684:311:8"
											},
											{
												"body": {
													"nativeSrc": "2090:28:8",
													"nodeType": "YulBlock",
													"src": "2090:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2107:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2107:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2110:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2100:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:8"
																},
																"nativeSrc": "2100:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2100:12:8"
															},
															"nativeSrc": "2100:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2100:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2001:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2001:117:8"
											},
											{
												"body": {
													"nativeSrc": "2254:619:8",
													"nodeType": "YulBlock",
													"src": "2254:619:8",
													"statements": [
														{
															"nativeSrc": "2264:90:8",
															"nodeType": "YulAssignment",
															"src": "2264:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:8",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:8"
																		},
																		"nativeSrc": "2289:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:8"
																},
																"nativeSrc": "2273:81:8",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:8"
																}
															]
														},
														{
															"nativeSrc": "2363:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:8",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:8",
																"nodeType": "YulIdentifier",
																"src": "2374:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:8",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:8"
																},
																"nativeSrc": "2389:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:8"
															},
															"nativeSrc": "2389:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:8"
														},
														{
															"nativeSrc": "2419:23:8",
															"nodeType": "YulAssignment",
															"src": "2419:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:8"
																},
																"nativeSrc": "2426:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:8"
																}
															]
														},
														{
															"nativeSrc": "2452:44:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:8"
																		},
																		"nativeSrc": "2478:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:8"
																},
																"nativeSrc": "2466:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:8",
																"nodeType": "YulBlock",
																"src": "2524:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:8"
																			},
																			"nativeSrc": "2538:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:8"
																		},
																		"nativeSrc": "2538:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:8"
																},
																"nativeSrc": "2508:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:8"
															},
															"nativeSrc": "2505:122:8",
															"nodeType": "YulIf",
															"src": "2505:122:8"
														},
														{
															"body": {
																"nativeSrc": "2712:155:8",
																"nodeType": "YulBlock",
																"src": "2712:155:8",
																"statements": [
																	{
																		"nativeSrc": "2727:21:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:8",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:8",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:8"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:8"
																					},
																					"nativeSrc": "2774:48:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:8"
																			},
																			"nativeSrc": "2762:61:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:8"
																		},
																		"nativeSrc": "2762:61:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:8"
																	},
																	{
																		"nativeSrc": "2836:21:8",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:8"
																			},
																			"nativeSrc": "2843:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:8"
																},
																"nativeSrc": "2662:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:8"
															},
															"nativeSrc": "2636:231:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:8",
																"nodeType": "YulBlock",
																"src": "2678:25:8",
																"statements": [
																	{
																		"nativeSrc": "2680:21:8",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:8"
																			},
																			"nativeSrc": "2687:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:8",
																"nodeType": "YulBlock",
																"src": "2640:21:8",
																"statements": [
																	{
																		"nativeSrc": "2642:17:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:8",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:8",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:8",
														"nodeType": "YulTypedName",
														"src": "2224:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:8",
														"nodeType": "YulTypedName",
														"src": "2232:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:8",
														"nodeType": "YulTypedName",
														"src": "2240:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:8",
														"nodeType": "YulTypedName",
														"src": "2248:5:8",
														"type": ""
													}
												],
												"src": "2141:732:8"
											},
											{
												"body": {
													"nativeSrc": "2984:297:8",
													"nodeType": "YulBlock",
													"src": "2984:297:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:8",
																"nodeType": "YulBlock",
																"src": "3033:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:8"
																			},
																			"nativeSrc": "3035:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:8"
																		},
																		"nativeSrc": "3035:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:8",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:8"
																				},
																				"nativeSrc": "3008:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:8"
																		},
																		"nativeSrc": "3004:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:8"
																},
																"nativeSrc": "2997:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:8"
															},
															"nativeSrc": "2994:122:8",
															"nodeType": "YulIf",
															"src": "2994:122:8"
														},
														{
															"nativeSrc": "3125:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:8"
																},
																"nativeSrc": "3139:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:8",
															"nodeType": "YulAssignment",
															"src": "3161:114:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:8"
																		},
																		"nativeSrc": "3244:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:8",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:8"
																},
																"nativeSrc": "3170:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:8",
														"nodeType": "YulTypedName",
														"src": "2962:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:8",
														"nodeType": "YulTypedName",
														"src": "2970:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:8",
														"nodeType": "YulTypedName",
														"src": "2978:5:8",
														"type": ""
													}
												],
												"src": "2896:385:8"
											},
											{
												"body": {
													"nativeSrc": "3332:32:8",
													"nodeType": "YulBlock",
													"src": "3332:32:8",
													"statements": [
														{
															"nativeSrc": "3342:16:8",
															"nodeType": "YulAssignment",
															"src": "3342:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "3353:5:8",
																"nodeType": "YulIdentifier",
																"src": "3353:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3342:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3342:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3287:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3314:5:8",
														"nodeType": "YulTypedName",
														"src": "3314:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3324:7:8",
														"nodeType": "YulTypedName",
														"src": "3324:7:8",
														"type": ""
													}
												],
												"src": "3287:77:8"
											},
											{
												"body": {
													"nativeSrc": "3413:79:8",
													"nodeType": "YulBlock",
													"src": "3413:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3470:16:8",
																"nodeType": "YulBlock",
																"src": "3470:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3479:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3479:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3482:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3482:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3472:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3472:6:8"
																			},
																			"nativeSrc": "3472:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3472:12:8"
																		},
																		"nativeSrc": "3472:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3472:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3436:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3436:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3461:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3461:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3443:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3443:17:8"
																				},
																				"nativeSrc": "3443:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3443:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3433:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3433:2:8"
																		},
																		"nativeSrc": "3433:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3433:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3426:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:8"
																},
																"nativeSrc": "3426:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3426:43:8"
															},
															"nativeSrc": "3423:63:8",
															"nodeType": "YulIf",
															"src": "3423:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3370:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3406:5:8",
														"nodeType": "YulTypedName",
														"src": "3406:5:8",
														"type": ""
													}
												],
												"src": "3370:122:8"
											},
											{
												"body": {
													"nativeSrc": "3561:80:8",
													"nodeType": "YulBlock",
													"src": "3561:80:8",
													"statements": [
														{
															"nativeSrc": "3571:22:8",
															"nodeType": "YulAssignment",
															"src": "3571:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3586:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3586:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3580:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3580:5:8"
																},
																"nativeSrc": "3580:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3580:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3571:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3629:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3629:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3602:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3602:26:8"
																},
																"nativeSrc": "3602:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:8"
															},
															"nativeSrc": "3602:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3602:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3498:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3539:6:8",
														"nodeType": "YulTypedName",
														"src": "3539:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3547:3:8",
														"nodeType": "YulTypedName",
														"src": "3547:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3555:5:8",
														"nodeType": "YulTypedName",
														"src": "3555:5:8",
														"type": ""
													}
												],
												"src": "3498:143:8"
											},
											{
												"body": {
													"nativeSrc": "3800:870:8",
													"nodeType": "YulBlock",
													"src": "3800:870:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3847:83:8",
																"nodeType": "YulBlock",
																"src": "3847:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3849:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3849:77:8"
																			},
																			"nativeSrc": "3849:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3849:79:8"
																		},
																		"nativeSrc": "3849:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3849:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3821:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3830:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3830:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3817:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:8"
																		},
																		"nativeSrc": "3817:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3842:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3842:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3813:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:8"
																},
																"nativeSrc": "3813:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3813:33:8"
															},
															"nativeSrc": "3810:120:8",
															"nodeType": "YulIf",
															"src": "3810:120:8"
														},
														{
															"nativeSrc": "3940:128:8",
															"nodeType": "YulBlock",
															"src": "3940:128:8",
															"statements": [
																{
																	"nativeSrc": "3955:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3955:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3969:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3959:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3959:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3984:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3984:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4026:3:8"
																				},
																				"nativeSrc": "4026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3994:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3994:31:8"
																		},
																		"nativeSrc": "3994:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3984:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4078:307:8",
															"nodeType": "YulBlock",
															"src": "4078:307:8",
															"statements": [
																{
																	"nativeSrc": "4093:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4093:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4117:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4117:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4128:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4128:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4113:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4113:3:8"
																				},
																				"nativeSrc": "4113:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4113:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4107:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4107:5:8"
																		},
																		"nativeSrc": "4107:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4107:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4097:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4097:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4179:83:8",
																		"nodeType": "YulBlock",
																		"src": "4179:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4181:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "4181:77:8"
																					},
																					"nativeSrc": "4181:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4181:79:8"
																				},
																				"nativeSrc": "4181:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4181:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4151:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4151:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4159:18:8",
																				"nodeType": "YulLiteral",
																				"src": "4159:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4148:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4148:2:8"
																		},
																		"nativeSrc": "4148:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4148:30:8"
																	},
																	"nativeSrc": "4145:117:8",
																	"nodeType": "YulIf",
																	"src": "4145:117:8"
																},
																{
																	"nativeSrc": "4276:99:8",
																	"nodeType": "YulAssignment",
																	"src": "4276:99:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4347:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4347:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4358:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4358:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4343:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4343:3:8"
																				},
																				"nativeSrc": "4343:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4343:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4367:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4367:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "4286:56:8",
																			"nodeType": "YulIdentifier",
																			"src": "4286:56:8"
																		},
																		"nativeSrc": "4286:89:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:89:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4276:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4276:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4395:129:8",
															"nodeType": "YulBlock",
															"src": "4395:129:8",
															"statements": [
																{
																	"nativeSrc": "4410:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4424:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4414:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4440:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4440:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4486:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4486:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4497:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4497:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4482:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:3:8"
																				},
																				"nativeSrc": "4482:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4482:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4506:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4506:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4450:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4450:31:8"
																		},
																		"nativeSrc": "4450:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4450:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4440:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4440:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4534:129:8",
															"nodeType": "YulBlock",
															"src": "4534:129:8",
															"statements": [
																{
																	"nativeSrc": "4549:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4549:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4563:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4563:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4553:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4553:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4579:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4579:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4625:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4625:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4636:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4636:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4621:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4621:3:8"
																				},
																				"nativeSrc": "4621:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4621:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4645:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4645:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4589:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4589:31:8"
																		},
																		"nativeSrc": "4589:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4589:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4579:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4579:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_address_fromMemory",
												"nativeSrc": "3647:1023:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3746:9:8",
														"nodeType": "YulTypedName",
														"src": "3746:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3757:7:8",
														"nodeType": "YulTypedName",
														"src": "3757:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3769:6:8",
														"nodeType": "YulTypedName",
														"src": "3769:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3777:6:8",
														"nodeType": "YulTypedName",
														"src": "3777:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3785:6:8",
														"nodeType": "YulTypedName",
														"src": "3785:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3793:6:8",
														"nodeType": "YulTypedName",
														"src": "3793:6:8",
														"type": ""
													}
												],
												"src": "3647:1023:8"
											},
											{
												"body": {
													"nativeSrc": "4704:152:8",
													"nodeType": "YulBlock",
													"src": "4704:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4721:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4721:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4724:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4724:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4714:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:8"
																},
																"nativeSrc": "4714:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4714:88:8"
															},
															"nativeSrc": "4714:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4714:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4818:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4818:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4821:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4821:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:8"
																},
																"nativeSrc": "4811:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4811:15:8"
															},
															"nativeSrc": "4811:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4811:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4842:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4845:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4845:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4835:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:8"
																},
																"nativeSrc": "4835:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4835:15:8"
															},
															"nativeSrc": "4835:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4835:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4676:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4676:180:8"
											},
											{
												"body": {
													"nativeSrc": "4927:53:8",
													"nodeType": "YulBlock",
													"src": "4927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4949:17:8"
																		},
																		"nativeSrc": "4949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:8"
																},
																"nativeSrc": "4937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4937:37:8"
															},
															"nativeSrc": "4937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4915:5:8",
														"nodeType": "YulTypedName",
														"src": "4915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4922:3:8",
														"nodeType": "YulTypedName",
														"src": "4922:3:8",
														"type": ""
													}
												],
												"src": "4862:118:8"
											},
											{
												"body": {
													"nativeSrc": "5031:32:8",
													"nodeType": "YulBlock",
													"src": "5031:32:8",
													"statements": [
														{
															"nativeSrc": "5041:16:8",
															"nodeType": "YulAssignment",
															"src": "5041:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "5052:5:8",
																"nodeType": "YulIdentifier",
																"src": "5052:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5041:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5041:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4986:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5013:5:8",
														"nodeType": "YulTypedName",
														"src": "5013:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5023:7:8",
														"nodeType": "YulTypedName",
														"src": "5023:7:8",
														"type": ""
													}
												],
												"src": "4986:77:8"
											},
											{
												"body": {
													"nativeSrc": "5134:53:8",
													"nodeType": "YulBlock",
													"src": "5134:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5151:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5151:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5174:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5174:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5156:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5156:17:8"
																		},
																		"nativeSrc": "5156:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5156:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:8"
																},
																"nativeSrc": "5144:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5144:37:8"
															},
															"nativeSrc": "5144:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5144:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5069:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5122:5:8",
														"nodeType": "YulTypedName",
														"src": "5122:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5129:3:8",
														"nodeType": "YulTypedName",
														"src": "5129:3:8",
														"type": ""
													}
												],
												"src": "5069:118:8"
											},
											{
												"body": {
													"nativeSrc": "5319:206:8",
													"nodeType": "YulBlock",
													"src": "5319:206:8",
													"statements": [
														{
															"nativeSrc": "5329:26:8",
															"nodeType": "YulAssignment",
															"src": "5329:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5341:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5341:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5352:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5352:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5337:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5337:3:8"
																},
																"nativeSrc": "5337:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5337:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5329:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5329:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5409:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5409:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5422:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5422:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5433:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5418:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5418:3:8"
																		},
																		"nativeSrc": "5418:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5418:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5365:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5365:43:8"
																},
																"nativeSrc": "5365:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5365:71:8"
															},
															"nativeSrc": "5365:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5365:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5490:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5503:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5514:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5514:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:8"
																		},
																		"nativeSrc": "5499:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5499:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5446:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5446:43:8"
																},
																"nativeSrc": "5446:72:8",
																"nodeType": "YulFunctionCall",
																"src": "5446:72:8"
															},
															"nativeSrc": "5446:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "5446:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "5193:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5283:9:8",
														"nodeType": "YulTypedName",
														"src": "5283:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5295:6:8",
														"nodeType": "YulTypedName",
														"src": "5295:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5303:6:8",
														"nodeType": "YulTypedName",
														"src": "5303:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5314:4:8",
														"nodeType": "YulTypedName",
														"src": "5314:4:8",
														"type": ""
													}
												],
												"src": "5193:332:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620028a0380380620028a083398181016040528101906200003691906200062f565b620000687fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b856200017e60201b60201c565b6200007c5f801b826200017e60201b60201c565b620000ce7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775620001b860201b60201c565b5f5b835181101562000165576002848281518110620000f257620000f1620006bd565b5b6020026020010151908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050620000d0565b50816007819055505f6008819055505050505062000740565b6200018f826200021860201b60201c565b620001a0816200023460201b60201c565b620001b283836200025860201b60201c565b50505050565b5f620001ca836200021860201b60201c565b9050815f808581526020019081526020015f20600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b5f805f8381526020019081526020015f20600101549050919050565b6200025581620002496200035360201b60201c565b6200035a60201b60201c565b50565b5f6200026b8383620003b660201b60201c565b620003495760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620002e56200035360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506200034d565b5f90505b92915050565b5f33905090565b6200036c8282620003b660201b60201c565b620003b25780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401620003a992919062000715565b60405180910390fd5b5050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000455826200042a565b9050919050565b620004678162000449565b811462000472575f80fd5b50565b5f8151905062000485816200045c565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620004d7826200048f565b810181811067ffffffffffffffff82111715620004f957620004f86200049f565b5b80604052505050565b5f6200050d62000419565b90506200051b8282620004cc565b919050565b5f67ffffffffffffffff8211156200053d576200053c6200049f565b5b602082029050602081019050919050565b5f80fd5b5f62000568620005628462000520565b62000502565b905080838252602082019050602084028301858111156200058e576200058d6200054e565b5b835b81811015620005bb5780620005a6888262000475565b84526020840193505060208101905062000590565b5050509392505050565b5f82601f830112620005dc57620005db6200048b565b5b8151620005ee84826020860162000552565b91505092915050565b5f819050919050565b6200060b81620005f7565b811462000616575f80fd5b50565b5f81519050620006298162000600565b92915050565b5f805f80608085870312156200064a576200064962000422565b5b5f620006598782880162000475565b945050602085015167ffffffffffffffff8111156200067d576200067c62000426565b5b6200068b87828801620005c5565b93505060406200069e8782880162000619565b9250506060620006b18782880162000475565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b620006f58162000449565b82525050565b5f819050919050565b6200070f81620006fb565b82525050565b5f6040820190506200072a5f830185620006ea565b62000739602083018462000704565b9392505050565b612152806200074e5f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c806390805c34116100c1578063bd998cb31161007a578063bd998cb31461039b578063be354836146103b9578063c68dbb37146103e9578063d547741f14610419578063f3fef3a314610435578063f4457fab146104515761014b565b806390805c34146102c757806391d14854146102e35780639e4a936914610313578063a217fddf14610331578063a356efc41461034f578063bb39a9601461037f5761014b565b806330e5065e1161011357806330e5065e1461020557806336568abe1461023557806347e7ef2414610251578063523820a11461026d5780635e5a24a41461028b57806375b238fc146102a95761014b565b806301ffc9a71461014f57806306f34c2f1461017f5780630ba36dcd14610189578063248a9ca3146101b95780632f2ff15d146101e9575b5f80fd5b61016960048036038101906101649190611694565b61046f565b60405161017691906116d9565b60405180910390f35b6101876104e8565b005b6101a3600480360381019061019e919061174c565b61054f565b6040516101b0919061178f565b60405180910390f35b6101d360048036038101906101ce91906117db565b610569565b6040516101e09190611815565b60405180910390f35b61020360048036038101906101fe919061182e565b610585565b005b61021f600480360381019061021a919061174c565b6105a7565b60405161022c919061178f565b60405180910390f35b61024f600480360381019061024a919061182e565b6105bc565b005b61026b60048036038101906102669190611896565b610637565b005b610275610858565b604051610282919061178f565b60405180910390f35b61029361085e565b6040516102a09190611815565b60405180910390f35b6102b1610882565b6040516102be9190611815565b60405180910390f35b6102e160048036038101906102dc91906118d4565b6108a6565b005b6102fd60048036038101906102f8919061182e565b610950565b60405161030a91906116d9565b60405180910390f35b61031b6109b3565b604051610328919061178f565b60405180910390f35b610339610aa6565b6040516103469190611815565b60405180910390f35b61036960048036038101906103649190611896565b610aac565b604051610376919061178f565b60405180910390f35b6103996004803603810190610394919061194d565b610cd2565b005b6103a3610d47565b6040516103b0919061178f565b60405180910390f35b6103d360048036038101906103ce919061174c565b610d4d565b6040516103e0919061178f565b60405180910390f35b61040360048036038101906103fe91906119b1565b610d62565b6040516104109190611a37565b60405180910390f35b610433600480360381019061042e919061182e565b610d9d565b005b61044f600480360381019061044a9190611896565b610dbf565b005b610459611161565b604051610466919061178f565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e157506104e082611167565b5b9050919050565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b610512816111d0565b5f61051b6111e4565b90505f81111561054b575f6064600754836105369190611a7d565b6105409190611aeb565b905080600881905550505b5050565b6005602052805f5260405f205f91509050805f0154905081565b5f805f8381526020019081526020015f20600101549050919050565b61058e82610569565b610597816111d0565b6105a183836111e8565b50505050565b6003602052805f5260405f205f915090505481565b6105c46112d1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610628576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063282826112d8565b505050565b610640826113c1565b61067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690611b75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd6106a36112d1565b30846040518463ffffffff1660e01b81526004016106c393929190611ba2565b6020604051808303815f875af11580156106df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107039190611c01565b508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107509190611c2c565b925050819055506107618282611463565b60055f61076c6112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107b59190611c2c565b925050819055508060055f6107c86112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461084d9190611c2c565b925050819055505050565b60085481565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756108d0816111d0565b8160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f805f90505f5b600280549050811015610a9e57610a84600282815481106109de576109dd611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f60028581548110610a1d57610a1c611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611463565b82610a8f9190611c2c565b915080806001019150506109ba565b508091505090565b5f801b81565b5f8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290611cd6565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be99190611d7a565b5050509150505f8113610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2890611e3b565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c7b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9f9190611e8f565b60ff16905080600a610cb19190611fe9565b8286610cbd9190611a7d565b610cc79190611aeb565b935050505092915050565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b610cfc816111d0565b5f610d078484611463565b90505f610d148787611463565b90505f8183610d239190612033565b90508060095f828254610d369190611c2c565b925050819055505050505050505050565b60095481565b6006602052805f5260405f205f915090505481565b60028181548110610d71575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610da682610569565b610daf816111d0565b610db983836112d8565b50505050565b8060055f610dcb6112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b906120b0565b60405180910390fd5b8060055f610e906112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f159190612033565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f689190612033565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610f936112d1565b836040518363ffffffff1660e01b8152600401610fb19291906120ce565b6020604051808303815f875af1158015610fcd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff19190611c01565b505f611003610ffe6112d1565b611553565b90508060065f6110116112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110589190611c2c565b925050819055506110698383611463565b60055f6110746112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546110bd9190612033565b925050819055508160055f6110d06112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111559190612033565b92505081905550505050565b60075481565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111e1816111dc6112d1565b6115ea565b50565b5f90565b5f6111f38383610950565b6112c75760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112646112d1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506112cb565b5f90505b92915050565b5f33905090565b5f6112e38383610950565b156113b7575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506113546112d1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506113bb565b5f90505b92915050565b5f805f90505b600280549050811015611459578273ffffffffffffffffffffffffffffffffffffffff16600282815481106113ff576113fe611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361144c57600191505061145e565b80806001019150506113c7565b505f90505b919050565b5f8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561150e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115329190611d7a565b5050509150505f84826115459190611a7d565b905080935050505092915050565b5f8061155d6109b3565b670de0b6b3a764000060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01546115b09190611a7d565b6115ba9190611aeb565b90505f670de0b6b3a7640000826009546115d49190611a7d565b6115de9190611aeb565b90508092505050919050565b6115f48282610950565b6116375780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161162e9291906120f5565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116738161163f565b811461167d575f80fd5b50565b5f8135905061168e8161166a565b92915050565b5f602082840312156116a9576116a861163b565b5b5f6116b684828501611680565b91505092915050565b5f8115159050919050565b6116d3816116bf565b82525050565b5f6020820190506116ec5f8301846116ca565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f80fd5b50565b5f8135905061174681611722565b92915050565b5f602082840312156117615761176061163b565b5b5f61176e84828501611738565b91505092915050565b5f819050919050565b61178981611777565b82525050565b5f6020820190506117a25f830184611780565b92915050565b5f819050919050565b6117ba816117a8565b81146117c4575f80fd5b50565b5f813590506117d5816117b1565b92915050565b5f602082840312156117f0576117ef61163b565b5b5f6117fd848285016117c7565b91505092915050565b61180f816117a8565b82525050565b5f6020820190506118285f830184611806565b92915050565b5f80604083850312156118445761184361163b565b5b5f611851858286016117c7565b925050602061186285828601611738565b9150509250929050565b61187581611777565b811461187f575f80fd5b50565b5f813590506118908161186c565b92915050565b5f80604083850312156118ac576118ab61163b565b5b5f6118b985828601611738565b92505060206118ca85828601611882565b9150509250929050565b5f80604083850312156118ea576118e961163b565b5b5f6118f785828601611738565b925050602061190885828601611738565b9150509250929050565b5f61191c82611711565b9050919050565b61192c81611912565b8114611936575f80fd5b50565b5f8135905061194781611923565b92915050565b5f805f80608085870312156119655761196461163b565b5b5f61197287828801611939565b945050602061198387828801611882565b935050604061199487828801611939565b92505060606119a587828801611882565b91505092959194509250565b5f602082840312156119c6576119c561163b565b5b5f6119d384828501611882565b91505092915050565b5f819050919050565b5f6119ff6119fa6119f5846116f2565b6119dc565b6116f2565b9050919050565b5f611a10826119e5565b9050919050565b5f611a2182611a06565b9050919050565b611a3181611a17565b82525050565b5f602082019050611a4a5f830184611a28565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a8782611777565b9150611a9283611777565b9250828202611aa081611777565b91508282048414831517611ab757611ab6611a50565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611af582611777565b9150611b0083611777565b925082611b1057611b0f611abe565b5b828204905092915050565b5f82825260208201905092915050565b7f4173736574206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f611b5f601383611b1b565b9150611b6a82611b2b565b602082019050919050565b5f6020820190508181035f830152611b8c81611b53565b9050919050565b611b9c81611711565b82525050565b5f606082019050611bb55f830186611b93565b611bc26020830185611b93565b611bcf6040830184611780565b949350505050565b611be0816116bf565b8114611bea575f80fd5b50565b5f81519050611bfb81611bd7565b92915050565b5f60208284031215611c1657611c1561163b565b5b5f611c2384828501611bed565b91505092915050565b5f611c3682611777565b9150611c4183611777565b9250828201905080821115611c5957611c58611a50565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f7261636c65206e6f742073657420666f7220617373657400000000000000005f82015250565b5f611cc0601883611b1b565b9150611ccb82611c8c565b602082019050919050565b5f6020820190508181035f830152611ced81611cb4565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611d1281611cf4565b8114611d1c575f80fd5b50565b5f81519050611d2d81611d09565b92915050565b5f819050919050565b611d4581611d33565b8114611d4f575f80fd5b50565b5f81519050611d6081611d3c565b92915050565b5f81519050611d748161186c565b92915050565b5f805f805f60a08688031215611d9357611d9261163b565b5b5f611da088828901611d1f565b9550506020611db188828901611d52565b9450506040611dc288828901611d66565b9350506060611dd388828901611d66565b9250506080611de488828901611d1f565b9150509295509295909350565b7f496e76616c6964207072696365206461746100000000000000000000000000005f82015250565b5f611e25601283611b1b565b9150611e3082611df1565b602082019050919050565b5f6020820190508181035f830152611e5281611e19565b9050919050565b5f60ff82169050919050565b611e6e81611e59565b8114611e78575f80fd5b50565b5f81519050611e8981611e65565b92915050565b5f60208284031215611ea457611ea361163b565b5b5f611eb184828501611e7b565b91505092915050565b5f8160011c9050919050565b5f808291508390505b6001851115611f0f57808604811115611eeb57611eea611a50565b5b6001851615611efa5780820291505b8081029050611f0885611eba565b9450611ecf565b94509492505050565b5f82611f275760019050611fe2565b81611f34575f9050611fe2565b8160018114611f4a5760028114611f5457611f83565b6001915050611fe2565b60ff841115611f6657611f65611a50565b5b8360020a915084821115611f7d57611f7c611a50565b5b50611fe2565b5060208310610133831016604e8410600b8410161715611fb85782820a905083811115611fb357611fb2611a50565b5b611fe2565b611fc58484846001611ec6565b92509050818404811115611fdc57611fdb611a50565b5b81810290505b9392505050565b5f611ff382611777565b9150611ffe83611777565b925061202b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f18565b905092915050565b5f61203d82611777565b915061204883611777565b92508282039050818111156120605761205f611a50565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61209a601483611b1b565b91506120a582612066565b602082019050919050565b5f6020820190508181035f8301526120c78161208e565b9050919050565b5f6040820190506120e15f830185611b93565b6120ee6020830184611780565b9392505050565b5f6040820190506121085f830185611b93565b6121156020830184611806565b939250505056fea26469706673582212203122113be70ffbcfa896301971a9ee8c4aea628265c5674c75ed26967e7e4c9864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28A0 CODESIZE SUB DUP1 PUSH3 0x28A0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x62F JUMP JUMPDEST PUSH3 0x68 PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B DUP6 PUSH3 0x17E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7C PUSH0 DUP1 SHL DUP3 PUSH3 0x17E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCE PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH3 0x1B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x165 JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xF2 JUMPI PUSH3 0xF1 PUSH3 0x6BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0xD0 JUMP JUMPDEST POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x740 JUMP JUMPDEST PUSH3 0x18F DUP3 PUSH3 0x218 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A0 DUP2 PUSH3 0x234 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B2 DUP4 DUP4 PUSH3 0x258 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1CA DUP4 PUSH3 0x218 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x255 DUP2 PUSH3 0x249 PUSH3 0x353 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x35A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0x26B DUP4 DUP4 PUSH3 0x3B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x349 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x2E5 PUSH3 0x353 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x34D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x36C DUP3 DUP3 PUSH3 0x3B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3B2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3A9 SWAP3 SWAP2 SWAP1 PUSH3 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x455 DUP3 PUSH3 0x42A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x467 DUP2 PUSH3 0x449 JUMP JUMPDEST DUP2 EQ PUSH3 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x485 DUP2 PUSH3 0x45C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x4D7 DUP3 PUSH3 0x48F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4F9 JUMPI PUSH3 0x4F8 PUSH3 0x49F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x50D PUSH3 0x419 JUMP JUMPDEST SWAP1 POP PUSH3 0x51B DUP3 DUP3 PUSH3 0x4CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x53D JUMPI PUSH3 0x53C PUSH3 0x49F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH3 0x568 PUSH3 0x562 DUP5 PUSH3 0x520 JUMP JUMPDEST PUSH3 0x502 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x58E JUMPI PUSH3 0x58D PUSH3 0x54E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5BB JUMPI DUP1 PUSH3 0x5A6 DUP9 DUP3 PUSH3 0x475 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x590 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5DC JUMPI PUSH3 0x5DB PUSH3 0x48B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x552 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x60B DUP2 PUSH3 0x5F7 JUMP JUMPDEST DUP2 EQ PUSH3 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x629 DUP2 PUSH3 0x600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x64A JUMPI PUSH3 0x649 PUSH3 0x422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x659 DUP8 DUP3 DUP9 ADD PUSH3 0x475 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x67D JUMPI PUSH3 0x67C PUSH3 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x68B DUP8 DUP3 DUP9 ADD PUSH3 0x5C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x69E DUP8 DUP3 DUP9 ADD PUSH3 0x619 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x6B1 DUP8 DUP3 DUP9 ADD PUSH3 0x475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x6F5 DUP2 PUSH3 0x449 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x70F DUP2 PUSH3 0x6FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x72A PUSH0 DUP4 ADD DUP6 PUSH3 0x6EA JUMP JUMPDEST PUSH3 0x739 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x704 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2152 DUP1 PUSH3 0x74E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90805C34 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBD998CB3 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBD998CB3 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xBE354836 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xC68DBB37 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF4457FAB EQ PUSH2 0x451 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x90805C34 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x9E4A9369 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xA356EFC4 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xBB39A960 EQ PUSH2 0x37F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x30E5065E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x30E5065E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x523820A1 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x5E5A24A4 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2A9 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6F34C2F EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xBA36DCD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E1 JUMPI POP PUSH2 0x4E0 DUP3 PUSH2 0x1167 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B PUSH2 0x512 DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH0 PUSH2 0x51B PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58E DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x5A1 DUP4 DUP4 PUSH2 0x11E8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x640 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x6A3 PUSH2 0x12D1 JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x761 DUP3 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH2 0x76C PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x7C8 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x8D0 DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA84 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1463 JUMP JUMPDEST DUP3 PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9BA JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP1 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0xA PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x1FE9 JUMP JUMPDEST DUP3 DUP7 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B PUSH2 0xCFC DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH0 PUSH2 0xD07 DUP5 DUP5 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD14 DUP8 DUP8 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDA6 DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xDB9 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0xDCB PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0xE90 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xF93 PUSH2 0x12D1 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF1 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST POP PUSH0 PUSH2 0x1003 PUSH2 0xFFE PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x1011 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1069 DUP4 DUP4 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH2 0x1074 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x10D0 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11DC PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x15EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x11F3 DUP4 DUP4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x12C7 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1264 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x12CB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x12E3 DUP4 DUP4 PUSH2 0x950 JUMP JUMPDEST ISZERO PUSH2 0x13B7 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1354 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x13BB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x145E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13C7 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1532 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP5 DUP3 PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x155D PUSH2 0x9B3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x15B0 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x9 SLOAD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F4 DUP3 DUP3 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x1637 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP3 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x163F JUMP JUMPDEST DUP2 EQ PUSH2 0x167D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168E DUP2 PUSH2 0x166A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B6 DUP5 DUP3 DUP6 ADD PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH0 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176E DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1828 PUSH0 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1851 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1862 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP2 EQ PUSH2 0x187F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1890 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AB PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B9 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CA DUP6 DUP3 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F7 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1908 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191C DUP3 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192C DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP2 EQ PUSH2 0x1936 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1947 DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1972 DUP8 DUP3 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1983 DUP8 DUP3 DUP9 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1994 DUP8 DUP3 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x19A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FF PUSH2 0x19FA PUSH2 0x19F5 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A10 DUP3 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A21 DUP3 PUSH2 0x1A06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A31 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A87 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A92 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AA0 DUP2 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF5 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B00 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B10 JUMPI PUSH2 0x1B0F PUSH2 0x1ABE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4173736574206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x13 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9C DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1BC2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1BCF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BFB DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C16 JUMPI PUSH2 0x1C15 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C23 DUP5 DUP3 DUP6 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C59 JUMPI PUSH2 0x1C58 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F7261636C65206E6F742073657420666F722061737365740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 PUSH1 0x18 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCB DUP3 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CED DUP2 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2D DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1D33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D60 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D74 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D92 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA0 DUP9 DUP3 DUP10 ADD PUSH2 0x1D1F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DB1 DUP9 DUP3 DUP10 ADD PUSH2 0x1D52 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DC2 DUP9 DUP3 DUP10 ADD PUSH2 0x1D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1DD3 DUP9 DUP3 DUP10 ADD PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1DE4 DUP9 DUP3 DUP10 ADD PUSH2 0x1D1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174610000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 PUSH1 0x12 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E30 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E52 DUP2 PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6E DUP2 PUSH2 0x1E59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E89 DUP2 PUSH2 0x1E65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB1 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F0F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1EFA JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F08 DUP6 PUSH2 0x1EBA JUMP JUMPDEST SWAP5 POP PUSH2 0x1ECF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1F27 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1FE2 JUMP JUMPDEST DUP2 PUSH2 0x1F34 JUMPI PUSH0 SWAP1 POP PUSH2 0x1FE2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F4A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F54 JUMPI PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1FE2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FB8 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x1FC5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1EC6 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF3 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFE DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP PUSH2 0x202B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203D DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x2048 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2060 JUMPI PUSH2 0x205F PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x209A PUSH1 0x14 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x20A5 DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20C7 DUP2 PUSH2 0x208E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x20EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2108 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x22 GT EXTCODESIZE 0xE7 0xF 0xFB 0xCF 0xA8 SWAP7 ADDRESS NOT PUSH18 0xA9EE8C4AEA628265C5674C75ED26967E7E4C SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "323:6104:7:-:0;;;1181:602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1338:44;668:31;1368:13;1338:9;;;:44;;:::i;:::-;1392:37;2232:4:1;1402:18:7;;1422:6;1392:9;;;:37;;:::i;:::-;1439:45;668:31;742:23;1439:13;;;:45;;:::i;:::-;1539:9;1534:124;1558:14;:21;1554:1;:25;1534:124;;;1600:15;1628:14;1643:1;1628:17;;;;;;;;:::i;:::-;;;;;;;;1600:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:3;;;;;;;1534:124;;;;1694:15;1667:24;:42;;;;1740:1;1719:18;:22;;;;1181:602;;;;323:6104;;4226:136:1;4300:18;4313:4;4300:12;;;:18;;:::i;:::-;2464:16;2475:4;2464:10;;;:16;;:::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;;;:25;;:::i;:::-;;4226:136:::0;;;:::o;5698:247::-;5781:25;5809:18;5822:4;5809:12;;;:18;;:::i;:::-;5781:46;;5862:9;5837:6;:12;5844:4;5837:12;;;;;;;;;;;:22;;:34;;;;5928:9;5909:17;5903:4;5886:52;;;;;;;;;;5771:174;5698:247;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;;;:12;;:::i;:::-;3265:10;;;:30;;:::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;;;:22;;:::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:102;1009:6;1060:2;1056:7;1051:2;1044:5;1040:14;1036:28;1026:38;;968:102;;;:::o;1076:180::-;1124:77;1121:1;1114:88;1221:4;1218:1;1211:15;1245:4;1242:1;1235:15;1262:281;1345:27;1367:4;1345:27;:::i;:::-;1337:6;1333:40;1475:6;1463:10;1460:22;1439:18;1427:10;1424:34;1421:62;1418:88;;;1486:18;;:::i;:::-;1418:88;1526:10;1522:2;1515:22;1305:238;1262:281;;:::o;1549:129::-;1583:6;1610:20;;:::i;:::-;1600:30;;1639:33;1667:4;1659:6;1639:33;:::i;:::-;1549:129;;;:::o;1684:311::-;1761:4;1851:18;1843:6;1840:30;1837:56;;;1873:18;;:::i;:::-;1837:56;1923:4;1915:6;1911:17;1903:25;;1983:4;1977;1973:15;1965:23;;1684:311;;;:::o;2001:117::-;2110:1;2107;2100:12;2141:732;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:77::-;3324:7;3353:5;3342:16;;3287:77;;;:::o;3370:122::-;3443:24;3461:5;3443:24;:::i;:::-;3436:5;3433:35;3423:63;;3482:1;3479;3472:12;3423:63;3370:122;:::o;3498:143::-;3555:5;3586:6;3580:13;3571:22;;3602:33;3629:5;3602:33;:::i;:::-;3498:143;;;;:::o;3647:1023::-;3769:6;3777;3785;3793;3842:3;3830:9;3821:7;3817:23;3813:33;3810:120;;;3849:79;;:::i;:::-;3810:120;3969:1;3994:64;4050:7;4041:6;4030:9;4026:22;3994:64;:::i;:::-;3984:74;;3940:128;4128:2;4117:9;4113:18;4107:25;4159:18;4151:6;4148:30;4145:117;;;4181:79;;:::i;:::-;4145:117;4286:89;4367:7;4358:6;4347:9;4343:22;4286:89;:::i;:::-;4276:99;;4078:307;4424:2;4450:64;4506:7;4497:6;4486:9;4482:22;4450:64;:::i;:::-;4440:74;;4395:129;4563:2;4589:64;4645:7;4636:6;4625:9;4621:22;4589:64;:::i;:::-;4579:74;;4534:129;3647:1023;;;;;;;:::o;4676:180::-;4724:77;4721:1;4714:88;4821:4;4818:1;4811:15;4845:4;4842:1;4835:15;4862:118;4949:24;4967:5;4949:24;:::i;:::-;4944:3;4937:37;4862:118;;:::o;4986:77::-;5023:7;5052:5;5041:16;;4986:77;;;:::o;5069:118::-;5156:24;5174:5;5156:24;:::i;:::-;5151:3;5144:37;5069:118;;:::o;5193:332::-;5314:4;5352:2;5341:9;5337:18;5329:26;;5365:71;5433:1;5422:9;5418:17;5409:6;5365:71;:::i;:::-;5446:72;5514:2;5503:9;5499:18;5490:6;5446:72;:::i;:::-;5193:332;;;;;:::o;323:6104:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_598": {
									"entryPoint": 2178,
									"id": 598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_75": {
									"entryPoint": 2726,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VAULT_MANAGER_ROLE_593": {
									"entryPoint": 2142,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_139": {
									"entryPoint": 4560,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_160": {
									"entryPoint": 5610,
									"id": 160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_302": {
									"entryPoint": 4584,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_514": {
									"entryPoint": 4817,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_340": {
									"entryPoint": 4824,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateProfits_1104": {
									"entryPoint": 4580,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateUserProfitShare_918": {
									"entryPoint": 5459,
									"id": 918,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@collectPerformanceFee_1134": {
									"entryPoint": 1256,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_805": {
									"entryPoint": 1591,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@estimateAssetValueUSD_1098": {
									"entryPoint": 2732,
									"id": 1098,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@estimateAssetValue_1032": {
									"entryPoint": 5219,
									"id": 1032,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@estimateVaultValue_748": {
									"entryPoint": 2483,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_174": {
									"entryPoint": 1385,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_193": {
									"entryPoint": 1413,
									"id": 193,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_126": {
									"entryPoint": 2384,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAssetSupported_998": {
									"entryPoint": 5057,
									"id": 998,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastRecordedProfit_624": {
									"entryPoint": 2136,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@performanceFeePercentage_622": {
									"entryPoint": 4449,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_235": {
									"entryPoint": 1468,
									"id": 235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_212": {
									"entryPoint": 3485,
									"id": 212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAssetToOracle_704": {
									"entryPoint": 2214,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportedAssets_602": {
									"entryPoint": 3426,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_108": {
									"entryPoint": 1135,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_555": {
									"entryPoint": 4455,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalProfits_626": {
									"entryPoint": 3399,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVaultBalance_606": {
									"entryPoint": 1447,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@trade_965": {
									"entryPoint": 3282,
									"id": 965,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@userDeposits_616": {
									"entryPoint": 1359,
									"id": 616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userProfits_620": {
									"entryPoint": 3405,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_886": {
									"entryPoint": 3519,
									"id": 886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$502": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$502t_uint256t_contract$_IERC20_$502t_uint256": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$502_to_t_address_fromStack": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$502__to_t_address__fromStack_reversed": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7878,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$502": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$502_to_t_address": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$502": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20473:8",
										"nodeType": "YulBlock",
										"src": "0:20473:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "378:105:8",
													"nodeType": "YulBlock",
													"src": "378:105:8",
													"statements": [
														{
															"nativeSrc": "388:89:8",
															"nodeType": "YulAssignment",
															"src": "388:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:8",
																		"nodeType": "YulLiteral",
																		"src": "410:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:8"
																},
																"nativeSrc": "399:78:8",
																"nodeType": "YulFunctionCall",
																"src": "399:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:8",
														"nodeType": "YulTypedName",
														"src": "360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:8",
														"nodeType": "YulTypedName",
														"src": "370:7:8",
														"type": ""
													}
												],
												"src": "334:149:8"
											},
											{
												"body": {
													"nativeSrc": "531:78:8",
													"nodeType": "YulBlock",
													"src": "531:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:8",
																"nodeType": "YulBlock",
																"src": "587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:8"
																			},
																			"nativeSrc": "589:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:8"
																		},
																		"nativeSrc": "589:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:8"
																				},
																				"nativeSrc": "561:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:8"
																		},
																		"nativeSrc": "551:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:8"
																},
																"nativeSrc": "544:42:8",
																"nodeType": "YulFunctionCall",
																"src": "544:42:8"
															},
															"nativeSrc": "541:62:8",
															"nodeType": "YulIf",
															"src": "541:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:8",
														"nodeType": "YulTypedName",
														"src": "524:5:8",
														"type": ""
													}
												],
												"src": "489:120:8"
											},
											{
												"body": {
													"nativeSrc": "666:86:8",
													"nodeType": "YulBlock",
													"src": "666:86:8",
													"statements": [
														{
															"nativeSrc": "676:29:8",
															"nodeType": "YulAssignment",
															"src": "676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:8"
																},
																"nativeSrc": "685:20:8",
																"nodeType": "YulFunctionCall",
																"src": "685:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:8"
																},
																"nativeSrc": "714:32:8",
																"nodeType": "YulFunctionCall",
																"src": "714:32:8"
															},
															"nativeSrc": "714:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:8",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:8",
														"nodeType": "YulTypedName",
														"src": "652:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:8",
														"nodeType": "YulTypedName",
														"src": "660:5:8",
														"type": ""
													}
												],
												"src": "615:137:8"
											},
											{
												"body": {
													"nativeSrc": "823:262:8",
													"nodeType": "YulBlock",
													"src": "823:262:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:8",
																"nodeType": "YulBlock",
																"src": "869:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:8"
																			},
																			"nativeSrc": "871:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:8"
																		},
																		"nativeSrc": "871:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nativeSrc": "840:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:8",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nativeSrc": "836:32:8",
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nativeSrc": "833:119:8",
															"nodeType": "YulIf",
															"src": "833:119:8"
														},
														{
															"nativeSrc": "962:116:8",
															"nodeType": "YulBlock",
															"src": "962:116:8",
															"statements": [
																{
																	"nativeSrc": "977:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:8",
																			"nodeType": "YulTypedName",
																			"src": "981:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:8",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:8"
																				},
																				"nativeSrc": "1036:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:8"
																		},
																		"nativeSrc": "1016:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:8",
														"nodeType": "YulTypedName",
														"src": "793:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:8",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:8",
														"nodeType": "YulTypedName",
														"src": "816:6:8",
														"type": ""
													}
												],
												"src": "758:327:8"
											},
											{
												"body": {
													"nativeSrc": "1133:48:8",
													"nodeType": "YulBlock",
													"src": "1133:48:8",
													"statements": [
														{
															"nativeSrc": "1143:32:8",
															"nodeType": "YulAssignment",
															"src": "1143:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:8"
																		},
																		"nativeSrc": "1161:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:8"
																},
																"nativeSrc": "1154:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:8",
														"nodeType": "YulTypedName",
														"src": "1115:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:8",
														"nodeType": "YulTypedName",
														"src": "1125:7:8",
														"type": ""
													}
												],
												"src": "1091:90:8"
											},
											{
												"body": {
													"nativeSrc": "1246:50:8",
													"nodeType": "YulBlock",
													"src": "1246:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:8"
																		},
																		"nativeSrc": "1268:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																},
																"nativeSrc": "1256:34:8",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:8"
															},
															"nativeSrc": "1256:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:8",
														"nodeType": "YulTypedName",
														"src": "1234:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:8",
														"nodeType": "YulTypedName",
														"src": "1241:3:8",
														"type": ""
													}
												],
												"src": "1187:109:8"
											},
											{
												"body": {
													"nativeSrc": "1394:118:8",
													"nodeType": "YulBlock",
													"src": "1394:118:8",
													"statements": [
														{
															"nativeSrc": "1404:26:8",
															"nodeType": "YulAssignment",
															"src": "1404:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:8"
																},
																"nativeSrc": "1412:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:8"
																		},
																		"nativeSrc": "1487:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:8"
																},
																"nativeSrc": "1440:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:8"
															},
															"nativeSrc": "1440:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:8",
														"nodeType": "YulTypedName",
														"src": "1366:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:8",
														"nodeType": "YulTypedName",
														"src": "1378:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:8",
														"nodeType": "YulTypedName",
														"src": "1389:4:8",
														"type": ""
													}
												],
												"src": "1302:210:8"
											},
											{
												"body": {
													"nativeSrc": "1563:81:8",
													"nodeType": "YulBlock",
													"src": "1563:81:8",
													"statements": [
														{
															"nativeSrc": "1573:65:8",
															"nodeType": "YulAssignment",
															"src": "1573:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:8"
																},
																"nativeSrc": "1584:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:8",
														"nodeType": "YulTypedName",
														"src": "1545:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:8",
														"nodeType": "YulTypedName",
														"src": "1555:7:8",
														"type": ""
													}
												],
												"src": "1518:126:8"
											},
											{
												"body": {
													"nativeSrc": "1695:51:8",
													"nodeType": "YulBlock",
													"src": "1695:51:8",
													"statements": [
														{
															"nativeSrc": "1705:35:8",
															"nodeType": "YulAssignment",
															"src": "1705:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:8"
																},
																"nativeSrc": "1716:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:8",
														"nodeType": "YulTypedName",
														"src": "1677:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:8",
														"nodeType": "YulTypedName",
														"src": "1687:7:8",
														"type": ""
													}
												],
												"src": "1650:96:8"
											},
											{
												"body": {
													"nativeSrc": "1795:79:8",
													"nodeType": "YulBlock",
													"src": "1795:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:8",
																"nodeType": "YulBlock",
																"src": "1852:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:8"
																			},
																			"nativeSrc": "1854:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:8"
																		},
																		"nativeSrc": "1854:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:8"
																				},
																				"nativeSrc": "1825:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:8"
																		},
																		"nativeSrc": "1815:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																},
																"nativeSrc": "1808:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:8"
															},
															"nativeSrc": "1805:63:8",
															"nodeType": "YulIf",
															"src": "1805:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:8",
														"nodeType": "YulTypedName",
														"src": "1788:5:8",
														"type": ""
													}
												],
												"src": "1752:122:8"
											},
											{
												"body": {
													"nativeSrc": "1932:87:8",
													"nodeType": "YulBlock",
													"src": "1932:87:8",
													"statements": [
														{
															"nativeSrc": "1942:29:8",
															"nodeType": "YulAssignment",
															"src": "1942:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:8"
																},
																"nativeSrc": "1951:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:8"
																},
																"nativeSrc": "1980:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:8"
															},
															"nativeSrc": "1980:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:8",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:8",
														"nodeType": "YulTypedName",
														"src": "1918:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:8",
														"nodeType": "YulTypedName",
														"src": "1926:5:8",
														"type": ""
													}
												],
												"src": "1880:139:8"
											},
											{
												"body": {
													"nativeSrc": "2091:263:8",
													"nodeType": "YulBlock",
													"src": "2091:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:8",
																"nodeType": "YulBlock",
																"src": "2137:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:8"
																			},
																			"nativeSrc": "2139:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:8"
																		},
																		"nativeSrc": "2139:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:8"
																		},
																		"nativeSrc": "2108:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:8"
																},
																"nativeSrc": "2104:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:8"
															},
															"nativeSrc": "2101:119:8",
															"nodeType": "YulIf",
															"src": "2101:119:8"
														},
														{
															"nativeSrc": "2230:117:8",
															"nodeType": "YulBlock",
															"src": "2230:117:8",
															"statements": [
																{
																	"nativeSrc": "2245:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:8"
																				},
																				"nativeSrc": "2305:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:8"
																		},
																		"nativeSrc": "2284:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:8",
														"nodeType": "YulTypedName",
														"src": "2061:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:8",
														"nodeType": "YulTypedName",
														"src": "2072:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:8",
														"nodeType": "YulTypedName",
														"src": "2084:6:8",
														"type": ""
													}
												],
												"src": "2025:329:8"
											},
											{
												"body": {
													"nativeSrc": "2405:32:8",
													"nodeType": "YulBlock",
													"src": "2405:32:8",
													"statements": [
														{
															"nativeSrc": "2415:16:8",
															"nodeType": "YulAssignment",
															"src": "2415:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:8",
																"nodeType": "YulIdentifier",
																"src": "2426:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:8",
														"nodeType": "YulTypedName",
														"src": "2387:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:8",
														"nodeType": "YulTypedName",
														"src": "2397:7:8",
														"type": ""
													}
												],
												"src": "2360:77:8"
											},
											{
												"body": {
													"nativeSrc": "2508:53:8",
													"nodeType": "YulBlock",
													"src": "2508:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:8"
																		},
																		"nativeSrc": "2530:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:8"
																},
																"nativeSrc": "2518:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:8"
															},
															"nativeSrc": "2518:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:8",
														"nodeType": "YulTypedName",
														"src": "2496:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:8",
														"nodeType": "YulTypedName",
														"src": "2503:3:8",
														"type": ""
													}
												],
												"src": "2443:118:8"
											},
											{
												"body": {
													"nativeSrc": "2665:124:8",
													"nodeType": "YulBlock",
													"src": "2665:124:8",
													"statements": [
														{
															"nativeSrc": "2675:26:8",
															"nodeType": "YulAssignment",
															"src": "2675:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:8"
																},
																"nativeSrc": "2683:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:8"
																		},
																		"nativeSrc": "2764:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:8"
																},
																"nativeSrc": "2711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:8"
															},
															"nativeSrc": "2711:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:8",
														"nodeType": "YulTypedName",
														"src": "2637:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:8",
														"nodeType": "YulTypedName",
														"src": "2649:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:8",
														"nodeType": "YulTypedName",
														"src": "2660:4:8",
														"type": ""
													}
												],
												"src": "2567:222:8"
											},
											{
												"body": {
													"nativeSrc": "2840:32:8",
													"nodeType": "YulBlock",
													"src": "2840:32:8",
													"statements": [
														{
															"nativeSrc": "2850:16:8",
															"nodeType": "YulAssignment",
															"src": "2850:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2861:5:8",
																"nodeType": "YulIdentifier",
																"src": "2861:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2850:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2850:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2795:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2822:5:8",
														"nodeType": "YulTypedName",
														"src": "2822:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2832:7:8",
														"nodeType": "YulTypedName",
														"src": "2832:7:8",
														"type": ""
													}
												],
												"src": "2795:77:8"
											},
											{
												"body": {
													"nativeSrc": "2921:79:8",
													"nodeType": "YulBlock",
													"src": "2921:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2978:16:8",
																"nodeType": "YulBlock",
																"src": "2978:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2987:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2987:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2990:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2980:6:8"
																			},
																			"nativeSrc": "2980:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2980:12:8"
																		},
																		"nativeSrc": "2980:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2980:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2944:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2944:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2969:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2969:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2951:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2951:17:8"
																				},
																				"nativeSrc": "2951:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2951:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2941:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:8"
																		},
																		"nativeSrc": "2941:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2934:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:8"
																},
																"nativeSrc": "2934:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2934:43:8"
															},
															"nativeSrc": "2931:63:8",
															"nodeType": "YulIf",
															"src": "2931:63:8"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2878:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:8",
														"nodeType": "YulTypedName",
														"src": "2914:5:8",
														"type": ""
													}
												],
												"src": "2878:122:8"
											},
											{
												"body": {
													"nativeSrc": "3058:87:8",
													"nodeType": "YulBlock",
													"src": "3058:87:8",
													"statements": [
														{
															"nativeSrc": "3068:29:8",
															"nodeType": "YulAssignment",
															"src": "3068:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3090:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3090:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3077:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:12:8"
																},
																"nativeSrc": "3077:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3068:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3133:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3133:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3106:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3106:26:8"
																},
																"nativeSrc": "3106:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3106:33:8"
															},
															"nativeSrc": "3106:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3106:33:8"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3006:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3036:6:8",
														"nodeType": "YulTypedName",
														"src": "3036:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3044:3:8",
														"nodeType": "YulTypedName",
														"src": "3044:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3052:5:8",
														"nodeType": "YulTypedName",
														"src": "3052:5:8",
														"type": ""
													}
												],
												"src": "3006:139:8"
											},
											{
												"body": {
													"nativeSrc": "3217:263:8",
													"nodeType": "YulBlock",
													"src": "3217:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3263:83:8",
																"nodeType": "YulBlock",
																"src": "3263:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3265:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3265:77:8"
																			},
																			"nativeSrc": "3265:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:79:8"
																		},
																		"nativeSrc": "3265:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3238:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3238:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3234:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:8"
																		},
																		"nativeSrc": "3234:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3259:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3259:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3230:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:8"
																},
																"nativeSrc": "3230:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3230:32:8"
															},
															"nativeSrc": "3227:119:8",
															"nodeType": "YulIf",
															"src": "3227:119:8"
														},
														{
															"nativeSrc": "3356:117:8",
															"nodeType": "YulBlock",
															"src": "3356:117:8",
															"statements": [
																{
																	"nativeSrc": "3371:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3371:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3385:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3385:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3375:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3375:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:8"
																				},
																				"nativeSrc": "3431:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3410:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:8"
																		},
																		"nativeSrc": "3410:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3400:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3151:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3198:7:8",
														"nodeType": "YulTypedName",
														"src": "3198:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3210:6:8",
														"nodeType": "YulTypedName",
														"src": "3210:6:8",
														"type": ""
													}
												],
												"src": "3151:329:8"
											},
											{
												"body": {
													"nativeSrc": "3551:53:8",
													"nodeType": "YulBlock",
													"src": "3551:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3568:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3573:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3573:17:8"
																		},
																		"nativeSrc": "3573:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:8"
																},
																"nativeSrc": "3561:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3561:37:8"
															},
															"nativeSrc": "3561:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3561:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3486:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3539:5:8",
														"nodeType": "YulTypedName",
														"src": "3539:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3546:3:8",
														"nodeType": "YulTypedName",
														"src": "3546:3:8",
														"type": ""
													}
												],
												"src": "3486:118:8"
											},
											{
												"body": {
													"nativeSrc": "3708:124:8",
													"nodeType": "YulBlock",
													"src": "3708:124:8",
													"statements": [
														{
															"nativeSrc": "3718:26:8",
															"nodeType": "YulAssignment",
															"src": "3718:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:8"
																},
																"nativeSrc": "3726:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3726:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3718:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3718:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3798:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3811:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3811:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3822:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3822:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3807:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:8"
																		},
																		"nativeSrc": "3807:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3754:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3754:43:8"
																},
																"nativeSrc": "3754:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3754:71:8"
															},
															"nativeSrc": "3754:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3754:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3610:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:8",
														"nodeType": "YulTypedName",
														"src": "3680:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3692:6:8",
														"nodeType": "YulTypedName",
														"src": "3692:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3703:4:8",
														"nodeType": "YulTypedName",
														"src": "3703:4:8",
														"type": ""
													}
												],
												"src": "3610:222:8"
											},
											{
												"body": {
													"nativeSrc": "3921:391:8",
													"nodeType": "YulBlock",
													"src": "3921:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3967:83:8",
																"nodeType": "YulBlock",
																"src": "3967:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3969:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3969:77:8"
																			},
																			"nativeSrc": "3969:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:79:8"
																		},
																		"nativeSrc": "3969:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3942:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3951:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3938:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:8"
																		},
																		"nativeSrc": "3938:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3934:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:8"
																},
																"nativeSrc": "3934:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3934:32:8"
															},
															"nativeSrc": "3931:119:8",
															"nodeType": "YulIf",
															"src": "3931:119:8"
														},
														{
															"nativeSrc": "4060:117:8",
															"nodeType": "YulBlock",
															"src": "4060:117:8",
															"statements": [
																{
																	"nativeSrc": "4075:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4075:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4089:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4079:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4079:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4104:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4104:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4139:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4139:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4150:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4135:3:8"
																				},
																				"nativeSrc": "4135:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4135:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4159:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4159:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4114:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4114:20:8"
																		},
																		"nativeSrc": "4114:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4104:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4104:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4187:118:8",
															"nodeType": "YulBlock",
															"src": "4187:118:8",
															"statements": [
																{
																	"nativeSrc": "4202:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4202:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4216:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4206:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4206:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4232:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4232:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4278:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:8"
																				},
																				"nativeSrc": "4263:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4287:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4287:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4242:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4242:20:8"
																		},
																		"nativeSrc": "4242:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4232:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4232:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3838:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3883:9:8",
														"nodeType": "YulTypedName",
														"src": "3883:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3894:7:8",
														"nodeType": "YulTypedName",
														"src": "3894:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3906:6:8",
														"nodeType": "YulTypedName",
														"src": "3906:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3914:6:8",
														"nodeType": "YulTypedName",
														"src": "3914:6:8",
														"type": ""
													}
												],
												"src": "3838:474:8"
											},
											{
												"body": {
													"nativeSrc": "4361:79:8",
													"nodeType": "YulBlock",
													"src": "4361:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4418:16:8",
																"nodeType": "YulBlock",
																"src": "4418:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4427:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4427:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4430:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4430:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4420:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4420:6:8"
																			},
																			"nativeSrc": "4420:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4420:12:8"
																		},
																		"nativeSrc": "4420:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4420:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4384:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4384:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4409:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4409:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4391:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "4391:17:8"
																				},
																				"nativeSrc": "4391:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4391:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4381:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4381:2:8"
																		},
																		"nativeSrc": "4381:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4374:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:8"
																},
																"nativeSrc": "4374:43:8",
																"nodeType": "YulFunctionCall",
																"src": "4374:43:8"
															},
															"nativeSrc": "4371:63:8",
															"nodeType": "YulIf",
															"src": "4371:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4318:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4354:5:8",
														"nodeType": "YulTypedName",
														"src": "4354:5:8",
														"type": ""
													}
												],
												"src": "4318:122:8"
											},
											{
												"body": {
													"nativeSrc": "4498:87:8",
													"nodeType": "YulBlock",
													"src": "4498:87:8",
													"statements": [
														{
															"nativeSrc": "4508:29:8",
															"nodeType": "YulAssignment",
															"src": "4508:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4530:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4517:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:8"
																},
																"nativeSrc": "4517:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4517:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4508:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4508:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4546:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "4546:26:8"
																},
																"nativeSrc": "4546:33:8",
																"nodeType": "YulFunctionCall",
																"src": "4546:33:8"
															},
															"nativeSrc": "4546:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "4546:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4446:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4476:6:8",
														"nodeType": "YulTypedName",
														"src": "4476:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4484:3:8",
														"nodeType": "YulTypedName",
														"src": "4484:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4492:5:8",
														"nodeType": "YulTypedName",
														"src": "4492:5:8",
														"type": ""
													}
												],
												"src": "4446:139:8"
											},
											{
												"body": {
													"nativeSrc": "4674:391:8",
													"nodeType": "YulBlock",
													"src": "4674:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4720:83:8",
																"nodeType": "YulBlock",
																"src": "4720:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4722:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4722:77:8"
																			},
																			"nativeSrc": "4722:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4722:79:8"
																		},
																		"nativeSrc": "4722:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4722:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4695:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4695:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:8"
																		},
																		"nativeSrc": "4691:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4716:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4687:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:8"
																},
																"nativeSrc": "4687:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4687:32:8"
															},
															"nativeSrc": "4684:119:8",
															"nodeType": "YulIf",
															"src": "4684:119:8"
														},
														{
															"nativeSrc": "4813:117:8",
															"nodeType": "YulBlock",
															"src": "4813:117:8",
															"statements": [
																{
																	"nativeSrc": "4828:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4828:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4842:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4832:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4832:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4857:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4857:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4892:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4892:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4903:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4903:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4888:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4888:3:8"
																				},
																				"nativeSrc": "4888:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4888:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4912:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4912:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4867:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4867:20:8"
																		},
																		"nativeSrc": "4867:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4867:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4857:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4857:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4940:118:8",
															"nodeType": "YulBlock",
															"src": "4940:118:8",
															"statements": [
																{
																	"nativeSrc": "4955:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4955:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4969:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4959:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4959:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4985:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4985:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5020:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5020:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5031:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5031:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5016:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5016:3:8"
																				},
																				"nativeSrc": "5016:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5016:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5040:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5040:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4995:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:20:8"
																		},
																		"nativeSrc": "4995:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4985:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4985:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4591:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4636:9:8",
														"nodeType": "YulTypedName",
														"src": "4636:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4647:7:8",
														"nodeType": "YulTypedName",
														"src": "4647:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4659:6:8",
														"nodeType": "YulTypedName",
														"src": "4659:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4667:6:8",
														"nodeType": "YulTypedName",
														"src": "4667:6:8",
														"type": ""
													}
												],
												"src": "4591:474:8"
											},
											{
												"body": {
													"nativeSrc": "5154:391:8",
													"nodeType": "YulBlock",
													"src": "5154:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5200:83:8",
																"nodeType": "YulBlock",
																"src": "5200:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5202:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5202:77:8"
																			},
																			"nativeSrc": "5202:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5202:79:8"
																		},
																		"nativeSrc": "5202:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5202:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5175:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5184:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5171:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:8"
																		},
																		"nativeSrc": "5171:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5167:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:8"
																},
																"nativeSrc": "5167:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5167:32:8"
															},
															"nativeSrc": "5164:119:8",
															"nodeType": "YulIf",
															"src": "5164:119:8"
														},
														{
															"nativeSrc": "5293:117:8",
															"nodeType": "YulBlock",
															"src": "5293:117:8",
															"statements": [
																{
																	"nativeSrc": "5308:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5308:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5322:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5312:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5312:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5368:3:8"
																				},
																				"nativeSrc": "5368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5347:20:8"
																		},
																		"nativeSrc": "5347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5337:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5420:118:8",
															"nodeType": "YulBlock",
															"src": "5420:118:8",
															"statements": [
																{
																	"nativeSrc": "5435:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5435:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5449:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5439:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5439:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5465:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5465:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5500:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5500:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5511:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5511:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5496:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5496:3:8"
																				},
																				"nativeSrc": "5496:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5475:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5475:20:8"
																		},
																		"nativeSrc": "5475:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5475:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5465:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5465:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5071:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5116:9:8",
														"nodeType": "YulTypedName",
														"src": "5116:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5127:7:8",
														"nodeType": "YulTypedName",
														"src": "5127:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5139:6:8",
														"nodeType": "YulTypedName",
														"src": "5139:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5147:6:8",
														"nodeType": "YulTypedName",
														"src": "5147:6:8",
														"type": ""
													}
												],
												"src": "5071:474:8"
											},
											{
												"body": {
													"nativeSrc": "5610:51:8",
													"nodeType": "YulBlock",
													"src": "5610:51:8",
													"statements": [
														{
															"nativeSrc": "5620:35:8",
															"nodeType": "YulAssignment",
															"src": "5620:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5649:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5649:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "5631:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5631:17:8"
																},
																"nativeSrc": "5631:24:8",
																"nodeType": "YulFunctionCall",
																"src": "5631:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5620:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5620:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$502",
												"nativeSrc": "5551:110:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5592:5:8",
														"nodeType": "YulTypedName",
														"src": "5592:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5602:7:8",
														"nodeType": "YulTypedName",
														"src": "5602:7:8",
														"type": ""
													}
												],
												"src": "5551:110:8"
											},
											{
												"body": {
													"nativeSrc": "5724:93:8",
													"nodeType": "YulBlock",
													"src": "5724:93:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5795:16:8",
																"nodeType": "YulBlock",
																"src": "5795:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5804:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5804:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5807:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5807:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5797:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5797:6:8"
																			},
																			"nativeSrc": "5797:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5797:12:8"
																		},
																		"nativeSrc": "5797:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5797:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5747:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5747:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5786:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5786:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$502",
																					"nativeSrc": "5754:31:8",
																					"nodeType": "YulIdentifier",
																					"src": "5754:31:8"
																				},
																				"nativeSrc": "5754:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5754:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5744:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5744:2:8"
																		},
																		"nativeSrc": "5744:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5744:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5737:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5737:6:8"
																},
																"nativeSrc": "5737:57:8",
																"nodeType": "YulFunctionCall",
																"src": "5737:57:8"
															},
															"nativeSrc": "5734:77:8",
															"nodeType": "YulIf",
															"src": "5734:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$502",
												"nativeSrc": "5667:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5717:5:8",
														"nodeType": "YulTypedName",
														"src": "5717:5:8",
														"type": ""
													}
												],
												"src": "5667:150:8"
											},
											{
												"body": {
													"nativeSrc": "5889:101:8",
													"nodeType": "YulBlock",
													"src": "5889:101:8",
													"statements": [
														{
															"nativeSrc": "5899:29:8",
															"nodeType": "YulAssignment",
															"src": "5899:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5921:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5921:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5908:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5908:12:8"
																},
																"nativeSrc": "5908:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5908:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5899:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5899:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5978:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5978:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$502",
																	"nativeSrc": "5937:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "5937:40:8"
																},
																"nativeSrc": "5937:47:8",
																"nodeType": "YulFunctionCall",
																"src": "5937:47:8"
															},
															"nativeSrc": "5937:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "5937:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$502",
												"nativeSrc": "5823:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5867:6:8",
														"nodeType": "YulTypedName",
														"src": "5867:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5875:3:8",
														"nodeType": "YulTypedName",
														"src": "5875:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5883:5:8",
														"nodeType": "YulTypedName",
														"src": "5883:5:8",
														"type": ""
													}
												],
												"src": "5823:167:8"
											},
											{
												"body": {
													"nativeSrc": "6141:676:8",
													"nodeType": "YulBlock",
													"src": "6141:676:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6188:83:8",
																"nodeType": "YulBlock",
																"src": "6188:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6190:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6190:77:8"
																			},
																			"nativeSrc": "6190:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6190:79:8"
																		},
																		"nativeSrc": "6190:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6190:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6162:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6162:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6171:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6171:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:8"
																		},
																		"nativeSrc": "6158:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6158:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6183:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6183:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6154:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6154:3:8"
																},
																"nativeSrc": "6154:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6154:33:8"
															},
															"nativeSrc": "6151:120:8",
															"nodeType": "YulIf",
															"src": "6151:120:8"
														},
														{
															"nativeSrc": "6281:131:8",
															"nodeType": "YulBlock",
															"src": "6281:131:8",
															"statements": [
																{
																	"nativeSrc": "6296:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6296:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6310:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6310:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6300:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6300:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6325:77:8",
																	"nodeType": "YulAssignment",
																	"src": "6325:77:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6374:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6374:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6385:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6385:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6370:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6370:3:8"
																				},
																				"nativeSrc": "6370:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6370:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6394:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6394:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$502",
																			"nativeSrc": "6335:34:8",
																			"nodeType": "YulIdentifier",
																			"src": "6335:34:8"
																		},
																		"nativeSrc": "6335:67:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6335:67:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6325:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6325:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6422:118:8",
															"nodeType": "YulBlock",
															"src": "6422:118:8",
															"statements": [
																{
																	"nativeSrc": "6437:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6437:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6451:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6451:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6441:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6441:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6467:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6467:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6502:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6502:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6513:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6513:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6498:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6498:3:8"
																				},
																				"nativeSrc": "6498:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6498:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6522:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6522:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6477:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6477:20:8"
																		},
																		"nativeSrc": "6477:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6467:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6467:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6550:132:8",
															"nodeType": "YulBlock",
															"src": "6550:132:8",
															"statements": [
																{
																	"nativeSrc": "6565:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6565:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6579:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6579:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6569:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6569:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6595:77:8",
																	"nodeType": "YulAssignment",
																	"src": "6595:77:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6644:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6644:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6655:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6655:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6640:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6640:3:8"
																				},
																				"nativeSrc": "6640:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6640:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6664:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6664:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$502",
																			"nativeSrc": "6605:34:8",
																			"nodeType": "YulIdentifier",
																			"src": "6605:34:8"
																		},
																		"nativeSrc": "6605:67:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6605:67:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6595:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6595:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6692:118:8",
															"nodeType": "YulBlock",
															"src": "6692:118:8",
															"statements": [
																{
																	"nativeSrc": "6707:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6707:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6721:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6721:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6711:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6711:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6737:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6737:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6772:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6772:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6783:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6783:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6768:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6768:3:8"
																				},
																				"nativeSrc": "6768:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6768:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6792:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6792:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6747:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6747:20:8"
																		},
																		"nativeSrc": "6747:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6747:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6737:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6737:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$502t_uint256t_contract$_IERC20_$502t_uint256",
												"nativeSrc": "5996:821:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6087:9:8",
														"nodeType": "YulTypedName",
														"src": "6087:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6098:7:8",
														"nodeType": "YulTypedName",
														"src": "6098:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6110:6:8",
														"nodeType": "YulTypedName",
														"src": "6110:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6118:6:8",
														"nodeType": "YulTypedName",
														"src": "6118:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6126:6:8",
														"nodeType": "YulTypedName",
														"src": "6126:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6134:6:8",
														"nodeType": "YulTypedName",
														"src": "6134:6:8",
														"type": ""
													}
												],
												"src": "5996:821:8"
											},
											{
												"body": {
													"nativeSrc": "6889:263:8",
													"nodeType": "YulBlock",
													"src": "6889:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6935:83:8",
																"nodeType": "YulBlock",
																"src": "6935:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6937:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6937:77:8"
																			},
																			"nativeSrc": "6937:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6937:79:8"
																		},
																		"nativeSrc": "6937:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6937:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6910:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6910:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6919:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6906:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:8"
																		},
																		"nativeSrc": "6906:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6931:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6902:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6902:3:8"
																},
																"nativeSrc": "6902:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6902:32:8"
															},
															"nativeSrc": "6899:119:8",
															"nodeType": "YulIf",
															"src": "6899:119:8"
														},
														{
															"nativeSrc": "7028:117:8",
															"nodeType": "YulBlock",
															"src": "7028:117:8",
															"statements": [
																{
																	"nativeSrc": "7043:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7043:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7057:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7057:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7047:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7047:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7072:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7072:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7107:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7107:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7118:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7118:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7103:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:8"
																				},
																				"nativeSrc": "7103:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7103:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7127:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7127:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7082:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7082:20:8"
																		},
																		"nativeSrc": "7082:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7082:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7072:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7072:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6823:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6859:9:8",
														"nodeType": "YulTypedName",
														"src": "6859:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6870:7:8",
														"nodeType": "YulTypedName",
														"src": "6870:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6882:6:8",
														"nodeType": "YulTypedName",
														"src": "6882:6:8",
														"type": ""
													}
												],
												"src": "6823:329:8"
											},
											{
												"body": {
													"nativeSrc": "7190:28:8",
													"nodeType": "YulBlock",
													"src": "7190:28:8",
													"statements": [
														{
															"nativeSrc": "7200:12:8",
															"nodeType": "YulAssignment",
															"src": "7200:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "7207:5:8",
																"nodeType": "YulIdentifier",
																"src": "7207:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7200:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7200:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7158:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7176:5:8",
														"nodeType": "YulTypedName",
														"src": "7176:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7186:3:8",
														"nodeType": "YulTypedName",
														"src": "7186:3:8",
														"type": ""
													}
												],
												"src": "7158:60:8"
											},
											{
												"body": {
													"nativeSrc": "7284:82:8",
													"nodeType": "YulBlock",
													"src": "7284:82:8",
													"statements": [
														{
															"nativeSrc": "7294:66:8",
															"nodeType": "YulAssignment",
															"src": "7294:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7352:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7352:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7334:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "7334:17:8"
																				},
																				"nativeSrc": "7334:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7334:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7325:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "7325:8:8"
																		},
																		"nativeSrc": "7325:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7307:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7307:17:8"
																},
																"nativeSrc": "7307:53:8",
																"nodeType": "YulFunctionCall",
																"src": "7307:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7294:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7294:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7224:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7264:5:8",
														"nodeType": "YulTypedName",
														"src": "7264:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7274:9:8",
														"nodeType": "YulTypedName",
														"src": "7274:9:8",
														"type": ""
													}
												],
												"src": "7224:142:8"
											},
											{
												"body": {
													"nativeSrc": "7432:66:8",
													"nodeType": "YulBlock",
													"src": "7432:66:8",
													"statements": [
														{
															"nativeSrc": "7442:50:8",
															"nodeType": "YulAssignment",
															"src": "7442:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7486:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7486:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7455:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7455:30:8"
																},
																"nativeSrc": "7455:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7455:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7442:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7442:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7372:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7412:5:8",
														"nodeType": "YulTypedName",
														"src": "7412:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7422:9:8",
														"nodeType": "YulTypedName",
														"src": "7422:9:8",
														"type": ""
													}
												],
												"src": "7372:126:8"
											},
											{
												"body": {
													"nativeSrc": "7578:66:8",
													"nodeType": "YulBlock",
													"src": "7578:66:8",
													"statements": [
														{
															"nativeSrc": "7588:50:8",
															"nodeType": "YulAssignment",
															"src": "7588:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7632:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7632:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7601:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7601:30:8"
																},
																"nativeSrc": "7601:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7601:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7588:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7588:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$502_to_t_address",
												"nativeSrc": "7504:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7558:5:8",
														"nodeType": "YulTypedName",
														"src": "7558:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7568:9:8",
														"nodeType": "YulTypedName",
														"src": "7568:9:8",
														"type": ""
													}
												],
												"src": "7504:140:8"
											},
											{
												"body": {
													"nativeSrc": "7729:80:8",
													"nodeType": "YulBlock",
													"src": "7729:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7746:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7746:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7796:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7796:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$502_to_t_address",
																			"nativeSrc": "7751:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "7751:44:8"
																		},
																		"nativeSrc": "7751:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7751:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7739:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:8"
																},
																"nativeSrc": "7739:64:8",
																"nodeType": "YulFunctionCall",
																"src": "7739:64:8"
															},
															"nativeSrc": "7739:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "7739:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$502_to_t_address_fromStack",
												"nativeSrc": "7650:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7717:5:8",
														"nodeType": "YulTypedName",
														"src": "7717:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7724:3:8",
														"nodeType": "YulTypedName",
														"src": "7724:3:8",
														"type": ""
													}
												],
												"src": "7650:159:8"
											},
											{
												"body": {
													"nativeSrc": "7927:138:8",
													"nodeType": "YulBlock",
													"src": "7927:138:8",
													"statements": [
														{
															"nativeSrc": "7937:26:8",
															"nodeType": "YulAssignment",
															"src": "7937:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7949:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7949:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7960:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7960:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:8"
																},
																"nativeSrc": "7945:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7945:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7937:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7937:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8031:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8044:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8044:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8055:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8055:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8040:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8040:3:8"
																		},
																		"nativeSrc": "8040:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8040:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$502_to_t_address_fromStack",
																	"nativeSrc": "7973:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "7973:57:8"
																},
																"nativeSrc": "7973:85:8",
																"nodeType": "YulFunctionCall",
																"src": "7973:85:8"
															},
															"nativeSrc": "7973:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "7973:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$502__to_t_address__fromStack_reversed",
												"nativeSrc": "7815:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7899:9:8",
														"nodeType": "YulTypedName",
														"src": "7899:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7911:6:8",
														"nodeType": "YulTypedName",
														"src": "7911:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7922:4:8",
														"nodeType": "YulTypedName",
														"src": "7922:4:8",
														"type": ""
													}
												],
												"src": "7815:250:8"
											},
											{
												"body": {
													"nativeSrc": "8099:152:8",
													"nodeType": "YulBlock",
													"src": "8099:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8116:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8116:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8119:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8119:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8109:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:8"
																},
																"nativeSrc": "8109:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8109:88:8"
															},
															"nativeSrc": "8109:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8109:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8213:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8213:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8216:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8216:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:8"
																},
																"nativeSrc": "8206:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8206:15:8"
															},
															"nativeSrc": "8206:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8206:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8237:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8237:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8240:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8240:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8230:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8230:6:8"
																},
																"nativeSrc": "8230:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8230:15:8"
															},
															"nativeSrc": "8230:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8230:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8071:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8071:180:8"
											},
											{
												"body": {
													"nativeSrc": "8305:362:8",
													"nodeType": "YulBlock",
													"src": "8305:362:8",
													"statements": [
														{
															"nativeSrc": "8315:25:8",
															"nodeType": "YulAssignment",
															"src": "8315:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8338:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8338:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8320:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8320:17:8"
																},
																"nativeSrc": "8320:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8320:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8315:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8315:1:8"
																}
															]
														},
														{
															"nativeSrc": "8349:25:8",
															"nodeType": "YulAssignment",
															"src": "8349:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8372:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8372:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8354:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8354:17:8"
																},
																"nativeSrc": "8354:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8354:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8349:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8349:1:8"
																}
															]
														},
														{
															"nativeSrc": "8383:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8383:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8406:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8406:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8409:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8409:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8402:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:8"
																},
																"nativeSrc": "8402:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8402:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8387:11:8",
																	"nodeType": "YulTypedName",
																	"src": "8387:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8420:41:8",
															"nodeType": "YulAssignment",
															"src": "8420:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8449:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "8449:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8431:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8431:17:8"
																},
																"nativeSrc": "8431:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8431:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8420:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8420:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8638:22:8",
																"nodeType": "YulBlock",
																"src": "8638:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8640:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8640:16:8"
																			},
																			"nativeSrc": "8640:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8640:18:8"
																		},
																		"nativeSrc": "8640:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8640:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8571:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "8571:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8564:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8564:6:8"
																				},
																				"nativeSrc": "8564:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8564:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8594:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "8594:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8601:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "8601:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8610:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "8610:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8597:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8597:3:8"
																						},
																						"nativeSrc": "8597:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8597:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8591:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8591:2:8"
																				},
																				"nativeSrc": "8591:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8591:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8544:2:8"
																		},
																		"nativeSrc": "8544:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8544:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8524:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8524:6:8"
																},
																"nativeSrc": "8524:113:8",
																"nodeType": "YulFunctionCall",
																"src": "8524:113:8"
															},
															"nativeSrc": "8521:139:8",
															"nodeType": "YulIf",
															"src": "8521:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8257:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8288:1:8",
														"nodeType": "YulTypedName",
														"src": "8288:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8291:1:8",
														"nodeType": "YulTypedName",
														"src": "8291:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8297:7:8",
														"nodeType": "YulTypedName",
														"src": "8297:7:8",
														"type": ""
													}
												],
												"src": "8257:410:8"
											},
											{
												"body": {
													"nativeSrc": "8701:152:8",
													"nodeType": "YulBlock",
													"src": "8701:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8718:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8718:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8721:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8721:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:8"
																},
																"nativeSrc": "8711:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8711:88:8"
															},
															"nativeSrc": "8711:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8711:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8815:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8818:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8818:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8808:6:8"
																},
																"nativeSrc": "8808:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8808:15:8"
															},
															"nativeSrc": "8808:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8808:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8842:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:8"
																},
																"nativeSrc": "8832:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8832:15:8"
															},
															"nativeSrc": "8832:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8832:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8673:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8673:180:8"
											},
											{
												"body": {
													"nativeSrc": "8901:143:8",
													"nodeType": "YulBlock",
													"src": "8901:143:8",
													"statements": [
														{
															"nativeSrc": "8911:25:8",
															"nodeType": "YulAssignment",
															"src": "8911:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8934:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8934:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8916:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8916:17:8"
																},
																"nativeSrc": "8916:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8916:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8911:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8911:1:8"
																}
															]
														},
														{
															"nativeSrc": "8945:25:8",
															"nodeType": "YulAssignment",
															"src": "8945:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8968:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8968:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8950:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8950:17:8"
																},
																"nativeSrc": "8950:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8950:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8945:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8945:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8992:22:8",
																"nodeType": "YulBlock",
																"src": "8992:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8994:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8994:16:8"
																			},
																			"nativeSrc": "8994:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8994:18:8"
																		},
																		"nativeSrc": "8994:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8994:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8989:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8989:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8982:6:8"
																},
																"nativeSrc": "8982:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8982:9:8"
															},
															"nativeSrc": "8979:35:8",
															"nodeType": "YulIf",
															"src": "8979:35:8"
														},
														{
															"nativeSrc": "9024:14:8",
															"nodeType": "YulAssignment",
															"src": "9024:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9033:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9033:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9036:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9036:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9029:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:8"
																},
																"nativeSrc": "9029:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9029:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9024:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9024:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8859:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8890:1:8",
														"nodeType": "YulTypedName",
														"src": "8890:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8893:1:8",
														"nodeType": "YulTypedName",
														"src": "8893:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8899:1:8",
														"nodeType": "YulTypedName",
														"src": "8899:1:8",
														"type": ""
													}
												],
												"src": "8859:185:8"
											},
											{
												"body": {
													"nativeSrc": "9146:73:8",
													"nodeType": "YulBlock",
													"src": "9146:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9163:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9168:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9168:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9156:6:8"
																},
																"nativeSrc": "9156:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9156:19:8"
															},
															"nativeSrc": "9156:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9156:19:8"
														},
														{
															"nativeSrc": "9184:29:8",
															"nodeType": "YulAssignment",
															"src": "9184:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9203:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9203:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9208:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9208:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9199:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:8"
																},
																"nativeSrc": "9199:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9199:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9184:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9184:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9050:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9118:3:8",
														"nodeType": "YulTypedName",
														"src": "9118:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9123:6:8",
														"nodeType": "YulTypedName",
														"src": "9123:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9134:11:8",
														"nodeType": "YulTypedName",
														"src": "9134:11:8",
														"type": ""
													}
												],
												"src": "9050:169:8"
											},
											{
												"body": {
													"nativeSrc": "9331:63:8",
													"nodeType": "YulBlock",
													"src": "9331:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9353:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9361:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9361:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9349:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9349:3:8"
																		},
																		"nativeSrc": "9349:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:14:8"
																	},
																	{
																		"hexValue": "4173736574206e6f7420737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "9365:21:8",
																		"nodeType": "YulLiteral",
																		"src": "9365:21:8",
																		"type": "",
																		"value": "Asset not supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9342:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:8"
																},
																"nativeSrc": "9342:45:8",
																"nodeType": "YulFunctionCall",
																"src": "9342:45:8"
															},
															"nativeSrc": "9342:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "9342:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f",
												"nativeSrc": "9225:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9323:6:8",
														"nodeType": "YulTypedName",
														"src": "9323:6:8",
														"type": ""
													}
												],
												"src": "9225:169:8"
											},
											{
												"body": {
													"nativeSrc": "9546:220:8",
													"nodeType": "YulBlock",
													"src": "9546:220:8",
													"statements": [
														{
															"nativeSrc": "9556:74:8",
															"nodeType": "YulAssignment",
															"src": "9556:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9622:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9563:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9563:58:8"
																},
																"nativeSrc": "9563:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9563:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9556:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9556:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9728:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9728:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f",
																	"nativeSrc": "9639:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9639:88:8"
																},
																"nativeSrc": "9639:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9639:93:8"
															},
															"nativeSrc": "9639:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9639:93:8"
														},
														{
															"nativeSrc": "9741:19:8",
															"nodeType": "YulAssignment",
															"src": "9741:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9752:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9752:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9757:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9757:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9748:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9748:3:8"
																},
																"nativeSrc": "9748:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9748:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9741:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9400:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9534:3:8",
														"nodeType": "YulTypedName",
														"src": "9534:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9542:3:8",
														"nodeType": "YulTypedName",
														"src": "9542:3:8",
														"type": ""
													}
												],
												"src": "9400:366:8"
											},
											{
												"body": {
													"nativeSrc": "9943:248:8",
													"nodeType": "YulBlock",
													"src": "9943:248:8",
													"statements": [
														{
															"nativeSrc": "9953:26:8",
															"nodeType": "YulAssignment",
															"src": "9953:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9965:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9965:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9976:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9976:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9961:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:8"
																},
																"nativeSrc": "9961:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9961:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9953:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9953:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10000:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10000:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10011:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10011:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9996:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9996:3:8"
																		},
																		"nativeSrc": "9996:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9996:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10019:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10019:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10025:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10025:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10015:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10015:3:8"
																		},
																		"nativeSrc": "10015:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10015:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9989:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9989:6:8"
																},
																"nativeSrc": "9989:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9989:47:8"
															},
															"nativeSrc": "9989:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9989:47:8"
														},
														{
															"nativeSrc": "10045:139:8",
															"nodeType": "YulAssignment",
															"src": "10045:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10179:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10179:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10053:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10053:124:8"
																},
																"nativeSrc": "10053:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10053:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10045:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10045:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9772:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9923:9:8",
														"nodeType": "YulTypedName",
														"src": "9923:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9938:4:8",
														"nodeType": "YulTypedName",
														"src": "9938:4:8",
														"type": ""
													}
												],
												"src": "9772:419:8"
											},
											{
												"body": {
													"nativeSrc": "10262:53:8",
													"nodeType": "YulBlock",
													"src": "10262:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10279:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10279:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10302:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10302:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10284:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10284:17:8"
																		},
																		"nativeSrc": "10284:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10284:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10272:6:8"
																},
																"nativeSrc": "10272:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10272:37:8"
															},
															"nativeSrc": "10272:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10272:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10197:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10250:5:8",
														"nodeType": "YulTypedName",
														"src": "10250:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10257:3:8",
														"nodeType": "YulTypedName",
														"src": "10257:3:8",
														"type": ""
													}
												],
												"src": "10197:118:8"
											},
											{
												"body": {
													"nativeSrc": "10475:288:8",
													"nodeType": "YulBlock",
													"src": "10475:288:8",
													"statements": [
														{
															"nativeSrc": "10485:26:8",
															"nodeType": "YulAssignment",
															"src": "10485:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10497:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10497:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10508:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10508:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10493:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10493:3:8"
																},
																"nativeSrc": "10493:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10493:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10485:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10485:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10565:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10565:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10578:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10578:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10589:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10589:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10574:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10574:3:8"
																		},
																		"nativeSrc": "10574:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10574:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10521:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10521:43:8"
																},
																"nativeSrc": "10521:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10521:71:8"
															},
															"nativeSrc": "10521:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10521:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10646:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10659:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10659:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10670:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10670:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10655:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10655:3:8"
																		},
																		"nativeSrc": "10655:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10655:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10602:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10602:43:8"
																},
																"nativeSrc": "10602:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10602:72:8"
															},
															"nativeSrc": "10602:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10602:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10752:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10752:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10737:3:8"
																		},
																		"nativeSrc": "10737:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10737:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10684:43:8"
																},
																"nativeSrc": "10684:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10684:72:8"
															},
															"nativeSrc": "10684:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10684:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10321:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10431:9:8",
														"nodeType": "YulTypedName",
														"src": "10431:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10443:6:8",
														"nodeType": "YulTypedName",
														"src": "10443:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10451:6:8",
														"nodeType": "YulTypedName",
														"src": "10451:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10459:6:8",
														"nodeType": "YulTypedName",
														"src": "10459:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10470:4:8",
														"nodeType": "YulTypedName",
														"src": "10470:4:8",
														"type": ""
													}
												],
												"src": "10321:442:8"
											},
											{
												"body": {
													"nativeSrc": "10809:76:8",
													"nodeType": "YulBlock",
													"src": "10809:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10863:16:8",
																"nodeType": "YulBlock",
																"src": "10863:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10872:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10872:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10875:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10875:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10865:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10865:6:8"
																			},
																			"nativeSrc": "10865:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10865:12:8"
																		},
																		"nativeSrc": "10865:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10865:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10832:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10832:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10854:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10854:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10839:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "10839:14:8"
																				},
																				"nativeSrc": "10839:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10839:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10829:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10829:2:8"
																		},
																		"nativeSrc": "10829:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10829:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10822:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:8"
																},
																"nativeSrc": "10822:40:8",
																"nodeType": "YulFunctionCall",
																"src": "10822:40:8"
															},
															"nativeSrc": "10819:60:8",
															"nodeType": "YulIf",
															"src": "10819:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10769:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10802:5:8",
														"nodeType": "YulTypedName",
														"src": "10802:5:8",
														"type": ""
													}
												],
												"src": "10769:116:8"
											},
											{
												"body": {
													"nativeSrc": "10951:77:8",
													"nodeType": "YulBlock",
													"src": "10951:77:8",
													"statements": [
														{
															"nativeSrc": "10961:22:8",
															"nodeType": "YulAssignment",
															"src": "10961:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10976:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10976:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10970:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10970:5:8"
																},
																"nativeSrc": "10970:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10970:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10961:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10961:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11016:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11016:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10992:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "10992:23:8"
																},
																"nativeSrc": "10992:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10992:30:8"
															},
															"nativeSrc": "10992:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10992:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10891:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10929:6:8",
														"nodeType": "YulTypedName",
														"src": "10929:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10937:3:8",
														"nodeType": "YulTypedName",
														"src": "10937:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10945:5:8",
														"nodeType": "YulTypedName",
														"src": "10945:5:8",
														"type": ""
													}
												],
												"src": "10891:137:8"
											},
											{
												"body": {
													"nativeSrc": "11108:271:8",
													"nodeType": "YulBlock",
													"src": "11108:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11154:83:8",
																"nodeType": "YulBlock",
																"src": "11154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11156:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11156:77:8"
																			},
																			"nativeSrc": "11156:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11156:79:8"
																		},
																		"nativeSrc": "11156:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11129:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11138:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11125:3:8"
																		},
																		"nativeSrc": "11125:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11125:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11150:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11121:3:8"
																},
																"nativeSrc": "11121:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11121:32:8"
															},
															"nativeSrc": "11118:119:8",
															"nodeType": "YulIf",
															"src": "11118:119:8"
														},
														{
															"nativeSrc": "11247:125:8",
															"nodeType": "YulBlock",
															"src": "11247:125:8",
															"statements": [
																{
																	"nativeSrc": "11262:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11262:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11266:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11291:71:8",
																	"nodeType": "YulAssignment",
																	"src": "11291:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11334:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11334:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11345:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11345:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11330:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11330:3:8"
																				},
																				"nativeSrc": "11330:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11330:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11354:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11354:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11301:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "11301:28:8"
																		},
																		"nativeSrc": "11301:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11291:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11034:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11078:9:8",
														"nodeType": "YulTypedName",
														"src": "11078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11089:7:8",
														"nodeType": "YulTypedName",
														"src": "11089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11101:6:8",
														"nodeType": "YulTypedName",
														"src": "11101:6:8",
														"type": ""
													}
												],
												"src": "11034:345:8"
											},
											{
												"body": {
													"nativeSrc": "11429:147:8",
													"nodeType": "YulBlock",
													"src": "11429:147:8",
													"statements": [
														{
															"nativeSrc": "11439:25:8",
															"nodeType": "YulAssignment",
															"src": "11439:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11462:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11462:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11444:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:8"
																},
																"nativeSrc": "11444:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11444:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11439:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11439:1:8"
																}
															]
														},
														{
															"nativeSrc": "11473:25:8",
															"nodeType": "YulAssignment",
															"src": "11473:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11496:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11496:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11478:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11478:17:8"
																},
																"nativeSrc": "11478:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11478:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11473:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11473:1:8"
																}
															]
														},
														{
															"nativeSrc": "11507:16:8",
															"nodeType": "YulAssignment",
															"src": "11507:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11518:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11518:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11521:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11521:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11514:3:8"
																},
																"nativeSrc": "11514:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11514:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11507:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11547:22:8",
																"nodeType": "YulBlock",
																"src": "11547:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11549:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11549:16:8"
																			},
																			"nativeSrc": "11549:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11549:18:8"
																		},
																		"nativeSrc": "11549:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11549:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11539:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11539:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11542:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11542:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11536:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11536:2:8"
																},
																"nativeSrc": "11536:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11536:10:8"
															},
															"nativeSrc": "11533:36:8",
															"nodeType": "YulIf",
															"src": "11533:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11385:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11416:1:8",
														"nodeType": "YulTypedName",
														"src": "11416:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11419:1:8",
														"nodeType": "YulTypedName",
														"src": "11419:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11425:3:8",
														"nodeType": "YulTypedName",
														"src": "11425:3:8",
														"type": ""
													}
												],
												"src": "11385:191:8"
											},
											{
												"body": {
													"nativeSrc": "11610:152:8",
													"nodeType": "YulBlock",
													"src": "11610:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11627:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11627:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11630:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11630:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11620:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11620:6:8"
																},
																"nativeSrc": "11620:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11620:88:8"
															},
															"nativeSrc": "11620:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11620:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11724:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11724:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11727:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11727:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11717:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11717:6:8"
																},
																"nativeSrc": "11717:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11717:15:8"
															},
															"nativeSrc": "11717:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11717:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11748:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11748:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11751:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11751:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11741:6:8"
																},
																"nativeSrc": "11741:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11741:15:8"
															},
															"nativeSrc": "11741:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11741:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11582:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11582:180:8"
											},
											{
												"body": {
													"nativeSrc": "11874:68:8",
													"nodeType": "YulBlock",
													"src": "11874:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11896:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11896:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11904:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11892:3:8"
																		},
																		"nativeSrc": "11892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11892:14:8"
																	},
																	{
																		"hexValue": "4f7261636c65206e6f742073657420666f72206173736574",
																		"kind": "string",
																		"nativeSrc": "11908:26:8",
																		"nodeType": "YulLiteral",
																		"src": "11908:26:8",
																		"type": "",
																		"value": "Oracle not set for asset"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11885:6:8"
																},
																"nativeSrc": "11885:50:8",
																"nodeType": "YulFunctionCall",
																"src": "11885:50:8"
															},
															"nativeSrc": "11885:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "11885:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9",
												"nativeSrc": "11768:174:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11866:6:8",
														"nodeType": "YulTypedName",
														"src": "11866:6:8",
														"type": ""
													}
												],
												"src": "11768:174:8"
											},
											{
												"body": {
													"nativeSrc": "12094:220:8",
													"nodeType": "YulBlock",
													"src": "12094:220:8",
													"statements": [
														{
															"nativeSrc": "12104:74:8",
															"nodeType": "YulAssignment",
															"src": "12104:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12170:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12170:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12175:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12175:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12111:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12111:58:8"
																},
																"nativeSrc": "12111:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12111:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12104:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12276:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12276:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9",
																	"nativeSrc": "12187:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12187:88:8"
																},
																"nativeSrc": "12187:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12187:93:8"
															},
															"nativeSrc": "12187:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12187:93:8"
														},
														{
															"nativeSrc": "12289:19:8",
															"nodeType": "YulAssignment",
															"src": "12289:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12300:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12300:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12305:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12305:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12296:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12296:3:8"
																},
																"nativeSrc": "12296:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12296:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12289:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12289:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11948:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12082:3:8",
														"nodeType": "YulTypedName",
														"src": "12082:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12090:3:8",
														"nodeType": "YulTypedName",
														"src": "12090:3:8",
														"type": ""
													}
												],
												"src": "11948:366:8"
											},
											{
												"body": {
													"nativeSrc": "12491:248:8",
													"nodeType": "YulBlock",
													"src": "12491:248:8",
													"statements": [
														{
															"nativeSrc": "12501:26:8",
															"nodeType": "YulAssignment",
															"src": "12501:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12513:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12513:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12524:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12524:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12509:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12509:3:8"
																},
																"nativeSrc": "12509:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12509:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12501:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12501:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12548:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12548:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12559:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12559:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12544:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12544:3:8"
																		},
																		"nativeSrc": "12544:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12544:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12567:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12567:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12573:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12573:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12563:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12563:3:8"
																		},
																		"nativeSrc": "12563:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12563:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12537:6:8"
																},
																"nativeSrc": "12537:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12537:47:8"
															},
															"nativeSrc": "12537:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12537:47:8"
														},
														{
															"nativeSrc": "12593:139:8",
															"nodeType": "YulAssignment",
															"src": "12593:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12727:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12727:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12601:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12601:124:8"
																},
																"nativeSrc": "12601:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12601:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12593:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12320:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12471:9:8",
														"nodeType": "YulTypedName",
														"src": "12471:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12486:4:8",
														"nodeType": "YulTypedName",
														"src": "12486:4:8",
														"type": ""
													}
												],
												"src": "12320:419:8"
											},
											{
												"body": {
													"nativeSrc": "12789:61:8",
													"nodeType": "YulBlock",
													"src": "12789:61:8",
													"statements": [
														{
															"nativeSrc": "12799:45:8",
															"nodeType": "YulAssignment",
															"src": "12799:45:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12814:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12814:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12821:22:8",
																		"nodeType": "YulLiteral",
																		"src": "12821:22:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12810:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12810:3:8"
																},
																"nativeSrc": "12810:34:8",
																"nodeType": "YulFunctionCall",
																"src": "12810:34:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12799:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "12799:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "12745:105:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12771:5:8",
														"nodeType": "YulTypedName",
														"src": "12771:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12781:7:8",
														"nodeType": "YulTypedName",
														"src": "12781:7:8",
														"type": ""
													}
												],
												"src": "12745:105:8"
											},
											{
												"body": {
													"nativeSrc": "12898:78:8",
													"nodeType": "YulBlock",
													"src": "12898:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12954:16:8",
																"nodeType": "YulBlock",
																"src": "12954:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12963:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12963:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12966:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12966:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12956:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12956:6:8"
																			},
																			"nativeSrc": "12956:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12956:12:8"
																		},
																		"nativeSrc": "12956:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12956:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12921:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12921:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12945:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12945:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "12928:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "12928:16:8"
																				},
																				"nativeSrc": "12928:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12928:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12918:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12918:2:8"
																		},
																		"nativeSrc": "12918:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12918:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12911:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12911:6:8"
																},
																"nativeSrc": "12911:42:8",
																"nodeType": "YulFunctionCall",
																"src": "12911:42:8"
															},
															"nativeSrc": "12908:62:8",
															"nodeType": "YulIf",
															"src": "12908:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "12856:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12891:5:8",
														"nodeType": "YulTypedName",
														"src": "12891:5:8",
														"type": ""
													}
												],
												"src": "12856:120:8"
											},
											{
												"body": {
													"nativeSrc": "13044:79:8",
													"nodeType": "YulBlock",
													"src": "13044:79:8",
													"statements": [
														{
															"nativeSrc": "13054:22:8",
															"nodeType": "YulAssignment",
															"src": "13054:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13069:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13069:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13063:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13063:5:8"
																},
																"nativeSrc": "13063:13:8",
																"nodeType": "YulFunctionCall",
																"src": "13063:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13054:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13054:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13111:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13111:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "13085:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "13085:25:8"
																},
																"nativeSrc": "13085:32:8",
																"nodeType": "YulFunctionCall",
																"src": "13085:32:8"
															},
															"nativeSrc": "13085:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "13085:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "12982:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13022:6:8",
														"nodeType": "YulTypedName",
														"src": "13022:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13030:3:8",
														"nodeType": "YulTypedName",
														"src": "13030:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13038:5:8",
														"nodeType": "YulTypedName",
														"src": "13038:5:8",
														"type": ""
													}
												],
												"src": "12982:141:8"
											},
											{
												"body": {
													"nativeSrc": "13173:32:8",
													"nodeType": "YulBlock",
													"src": "13173:32:8",
													"statements": [
														{
															"nativeSrc": "13183:16:8",
															"nodeType": "YulAssignment",
															"src": "13183:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "13194:5:8",
																"nodeType": "YulIdentifier",
																"src": "13194:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13183:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13183:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "13129:76:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13155:5:8",
														"nodeType": "YulTypedName",
														"src": "13155:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13165:7:8",
														"nodeType": "YulTypedName",
														"src": "13165:7:8",
														"type": ""
													}
												],
												"src": "13129:76:8"
											},
											{
												"body": {
													"nativeSrc": "13253:78:8",
													"nodeType": "YulBlock",
													"src": "13253:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "13309:16:8",
																"nodeType": "YulBlock",
																"src": "13309:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13318:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13318:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13321:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13321:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13311:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13311:6:8"
																			},
																			"nativeSrc": "13311:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13311:12:8"
																		},
																		"nativeSrc": "13311:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13311:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13276:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13276:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13300:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13300:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "13283:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "13283:16:8"
																				},
																				"nativeSrc": "13283:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13283:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13273:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13273:2:8"
																		},
																		"nativeSrc": "13273:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13273:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:8"
																},
																"nativeSrc": "13266:42:8",
																"nodeType": "YulFunctionCall",
																"src": "13266:42:8"
															},
															"nativeSrc": "13263:62:8",
															"nodeType": "YulIf",
															"src": "13263:62:8"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "13211:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13246:5:8",
														"nodeType": "YulTypedName",
														"src": "13246:5:8",
														"type": ""
													}
												],
												"src": "13211:120:8"
											},
											{
												"body": {
													"nativeSrc": "13399:79:8",
													"nodeType": "YulBlock",
													"src": "13399:79:8",
													"statements": [
														{
															"nativeSrc": "13409:22:8",
															"nodeType": "YulAssignment",
															"src": "13409:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13424:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13424:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13418:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13418:5:8"
																},
																"nativeSrc": "13418:13:8",
																"nodeType": "YulFunctionCall",
																"src": "13418:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13409:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13409:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13466:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13466:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "13440:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "13440:25:8"
																},
																"nativeSrc": "13440:32:8",
																"nodeType": "YulFunctionCall",
																"src": "13440:32:8"
															},
															"nativeSrc": "13440:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "13440:32:8"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "13337:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13377:6:8",
														"nodeType": "YulTypedName",
														"src": "13377:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13385:3:8",
														"nodeType": "YulTypedName",
														"src": "13385:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13393:5:8",
														"nodeType": "YulTypedName",
														"src": "13393:5:8",
														"type": ""
													}
												],
												"src": "13337:141:8"
											},
											{
												"body": {
													"nativeSrc": "13547:80:8",
													"nodeType": "YulBlock",
													"src": "13547:80:8",
													"statements": [
														{
															"nativeSrc": "13557:22:8",
															"nodeType": "YulAssignment",
															"src": "13557:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13572:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13572:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13566:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13566:5:8"
																},
																"nativeSrc": "13566:13:8",
																"nodeType": "YulFunctionCall",
																"src": "13566:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13557:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13557:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13615:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13615:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13588:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "13588:26:8"
																},
																"nativeSrc": "13588:33:8",
																"nodeType": "YulFunctionCall",
																"src": "13588:33:8"
															},
															"nativeSrc": "13588:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "13588:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13484:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13525:6:8",
														"nodeType": "YulTypedName",
														"src": "13525:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13533:3:8",
														"nodeType": "YulTypedName",
														"src": "13533:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13541:5:8",
														"nodeType": "YulTypedName",
														"src": "13541:5:8",
														"type": ""
													}
												],
												"src": "13484:143:8"
											},
											{
												"body": {
													"nativeSrc": "13775:829:8",
													"nodeType": "YulBlock",
													"src": "13775:829:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "13822:83:8",
																"nodeType": "YulBlock",
																"src": "13822:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13824:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "13824:77:8"
																			},
																			"nativeSrc": "13824:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13824:79:8"
																		},
																		"nativeSrc": "13824:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13824:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13796:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13796:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13805:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13805:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13792:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13792:3:8"
																		},
																		"nativeSrc": "13792:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13792:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13817:3:8",
																		"nodeType": "YulLiteral",
																		"src": "13817:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13788:3:8"
																},
																"nativeSrc": "13788:33:8",
																"nodeType": "YulFunctionCall",
																"src": "13788:33:8"
															},
															"nativeSrc": "13785:120:8",
															"nodeType": "YulIf",
															"src": "13785:120:8"
														},
														{
															"nativeSrc": "13915:127:8",
															"nodeType": "YulBlock",
															"src": "13915:127:8",
															"statements": [
																{
																	"nativeSrc": "13930:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13930:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13944:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13944:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13934:6:8",
																			"nodeType": "YulTypedName",
																			"src": "13934:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13959:73:8",
																	"nodeType": "YulAssignment",
																	"src": "13959:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14004:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14004:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14015:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14015:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14000:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14000:3:8"
																				},
																				"nativeSrc": "14000:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14000:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14024:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14024:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "13969:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "13969:30:8"
																		},
																		"nativeSrc": "13969:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13969:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13959:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "13959:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14052:128:8",
															"nodeType": "YulBlock",
															"src": "14052:128:8",
															"statements": [
																{
																	"nativeSrc": "14067:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14067:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14081:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14081:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14071:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14071:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14097:73:8",
																	"nodeType": "YulAssignment",
																	"src": "14097:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14142:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14142:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14153:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14153:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14138:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14138:3:8"
																				},
																				"nativeSrc": "14138:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14138:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14162:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14162:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "14107:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "14107:30:8"
																		},
																		"nativeSrc": "14107:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14107:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14097:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14097:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14190:129:8",
															"nodeType": "YulBlock",
															"src": "14190:129:8",
															"statements": [
																{
																	"nativeSrc": "14205:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14205:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14219:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14219:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14209:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14209:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14235:74:8",
																	"nodeType": "YulAssignment",
																	"src": "14235:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14281:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14281:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14292:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14292:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14277:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14277:3:8"
																				},
																				"nativeSrc": "14277:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14277:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14301:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14301:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14245:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "14245:31:8"
																		},
																		"nativeSrc": "14245:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14245:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14235:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14235:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14329:129:8",
															"nodeType": "YulBlock",
															"src": "14329:129:8",
															"statements": [
																{
																	"nativeSrc": "14344:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14344:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14358:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14358:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14348:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14348:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14374:74:8",
																	"nodeType": "YulAssignment",
																	"src": "14374:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14420:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14420:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14431:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14431:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14416:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14416:3:8"
																				},
																				"nativeSrc": "14416:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14416:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14440:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14440:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14384:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "14384:31:8"
																		},
																		"nativeSrc": "14384:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14384:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "14374:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14374:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14468:129:8",
															"nodeType": "YulBlock",
															"src": "14468:129:8",
															"statements": [
																{
																	"nativeSrc": "14483:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14483:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14497:3:8",
																		"nodeType": "YulLiteral",
																		"src": "14497:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14487:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14487:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14514:73:8",
																	"nodeType": "YulAssignment",
																	"src": "14514:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14559:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14559:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14570:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14555:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14555:3:8"
																				},
																				"nativeSrc": "14555:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14579:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "14524:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "14524:30:8"
																		},
																		"nativeSrc": "14524:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14524:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "14514:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14514:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "13633:971:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13713:9:8",
														"nodeType": "YulTypedName",
														"src": "13713:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13724:7:8",
														"nodeType": "YulTypedName",
														"src": "13724:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13736:6:8",
														"nodeType": "YulTypedName",
														"src": "13736:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13744:6:8",
														"nodeType": "YulTypedName",
														"src": "13744:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13752:6:8",
														"nodeType": "YulTypedName",
														"src": "13752:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13760:6:8",
														"nodeType": "YulTypedName",
														"src": "13760:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13768:6:8",
														"nodeType": "YulTypedName",
														"src": "13768:6:8",
														"type": ""
													}
												],
												"src": "13633:971:8"
											},
											{
												"body": {
													"nativeSrc": "14716:62:8",
													"nodeType": "YulBlock",
													"src": "14716:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14738:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14738:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14746:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14746:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14734:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14734:3:8"
																		},
																		"nativeSrc": "14734:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14734:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652064617461",
																		"kind": "string",
																		"nativeSrc": "14750:20:8",
																		"nodeType": "YulLiteral",
																		"src": "14750:20:8",
																		"type": "",
																		"value": "Invalid price data"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14727:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14727:6:8"
																},
																"nativeSrc": "14727:44:8",
																"nodeType": "YulFunctionCall",
																"src": "14727:44:8"
															},
															"nativeSrc": "14727:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "14727:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
												"nativeSrc": "14610:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14708:6:8",
														"nodeType": "YulTypedName",
														"src": "14708:6:8",
														"type": ""
													}
												],
												"src": "14610:168:8"
											},
											{
												"body": {
													"nativeSrc": "14930:220:8",
													"nodeType": "YulBlock",
													"src": "14930:220:8",
													"statements": [
														{
															"nativeSrc": "14940:74:8",
															"nodeType": "YulAssignment",
															"src": "14940:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15006:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15006:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15011:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15011:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14947:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14947:58:8"
																},
																"nativeSrc": "14947:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14947:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14940:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14940:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15112:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15112:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																	"nativeSrc": "15023:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15023:88:8"
																},
																"nativeSrc": "15023:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15023:93:8"
															},
															"nativeSrc": "15023:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15023:93:8"
														},
														{
															"nativeSrc": "15125:19:8",
															"nodeType": "YulAssignment",
															"src": "15125:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15136:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15136:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15141:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15141:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15132:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15132:3:8"
																},
																"nativeSrc": "15132:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15132:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15125:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15125:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14784:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14918:3:8",
														"nodeType": "YulTypedName",
														"src": "14918:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14926:3:8",
														"nodeType": "YulTypedName",
														"src": "14926:3:8",
														"type": ""
													}
												],
												"src": "14784:366:8"
											},
											{
												"body": {
													"nativeSrc": "15327:248:8",
													"nodeType": "YulBlock",
													"src": "15327:248:8",
													"statements": [
														{
															"nativeSrc": "15337:26:8",
															"nodeType": "YulAssignment",
															"src": "15337:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15349:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15349:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15360:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15360:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15345:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15345:3:8"
																},
																"nativeSrc": "15345:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15345:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15337:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15337:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15384:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15384:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15395:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15395:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15380:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15380:3:8"
																		},
																		"nativeSrc": "15380:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15380:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15403:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15403:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15409:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15409:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15399:3:8"
																		},
																		"nativeSrc": "15399:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15399:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15373:6:8"
																},
																"nativeSrc": "15373:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15373:47:8"
															},
															"nativeSrc": "15373:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15373:47:8"
														},
														{
															"nativeSrc": "15429:139:8",
															"nodeType": "YulAssignment",
															"src": "15429:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15563:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15563:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15437:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15437:124:8"
																},
																"nativeSrc": "15437:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15437:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15429:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15429:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15156:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15307:9:8",
														"nodeType": "YulTypedName",
														"src": "15307:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15322:4:8",
														"nodeType": "YulTypedName",
														"src": "15322:4:8",
														"type": ""
													}
												],
												"src": "15156:419:8"
											},
											{
												"body": {
													"nativeSrc": "15624:43:8",
													"nodeType": "YulBlock",
													"src": "15624:43:8",
													"statements": [
														{
															"nativeSrc": "15634:27:8",
															"nodeType": "YulAssignment",
															"src": "15634:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15649:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15649:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15656:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15656:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15645:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:8"
																},
																"nativeSrc": "15645:16:8",
																"nodeType": "YulFunctionCall",
																"src": "15645:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15634:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15634:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "15581:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15606:5:8",
														"nodeType": "YulTypedName",
														"src": "15606:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15616:7:8",
														"nodeType": "YulTypedName",
														"src": "15616:7:8",
														"type": ""
													}
												],
												"src": "15581:86:8"
											},
											{
												"body": {
													"nativeSrc": "15714:77:8",
													"nodeType": "YulBlock",
													"src": "15714:77:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15769:16:8",
																"nodeType": "YulBlock",
																"src": "15769:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15778:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15778:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15781:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15781:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15771:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15771:6:8"
																			},
																			"nativeSrc": "15771:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15771:12:8"
																		},
																		"nativeSrc": "15771:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15771:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15737:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15737:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15760:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15760:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "15744:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "15744:15:8"
																				},
																				"nativeSrc": "15744:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15744:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15734:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "15734:2:8"
																		},
																		"nativeSrc": "15734:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15734:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15727:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15727:6:8"
																},
																"nativeSrc": "15727:41:8",
																"nodeType": "YulFunctionCall",
																"src": "15727:41:8"
															},
															"nativeSrc": "15724:61:8",
															"nodeType": "YulIf",
															"src": "15724:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "15673:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15707:5:8",
														"nodeType": "YulTypedName",
														"src": "15707:5:8",
														"type": ""
													}
												],
												"src": "15673:118:8"
											},
											{
												"body": {
													"nativeSrc": "15858:78:8",
													"nodeType": "YulBlock",
													"src": "15858:78:8",
													"statements": [
														{
															"nativeSrc": "15868:22:8",
															"nodeType": "YulAssignment",
															"src": "15868:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15883:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15877:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15877:5:8"
																},
																"nativeSrc": "15877:13:8",
																"nodeType": "YulFunctionCall",
																"src": "15877:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15868:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15868:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15924:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15924:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "15899:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "15899:24:8"
																},
																"nativeSrc": "15899:31:8",
																"nodeType": "YulFunctionCall",
																"src": "15899:31:8"
															},
															"nativeSrc": "15899:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "15899:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "15797:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15836:6:8",
														"nodeType": "YulTypedName",
														"src": "15836:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15844:3:8",
														"nodeType": "YulTypedName",
														"src": "15844:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15852:5:8",
														"nodeType": "YulTypedName",
														"src": "15852:5:8",
														"type": ""
													}
												],
												"src": "15797:139:8"
											},
											{
												"body": {
													"nativeSrc": "16017:272:8",
													"nodeType": "YulBlock",
													"src": "16017:272:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16063:83:8",
																"nodeType": "YulBlock",
																"src": "16063:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16065:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "16065:77:8"
																			},
																			"nativeSrc": "16065:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16065:79:8"
																		},
																		"nativeSrc": "16065:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16065:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16038:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16038:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16047:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16047:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16034:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16034:3:8"
																		},
																		"nativeSrc": "16034:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16034:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16059:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16059:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16030:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16030:3:8"
																},
																"nativeSrc": "16030:32:8",
																"nodeType": "YulFunctionCall",
																"src": "16030:32:8"
															},
															"nativeSrc": "16027:119:8",
															"nodeType": "YulIf",
															"src": "16027:119:8"
														},
														{
															"nativeSrc": "16156:126:8",
															"nodeType": "YulBlock",
															"src": "16156:126:8",
															"statements": [
																{
																	"nativeSrc": "16171:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16171:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16185:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16185:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16175:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16175:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16200:72:8",
																	"nodeType": "YulAssignment",
																	"src": "16200:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16244:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16244:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16255:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16240:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16240:3:8"
																				},
																				"nativeSrc": "16240:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16264:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "16210:29:8",
																			"nodeType": "YulIdentifier",
																			"src": "16210:29:8"
																		},
																		"nativeSrc": "16210:62:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16210:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16200:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16200:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "15942:347:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15987:9:8",
														"nodeType": "YulTypedName",
														"src": "15987:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15998:7:8",
														"nodeType": "YulTypedName",
														"src": "15998:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16010:6:8",
														"nodeType": "YulTypedName",
														"src": "16010:6:8",
														"type": ""
													}
												],
												"src": "15942:347:8"
											},
											{
												"body": {
													"nativeSrc": "16346:51:8",
													"nodeType": "YulBlock",
													"src": "16346:51:8",
													"statements": [
														{
															"nativeSrc": "16356:34:8",
															"nodeType": "YulAssignment",
															"src": "16356:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16381:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16381:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16384:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16377:3:8"
																},
																"nativeSrc": "16377:13:8",
																"nodeType": "YulFunctionCall",
																"src": "16377:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16356:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "16356:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "16295:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16327:5:8",
														"nodeType": "YulTypedName",
														"src": "16327:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16337:8:8",
														"nodeType": "YulTypedName",
														"src": "16337:8:8",
														"type": ""
													}
												],
												"src": "16295:102:8"
											},
											{
												"body": {
													"nativeSrc": "16476:775:8",
													"nodeType": "YulBlock",
													"src": "16476:775:8",
													"statements": [
														{
															"nativeSrc": "16486:15:8",
															"nodeType": "YulAssignment",
															"src": "16486:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "16495:6:8",
																"nodeType": "YulIdentifier",
																"src": "16495:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "16486:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16486:5:8"
																}
															]
														},
														{
															"nativeSrc": "16510:14:8",
															"nodeType": "YulAssignment",
															"src": "16510:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "16519:5:8",
																"nodeType": "YulIdentifier",
																"src": "16519:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "16510:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16510:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16568:677:8",
																"nodeType": "YulBlock",
																"src": "16568:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "16656:22:8",
																			"nodeType": "YulBlock",
																			"src": "16656:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "16658:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "16658:16:8"
																						},
																						"nativeSrc": "16658:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "16658:18:8"
																					},
																					"nativeSrc": "16658:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "16658:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "16634:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "16634:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "16644:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "16644:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "16649:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "16649:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "16640:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "16640:3:8"
																					},
																					"nativeSrc": "16640:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16640:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "16631:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "16631:2:8"
																			},
																			"nativeSrc": "16631:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16631:24:8"
																		},
																		"nativeSrc": "16628:50:8",
																		"nodeType": "YulIf",
																		"src": "16628:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "16723:419:8",
																			"nodeType": "YulBlock",
																			"src": "16723:419:8",
																			"statements": [
																				{
																					"nativeSrc": "17103:25:8",
																					"nodeType": "YulAssignment",
																					"src": "17103:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "17116:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "17116:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "17123:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "17123:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "17112:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "17112:3:8"
																						},
																						"nativeSrc": "17112:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17112:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "17103:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "17103:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "16698:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "16698:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16708:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16708:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "16694:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16694:3:8"
																			},
																			"nativeSrc": "16694:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16694:16:8"
																		},
																		"nativeSrc": "16691:451:8",
																		"nodeType": "YulIf",
																		"src": "16691:451:8"
																	},
																	{
																		"nativeSrc": "17155:23:8",
																		"nodeType": "YulAssignment",
																		"src": "17155:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17167:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "17167:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "17173:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "17173:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "17163:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "17163:3:8"
																			},
																			"nativeSrc": "17163:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17163:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "17155:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17155:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17191:44:8",
																		"nodeType": "YulAssignment",
																		"src": "17191:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "17226:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "17226:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "17203:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "17203:22:8"
																			},
																			"nativeSrc": "17203:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17203:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "17191:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "17191:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "16544:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "16544:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16554:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16554:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16541:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16541:2:8"
																},
																"nativeSrc": "16541:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16541:15:8"
															},
															"nativeSrc": "16533:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16557:2:8",
																"nodeType": "YulBlock",
																"src": "16557:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "16537:3:8",
																"nodeType": "YulBlock",
																"src": "16537:3:8",
																"statements": []
															},
															"src": "16533:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "16403:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "16431:6:8",
														"nodeType": "YulTypedName",
														"src": "16431:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "16439:5:8",
														"nodeType": "YulTypedName",
														"src": "16439:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "16446:8:8",
														"nodeType": "YulTypedName",
														"src": "16446:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "16456:3:8",
														"nodeType": "YulTypedName",
														"src": "16456:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "16464:5:8",
														"nodeType": "YulTypedName",
														"src": "16464:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "16471:4:8",
														"nodeType": "YulTypedName",
														"src": "16471:4:8",
														"type": ""
													}
												],
												"src": "16403:848:8"
											},
											{
												"body": {
													"nativeSrc": "17317:1013:8",
													"nodeType": "YulBlock",
													"src": "17317:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "17512:20:8",
																"nodeType": "YulBlock",
																"src": "17512:20:8",
																"statements": [
																	{
																		"nativeSrc": "17514:10:8",
																		"nodeType": "YulAssignment",
																		"src": "17514:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17523:1:8",
																			"nodeType": "YulLiteral",
																			"src": "17523:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17514:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "17514:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17525:5:8",
																		"nodeType": "YulLeave",
																		"src": "17525:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17502:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "17502:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17495:6:8"
																},
																"nativeSrc": "17495:16:8",
																"nodeType": "YulFunctionCall",
																"src": "17495:16:8"
															},
															"nativeSrc": "17492:40:8",
															"nodeType": "YulIf",
															"src": "17492:40:8"
														},
														{
															"body": {
																"nativeSrc": "17557:20:8",
																"nodeType": "YulBlock",
																"src": "17557:20:8",
																"statements": [
																	{
																		"nativeSrc": "17559:10:8",
																		"nodeType": "YulAssignment",
																		"src": "17559:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17568:1:8",
																			"nodeType": "YulLiteral",
																			"src": "17568:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17559:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "17559:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17570:5:8",
																		"nodeType": "YulLeave",
																		"src": "17570:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17551:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17551:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17544:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17544:6:8"
																},
																"nativeSrc": "17544:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17544:12:8"
															},
															"nativeSrc": "17541:36:8",
															"nodeType": "YulIf",
															"src": "17541:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17687:20:8",
																		"nodeType": "YulBlock",
																		"src": "17687:20:8",
																		"statements": [
																			{
																				"nativeSrc": "17689:10:8",
																				"nodeType": "YulAssignment",
																				"src": "17689:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17698:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17698:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "17689:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "17689:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "17700:5:8",
																				"nodeType": "YulLeave",
																				"src": "17700:5:8"
																			}
																		]
																	},
																	"nativeSrc": "17680:27:8",
																	"nodeType": "YulCase",
																	"src": "17680:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17685:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17685:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17731:176:8",
																		"nodeType": "YulBlock",
																		"src": "17731:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "17766:22:8",
																					"nodeType": "YulBlock",
																					"src": "17766:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "17768:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "17768:16:8"
																								},
																								"nativeSrc": "17768:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17768:18:8"
																							},
																							"nativeSrc": "17768:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "17768:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "17751:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "17751:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17761:3:8",
																							"nodeType": "YulLiteral",
																							"src": "17761:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "17748:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17748:2:8"
																					},
																					"nativeSrc": "17748:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17748:17:8"
																				},
																				"nativeSrc": "17745:43:8",
																				"nodeType": "YulIf",
																				"src": "17745:43:8"
																			},
																			{
																				"nativeSrc": "17801:25:8",
																				"nodeType": "YulAssignment",
																				"src": "17801:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "17814:1:8",
																							"nodeType": "YulLiteral",
																							"src": "17814:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "17817:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "17817:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "17810:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "17810:3:8"
																					},
																					"nativeSrc": "17810:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17810:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "17801:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "17801:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17857:22:8",
																					"nodeType": "YulBlock",
																					"src": "17857:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "17859:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "17859:16:8"
																								},
																								"nativeSrc": "17859:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17859:18:8"
																							},
																							"nativeSrc": "17859:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "17859:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "17845:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "17845:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "17852:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "17852:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "17842:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17842:2:8"
																					},
																					"nativeSrc": "17842:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17842:14:8"
																				},
																				"nativeSrc": "17839:40:8",
																				"nodeType": "YulIf",
																				"src": "17839:40:8"
																			},
																			{
																				"nativeSrc": "17892:5:8",
																				"nodeType": "YulLeave",
																				"src": "17892:5:8"
																			}
																		]
																	},
																	"nativeSrc": "17716:191:8",
																	"nodeType": "YulCase",
																	"src": "17716:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17721:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17721:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "17637:4:8",
																"nodeType": "YulIdentifier",
																"src": "17637:4:8"
															},
															"nativeSrc": "17630:277:8",
															"nodeType": "YulSwitch",
															"src": "17630:277:8"
														},
														{
															"body": {
																"nativeSrc": "18039:123:8",
																"nodeType": "YulBlock",
																"src": "18039:123:8",
																"statements": [
																	{
																		"nativeSrc": "18053:28:8",
																		"nodeType": "YulAssignment",
																		"src": "18053:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18066:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "18066:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "18072:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "18072:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "18062:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18062:3:8"
																			},
																			"nativeSrc": "18062:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18062:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18053:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "18053:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18112:22:8",
																			"nodeType": "YulBlock",
																			"src": "18112:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "18114:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "18114:16:8"
																						},
																						"nativeSrc": "18114:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "18114:18:8"
																					},
																					"nativeSrc": "18114:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "18114:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "18100:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "18100:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "18107:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "18107:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "18097:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "18097:2:8"
																			},
																			"nativeSrc": "18097:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18097:14:8"
																		},
																		"nativeSrc": "18094:40:8",
																		"nodeType": "YulIf",
																		"src": "18094:40:8"
																	},
																	{
																		"nativeSrc": "18147:5:8",
																		"nodeType": "YulLeave",
																		"src": "18147:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17942:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "17942:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17948:2:8",
																						"nodeType": "YulLiteral",
																						"src": "17948:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17939:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "17939:2:8"
																				},
																				"nativeSrc": "17939:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17939:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "17956:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "17956:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17966:2:8",
																						"nodeType": "YulLiteral",
																						"src": "17966:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17953:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "17953:2:8"
																				},
																				"nativeSrc": "17953:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17953:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17935:3:8"
																		},
																		"nativeSrc": "17935:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17935:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17991:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "17991:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17997:3:8",
																						"nodeType": "YulLiteral",
																						"src": "17997:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17988:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "17988:2:8"
																				},
																				"nativeSrc": "17988:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17988:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18006:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "18006:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18016:2:8",
																						"nodeType": "YulLiteral",
																						"src": "18016:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18003:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "18003:2:8"
																				},
																				"nativeSrc": "18003:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "18003:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17984:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17984:3:8"
																		},
																		"nativeSrc": "17984:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17984:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17919:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17919:2:8"
																},
																"nativeSrc": "17919:111:8",
																"nodeType": "YulFunctionCall",
																"src": "17919:111:8"
															},
															"nativeSrc": "17916:246:8",
															"nodeType": "YulIf",
															"src": "17916:246:8"
														},
														{
															"nativeSrc": "18172:57:8",
															"nodeType": "YulAssignment",
															"src": "18172:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18206:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18206:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "18209:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18209:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "18215:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "18215:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "18225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18225:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "18187:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "18187:18:8"
																},
																"nativeSrc": "18187:42:8",
																"nodeType": "YulFunctionCall",
																"src": "18187:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18172:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18172:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "18179:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18179:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18268:22:8",
																"nodeType": "YulBlock",
																"src": "18268:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18270:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "18270:16:8"
																			},
																			"nativeSrc": "18270:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18270:18:8"
																		},
																		"nativeSrc": "18270:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18270:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "18245:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18245:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "18256:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18256:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "18261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18252:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18252:3:8"
																		},
																		"nativeSrc": "18252:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18252:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18242:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18242:2:8"
																},
																"nativeSrc": "18242:25:8",
																"nodeType": "YulFunctionCall",
																"src": "18242:25:8"
															},
															"nativeSrc": "18239:51:8",
															"nodeType": "YulIf",
															"src": "18239:51:8"
														},
														{
															"nativeSrc": "18299:25:8",
															"nodeType": "YulAssignment",
															"src": "18299:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "18312:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18312:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "18319:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18319:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18308:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18308:3:8"
																},
																"nativeSrc": "18308:16:8",
																"nodeType": "YulFunctionCall",
																"src": "18308:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18299:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18299:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "17257:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "17287:4:8",
														"nodeType": "YulTypedName",
														"src": "17287:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17293:8:8",
														"nodeType": "YulTypedName",
														"src": "17293:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17303:3:8",
														"nodeType": "YulTypedName",
														"src": "17303:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17311:5:8",
														"nodeType": "YulTypedName",
														"src": "17311:5:8",
														"type": ""
													}
												],
												"src": "17257:1073:8"
											},
											{
												"body": {
													"nativeSrc": "18402:219:8",
													"nodeType": "YulBlock",
													"src": "18402:219:8",
													"statements": [
														{
															"nativeSrc": "18412:31:8",
															"nodeType": "YulAssignment",
															"src": "18412:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18438:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18438:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18420:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18420:17:8"
																},
																"nativeSrc": "18420:23:8",
																"nodeType": "YulFunctionCall",
																"src": "18420:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "18412:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18412:4:8"
																}
															]
														},
														{
															"nativeSrc": "18452:39:8",
															"nodeType": "YulAssignment",
															"src": "18452:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18482:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "18482:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18464:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18464:17:8"
																},
																"nativeSrc": "18464:27:8",
																"nodeType": "YulFunctionCall",
																"src": "18464:27:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "18452:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "18452:8:8"
																}
															]
														},
														{
															"nativeSrc": "18501:113:8",
															"nodeType": "YulAssignment",
															"src": "18501:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18531:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18531:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "18537:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "18537:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18547:66:8",
																		"nodeType": "YulLiteral",
																		"src": "18547:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "18510:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "18510:20:8"
																},
																"nativeSrc": "18510:104:8",
																"nodeType": "YulFunctionCall",
																"src": "18510:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18501:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18501:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "18336:285:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18377:4:8",
														"nodeType": "YulTypedName",
														"src": "18377:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18383:8:8",
														"nodeType": "YulTypedName",
														"src": "18383:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18396:5:8",
														"nodeType": "YulTypedName",
														"src": "18396:5:8",
														"type": ""
													}
												],
												"src": "18336:285:8"
											},
											{
												"body": {
													"nativeSrc": "18672:149:8",
													"nodeType": "YulBlock",
													"src": "18672:149:8",
													"statements": [
														{
															"nativeSrc": "18682:25:8",
															"nodeType": "YulAssignment",
															"src": "18682:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18705:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18705:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18687:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18687:17:8"
																},
																"nativeSrc": "18687:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18687:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18682:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18682:1:8"
																}
															]
														},
														{
															"nativeSrc": "18716:25:8",
															"nodeType": "YulAssignment",
															"src": "18716:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18739:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18739:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18721:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18721:17:8"
																},
																"nativeSrc": "18721:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18721:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18716:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18716:1:8"
																}
															]
														},
														{
															"nativeSrc": "18750:17:8",
															"nodeType": "YulAssignment",
															"src": "18750:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18762:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18762:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18765:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18765:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18758:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18758:3:8"
																},
																"nativeSrc": "18758:9:8",
																"nodeType": "YulFunctionCall",
																"src": "18758:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18750:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18750:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18792:22:8",
																"nodeType": "YulBlock",
																"src": "18792:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18794:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "18794:16:8"
																			},
																			"nativeSrc": "18794:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18794:18:8"
																		},
																		"nativeSrc": "18794:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18794:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18783:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18783:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18789:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18789:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18780:2:8"
																},
																"nativeSrc": "18780:11:8",
																"nodeType": "YulFunctionCall",
																"src": "18780:11:8"
															},
															"nativeSrc": "18777:37:8",
															"nodeType": "YulIf",
															"src": "18777:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18627:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18658:1:8",
														"nodeType": "YulTypedName",
														"src": "18658:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18661:1:8",
														"nodeType": "YulTypedName",
														"src": "18661:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18667:4:8",
														"nodeType": "YulTypedName",
														"src": "18667:4:8",
														"type": ""
													}
												],
												"src": "18627:194:8"
											},
											{
												"body": {
													"nativeSrc": "18933:64:8",
													"nodeType": "YulBlock",
													"src": "18933:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18955:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18955:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18963:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18963:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18951:3:8"
																		},
																		"nativeSrc": "18951:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18951:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "18967:22:8",
																		"nodeType": "YulLiteral",
																		"src": "18967:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18944:6:8"
																},
																"nativeSrc": "18944:46:8",
																"nodeType": "YulFunctionCall",
																"src": "18944:46:8"
															},
															"nativeSrc": "18944:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "18944:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "18827:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18925:6:8",
														"nodeType": "YulTypedName",
														"src": "18925:6:8",
														"type": ""
													}
												],
												"src": "18827:170:8"
											},
											{
												"body": {
													"nativeSrc": "19149:220:8",
													"nodeType": "YulBlock",
													"src": "19149:220:8",
													"statements": [
														{
															"nativeSrc": "19159:74:8",
															"nodeType": "YulAssignment",
															"src": "19159:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19225:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19230:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19230:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19166:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19166:58:8"
																},
																"nativeSrc": "19166:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19166:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19159:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19159:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19331:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19331:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "19242:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19242:88:8"
																},
																"nativeSrc": "19242:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19242:93:8"
															},
															"nativeSrc": "19242:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19242:93:8"
														},
														{
															"nativeSrc": "19344:19:8",
															"nodeType": "YulAssignment",
															"src": "19344:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19355:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19355:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19360:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19360:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19351:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19351:3:8"
																},
																"nativeSrc": "19351:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19351:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19344:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19344:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19003:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19137:3:8",
														"nodeType": "YulTypedName",
														"src": "19137:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19145:3:8",
														"nodeType": "YulTypedName",
														"src": "19145:3:8",
														"type": ""
													}
												],
												"src": "19003:366:8"
											},
											{
												"body": {
													"nativeSrc": "19546:248:8",
													"nodeType": "YulBlock",
													"src": "19546:248:8",
													"statements": [
														{
															"nativeSrc": "19556:26:8",
															"nodeType": "YulAssignment",
															"src": "19556:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19568:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19568:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19579:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19579:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19564:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19564:3:8"
																},
																"nativeSrc": "19564:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19564:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19556:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19556:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19603:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19603:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19614:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19614:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19599:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19599:3:8"
																		},
																		"nativeSrc": "19599:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19599:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19622:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19622:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19628:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19628:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19618:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19618:3:8"
																		},
																		"nativeSrc": "19618:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19618:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19592:6:8"
																},
																"nativeSrc": "19592:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19592:47:8"
															},
															"nativeSrc": "19592:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19592:47:8"
														},
														{
															"nativeSrc": "19648:139:8",
															"nodeType": "YulAssignment",
															"src": "19648:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19782:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19782:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19656:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19656:124:8"
																},
																"nativeSrc": "19656:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19656:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19648:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19375:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19526:9:8",
														"nodeType": "YulTypedName",
														"src": "19526:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19541:4:8",
														"nodeType": "YulTypedName",
														"src": "19541:4:8",
														"type": ""
													}
												],
												"src": "19375:419:8"
											},
											{
												"body": {
													"nativeSrc": "19926:206:8",
													"nodeType": "YulBlock",
													"src": "19926:206:8",
													"statements": [
														{
															"nativeSrc": "19936:26:8",
															"nodeType": "YulAssignment",
															"src": "19936:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19948:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19948:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19959:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19959:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19944:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19944:3:8"
																},
																"nativeSrc": "19944:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19944:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19936:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19936:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20016:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20016:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20029:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20029:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20040:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20040:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20025:3:8"
																		},
																		"nativeSrc": "20025:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20025:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19972:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19972:43:8"
																},
																"nativeSrc": "19972:71:8",
																"nodeType": "YulFunctionCall",
																"src": "19972:71:8"
															},
															"nativeSrc": "19972:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "19972:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20097:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20097:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20110:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20110:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20121:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20121:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20106:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20106:3:8"
																		},
																		"nativeSrc": "20106:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20106:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20053:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20053:43:8"
																},
																"nativeSrc": "20053:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20053:72:8"
															},
															"nativeSrc": "20053:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20053:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19800:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19890:9:8",
														"nodeType": "YulTypedName",
														"src": "19890:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19902:6:8",
														"nodeType": "YulTypedName",
														"src": "19902:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19910:6:8",
														"nodeType": "YulTypedName",
														"src": "19910:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19921:4:8",
														"nodeType": "YulTypedName",
														"src": "19921:4:8",
														"type": ""
													}
												],
												"src": "19800:332:8"
											},
											{
												"body": {
													"nativeSrc": "20264:206:8",
													"nodeType": "YulBlock",
													"src": "20264:206:8",
													"statements": [
														{
															"nativeSrc": "20274:26:8",
															"nodeType": "YulAssignment",
															"src": "20274:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20286:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20286:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20297:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20297:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20282:3:8"
																},
																"nativeSrc": "20282:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20282:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20274:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20274:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20354:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20354:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20367:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20367:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20378:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20378:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20363:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20363:3:8"
																		},
																		"nativeSrc": "20363:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20363:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20310:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20310:43:8"
																},
																"nativeSrc": "20310:71:8",
																"nodeType": "YulFunctionCall",
																"src": "20310:71:8"
															},
															"nativeSrc": "20310:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "20310:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20435:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20435:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20448:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20448:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20459:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20459:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20444:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20444:3:8"
																		},
																		"nativeSrc": "20444:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20444:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20391:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20391:43:8"
																},
																"nativeSrc": "20391:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20391:72:8"
															},
															"nativeSrc": "20391:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20391:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "20138:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20228:9:8",
														"nodeType": "YulTypedName",
														"src": "20228:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20240:6:8",
														"nodeType": "YulTypedName",
														"src": "20240:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20248:6:8",
														"nodeType": "YulTypedName",
														"src": "20248:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20259:4:8",
														"nodeType": "YulTypedName",
														"src": "20259:4:8",
														"type": ""
													}
												],
												"src": "20138:332:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$502(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$502(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$502(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$502(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$502(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$502t_uint256t_contract$_IERC20_$502t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$502(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$502(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$502_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$502_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$502_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$502__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$502_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Asset not supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Oracle not set for asset\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price data\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c806390805c34116100c1578063bd998cb31161007a578063bd998cb31461039b578063be354836146103b9578063c68dbb37146103e9578063d547741f14610419578063f3fef3a314610435578063f4457fab146104515761014b565b806390805c34146102c757806391d14854146102e35780639e4a936914610313578063a217fddf14610331578063a356efc41461034f578063bb39a9601461037f5761014b565b806330e5065e1161011357806330e5065e1461020557806336568abe1461023557806347e7ef2414610251578063523820a11461026d5780635e5a24a41461028b57806375b238fc146102a95761014b565b806301ffc9a71461014f57806306f34c2f1461017f5780630ba36dcd14610189578063248a9ca3146101b95780632f2ff15d146101e9575b5f80fd5b61016960048036038101906101649190611694565b61046f565b60405161017691906116d9565b60405180910390f35b6101876104e8565b005b6101a3600480360381019061019e919061174c565b61054f565b6040516101b0919061178f565b60405180910390f35b6101d360048036038101906101ce91906117db565b610569565b6040516101e09190611815565b60405180910390f35b61020360048036038101906101fe919061182e565b610585565b005b61021f600480360381019061021a919061174c565b6105a7565b60405161022c919061178f565b60405180910390f35b61024f600480360381019061024a919061182e565b6105bc565b005b61026b60048036038101906102669190611896565b610637565b005b610275610858565b604051610282919061178f565b60405180910390f35b61029361085e565b6040516102a09190611815565b60405180910390f35b6102b1610882565b6040516102be9190611815565b60405180910390f35b6102e160048036038101906102dc91906118d4565b6108a6565b005b6102fd60048036038101906102f8919061182e565b610950565b60405161030a91906116d9565b60405180910390f35b61031b6109b3565b604051610328919061178f565b60405180910390f35b610339610aa6565b6040516103469190611815565b60405180910390f35b61036960048036038101906103649190611896565b610aac565b604051610376919061178f565b60405180910390f35b6103996004803603810190610394919061194d565b610cd2565b005b6103a3610d47565b6040516103b0919061178f565b60405180910390f35b6103d360048036038101906103ce919061174c565b610d4d565b6040516103e0919061178f565b60405180910390f35b61040360048036038101906103fe91906119b1565b610d62565b6040516104109190611a37565b60405180910390f35b610433600480360381019061042e919061182e565b610d9d565b005b61044f600480360381019061044a9190611896565b610dbf565b005b610459611161565b604051610466919061178f565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e157506104e082611167565b5b9050919050565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b610512816111d0565b5f61051b6111e4565b90505f81111561054b575f6064600754836105369190611a7d565b6105409190611aeb565b905080600881905550505b5050565b6005602052805f5260405f205f91509050805f0154905081565b5f805f8381526020019081526020015f20600101549050919050565b61058e82610569565b610597816111d0565b6105a183836111e8565b50505050565b6003602052805f5260405f205f915090505481565b6105c46112d1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610628576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063282826112d8565b505050565b610640826113c1565b61067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690611b75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd6106a36112d1565b30846040518463ffffffff1660e01b81526004016106c393929190611ba2565b6020604051808303815f875af11580156106df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107039190611c01565b508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107509190611c2c565b925050819055506107618282611463565b60055f61076c6112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107b59190611c2c565b925050819055508060055f6107c86112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461084d9190611c2c565b925050819055505050565b60085481565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756108d0816111d0565b8160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f805f90505f5b600280549050811015610a9e57610a84600282815481106109de576109dd611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f60028581548110610a1d57610a1c611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611463565b82610a8f9190611c2c565b915080806001019150506109ba565b508091505090565b5f801b81565b5f8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290611cd6565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be99190611d7a565b5050509150505f8113610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2890611e3b565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c7b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9f9190611e8f565b60ff16905080600a610cb19190611fe9565b8286610cbd9190611a7d565b610cc79190611aeb565b935050505092915050565b7fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b610cfc816111d0565b5f610d078484611463565b90505f610d148787611463565b90505f8183610d239190612033565b90508060095f828254610d369190611c2c565b925050819055505050505050505050565b60095481565b6006602052805f5260405f205f915090505481565b60028181548110610d71575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610da682610569565b610daf816111d0565b610db983836112d8565b50505050565b8060055f610dcb6112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b906120b0565b60405180910390fd5b8060055f610e906112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f159190612033565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f689190612033565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610f936112d1565b836040518363ffffffff1660e01b8152600401610fb19291906120ce565b6020604051808303815f875af1158015610fcd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff19190611c01565b505f611003610ffe6112d1565b611553565b90508060065f6110116112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110589190611c2c565b925050819055506110698383611463565b60055f6110746112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546110bd9190612033565b925050819055508160055f6110d06112d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111559190612033565b92505081905550505050565b60075481565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111e1816111dc6112d1565b6115ea565b50565b5f90565b5f6111f38383610950565b6112c75760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112646112d1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506112cb565b5f90505b92915050565b5f33905090565b5f6112e38383610950565b156113b7575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506113546112d1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506113bb565b5f90505b92915050565b5f805f90505b600280549050811015611459578273ffffffffffffffffffffffffffffffffffffffff16600282815481106113ff576113fe611c5f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361144c57600191505061145e565b80806001019150506113c7565b505f90505b919050565b5f8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561150e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115329190611d7a565b5050509150505f84826115459190611a7d565b905080935050505092915050565b5f8061155d6109b3565b670de0b6b3a764000060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01546115b09190611a7d565b6115ba9190611aeb565b90505f670de0b6b3a7640000826009546115d49190611a7d565b6115de9190611aeb565b90508092505050919050565b6115f48282610950565b6116375780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161162e9291906120f5565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116738161163f565b811461167d575f80fd5b50565b5f8135905061168e8161166a565b92915050565b5f602082840312156116a9576116a861163b565b5b5f6116b684828501611680565b91505092915050565b5f8115159050919050565b6116d3816116bf565b82525050565b5f6020820190506116ec5f8301846116ca565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f80fd5b50565b5f8135905061174681611722565b92915050565b5f602082840312156117615761176061163b565b5b5f61176e84828501611738565b91505092915050565b5f819050919050565b61178981611777565b82525050565b5f6020820190506117a25f830184611780565b92915050565b5f819050919050565b6117ba816117a8565b81146117c4575f80fd5b50565b5f813590506117d5816117b1565b92915050565b5f602082840312156117f0576117ef61163b565b5b5f6117fd848285016117c7565b91505092915050565b61180f816117a8565b82525050565b5f6020820190506118285f830184611806565b92915050565b5f80604083850312156118445761184361163b565b5b5f611851858286016117c7565b925050602061186285828601611738565b9150509250929050565b61187581611777565b811461187f575f80fd5b50565b5f813590506118908161186c565b92915050565b5f80604083850312156118ac576118ab61163b565b5b5f6118b985828601611738565b92505060206118ca85828601611882565b9150509250929050565b5f80604083850312156118ea576118e961163b565b5b5f6118f785828601611738565b925050602061190885828601611738565b9150509250929050565b5f61191c82611711565b9050919050565b61192c81611912565b8114611936575f80fd5b50565b5f8135905061194781611923565b92915050565b5f805f80608085870312156119655761196461163b565b5b5f61197287828801611939565b945050602061198387828801611882565b935050604061199487828801611939565b92505060606119a587828801611882565b91505092959194509250565b5f602082840312156119c6576119c561163b565b5b5f6119d384828501611882565b91505092915050565b5f819050919050565b5f6119ff6119fa6119f5846116f2565b6119dc565b6116f2565b9050919050565b5f611a10826119e5565b9050919050565b5f611a2182611a06565b9050919050565b611a3181611a17565b82525050565b5f602082019050611a4a5f830184611a28565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a8782611777565b9150611a9283611777565b9250828202611aa081611777565b91508282048414831517611ab757611ab6611a50565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611af582611777565b9150611b0083611777565b925082611b1057611b0f611abe565b5b828204905092915050565b5f82825260208201905092915050565b7f4173736574206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f611b5f601383611b1b565b9150611b6a82611b2b565b602082019050919050565b5f6020820190508181035f830152611b8c81611b53565b9050919050565b611b9c81611711565b82525050565b5f606082019050611bb55f830186611b93565b611bc26020830185611b93565b611bcf6040830184611780565b949350505050565b611be0816116bf565b8114611bea575f80fd5b50565b5f81519050611bfb81611bd7565b92915050565b5f60208284031215611c1657611c1561163b565b5b5f611c2384828501611bed565b91505092915050565b5f611c3682611777565b9150611c4183611777565b9250828201905080821115611c5957611c58611a50565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f7261636c65206e6f742073657420666f7220617373657400000000000000005f82015250565b5f611cc0601883611b1b565b9150611ccb82611c8c565b602082019050919050565b5f6020820190508181035f830152611ced81611cb4565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611d1281611cf4565b8114611d1c575f80fd5b50565b5f81519050611d2d81611d09565b92915050565b5f819050919050565b611d4581611d33565b8114611d4f575f80fd5b50565b5f81519050611d6081611d3c565b92915050565b5f81519050611d748161186c565b92915050565b5f805f805f60a08688031215611d9357611d9261163b565b5b5f611da088828901611d1f565b9550506020611db188828901611d52565b9450506040611dc288828901611d66565b9350506060611dd388828901611d66565b9250506080611de488828901611d1f565b9150509295509295909350565b7f496e76616c6964207072696365206461746100000000000000000000000000005f82015250565b5f611e25601283611b1b565b9150611e3082611df1565b602082019050919050565b5f6020820190508181035f830152611e5281611e19565b9050919050565b5f60ff82169050919050565b611e6e81611e59565b8114611e78575f80fd5b50565b5f81519050611e8981611e65565b92915050565b5f60208284031215611ea457611ea361163b565b5b5f611eb184828501611e7b565b91505092915050565b5f8160011c9050919050565b5f808291508390505b6001851115611f0f57808604811115611eeb57611eea611a50565b5b6001851615611efa5780820291505b8081029050611f0885611eba565b9450611ecf565b94509492505050565b5f82611f275760019050611fe2565b81611f34575f9050611fe2565b8160018114611f4a5760028114611f5457611f83565b6001915050611fe2565b60ff841115611f6657611f65611a50565b5b8360020a915084821115611f7d57611f7c611a50565b5b50611fe2565b5060208310610133831016604e8410600b8410161715611fb85782820a905083811115611fb357611fb2611a50565b5b611fe2565b611fc58484846001611ec6565b92509050818404811115611fdc57611fdb611a50565b5b81810290505b9392505050565b5f611ff382611777565b9150611ffe83611777565b925061202b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f18565b905092915050565b5f61203d82611777565b915061204883611777565b92508282039050818111156120605761205f611a50565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61209a601483611b1b565b91506120a582612066565b602082019050919050565b5f6020820190508181035f8301526120c78161208e565b9050919050565b5f6040820190506120e15f830185611b93565b6120ee6020830184611780565b9392505050565b5f6040820190506121085f830185611b93565b6121156020830184611806565b939250505056fea26469706673582212203122113be70ffbcfa896301971a9ee8c4aea628265c5674c75ed26967e7e4c9864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90805C34 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBD998CB3 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBD998CB3 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xBE354836 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xC68DBB37 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF4457FAB EQ PUSH2 0x451 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x90805C34 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x9E4A9369 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xA356EFC4 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xBB39A960 EQ PUSH2 0x37F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x30E5065E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x30E5065E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x523820A1 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x5E5A24A4 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2A9 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6F34C2F EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xBA36DCD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E1 JUMPI POP PUSH2 0x4E0 DUP3 PUSH2 0x1167 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B PUSH2 0x512 DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH0 PUSH2 0x51B PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58E DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x5A1 DUP4 DUP4 PUSH2 0x11E8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x640 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x6A3 PUSH2 0x12D1 JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x761 DUP3 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH2 0x76C PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x7C8 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x8D0 DUP2 PUSH2 0x11D0 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA84 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1463 JUMP JUMPDEST DUP3 PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9BA JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP1 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0xA PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x1FE9 JUMP JUMPDEST DUP3 DUP7 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xD1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B PUSH2 0xCFC DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH0 PUSH2 0xD07 DUP5 DUP5 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD14 DUP8 DUP8 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDA6 DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xDB9 DUP4 DUP4 PUSH2 0x12D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0xDCB PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0xE90 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xF93 PUSH2 0x12D1 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF1 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST POP PUSH0 PUSH2 0x1003 PUSH2 0xFFE PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x1011 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1069 DUP4 DUP4 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH2 0x1074 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x10D0 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11DC PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x15EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x11F3 DUP4 DUP4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x12C7 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1264 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x12CB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x12E3 DUP4 DUP4 PUSH2 0x950 JUMP JUMPDEST ISZERO PUSH2 0x13B7 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1354 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x13BB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x145E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13C7 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1532 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP5 DUP3 PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x155D PUSH2 0x9B3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x15B0 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x9 SLOAD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F4 DUP3 DUP3 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x1637 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP3 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x163F JUMP JUMPDEST DUP2 EQ PUSH2 0x167D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168E DUP2 PUSH2 0x166A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B6 DUP5 DUP3 DUP6 ADD PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH0 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176E DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1828 PUSH0 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1851 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1862 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x1777 JUMP JUMPDEST DUP2 EQ PUSH2 0x187F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1890 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AB PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B9 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CA DUP6 DUP3 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F7 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1908 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191C DUP3 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192C DUP2 PUSH2 0x1912 JUMP JUMPDEST DUP2 EQ PUSH2 0x1936 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1947 DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1972 DUP8 DUP3 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1983 DUP8 DUP3 DUP9 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1994 DUP8 DUP3 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x19A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1882 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FF PUSH2 0x19FA PUSH2 0x19F5 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A10 DUP3 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A21 DUP3 PUSH2 0x1A06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A31 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A87 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A92 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AA0 DUP2 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF5 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B00 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B10 JUMPI PUSH2 0x1B0F PUSH2 0x1ABE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4173736574206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x13 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9C DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1BC2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1BCF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BFB DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C16 JUMPI PUSH2 0x1C15 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C23 DUP5 DUP3 DUP6 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C59 JUMPI PUSH2 0x1C58 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F7261636C65206E6F742073657420666F722061737365740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 PUSH1 0x18 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCB DUP3 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CED DUP2 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2D DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1D33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D60 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D74 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D92 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA0 DUP9 DUP3 DUP10 ADD PUSH2 0x1D1F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DB1 DUP9 DUP3 DUP10 ADD PUSH2 0x1D52 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DC2 DUP9 DUP3 DUP10 ADD PUSH2 0x1D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1DD3 DUP9 DUP3 DUP10 ADD PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1DE4 DUP9 DUP3 DUP10 ADD PUSH2 0x1D1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174610000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 PUSH1 0x12 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E30 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E52 DUP2 PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6E DUP2 PUSH2 0x1E59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E89 DUP2 PUSH2 0x1E65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x163B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB1 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F0F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1EFA JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F08 DUP6 PUSH2 0x1EBA JUMP JUMPDEST SWAP5 POP PUSH2 0x1ECF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1F27 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1FE2 JUMP JUMPDEST DUP2 PUSH2 0x1F34 JUMPI PUSH0 SWAP1 POP PUSH2 0x1FE2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F4A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F54 JUMPI PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1FE2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FB8 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x1FC5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1EC6 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF3 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFE DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP PUSH2 0x202B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x203D DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP PUSH2 0x2048 DUP4 PUSH2 0x1777 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2060 JUMPI PUSH2 0x205F PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x209A PUSH1 0x14 DUP4 PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x20A5 DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20C7 DUP2 PUSH2 0x208E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x20EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2108 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x22 GT EXTCODESIZE 0xE7 0xF 0xFB 0xCF 0xA8 SWAP7 ADDRESS NOT PUSH18 0xA9EE8C4AEA628265C5674C75ED26967E7E4C SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "323:6104:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5990:435:7;;;:::i;:::-;;953:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;808:52:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2349:450:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1108:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;615:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;705:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1789:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1975:368:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5132:564:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3971:553;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1147:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1010:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;771:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2805:800:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1063:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:1;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;5990:435:7:-;668:31;2464:16:1;2475:4;2464:10;:16::i;:::-;6071:15:7::1;6089:18;:16;:18::i;:::-;6071:36;;6131:1;6121:7;:11;6117:302;;;6148:22;6212:3;6184:24;;6174:7;:34;;;;:::i;:::-;6173:42;;;;:::i;:::-;6148:67;;6339:14;6318:18;:35;;;;6134:285;6117:302;6061:364;5990:435:::0;:::o;953:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;3810:120:1:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;808:52:7:-;;;;;;;;;;;;;;;;;:::o;5328:245:1:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2349:450:7:-;2426:32;2450:6;2426:16;:32::i;:::-;2418:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2499:6;2492:27;;;2520:12;:10;:12::i;:::-;2542:4;2549:7;2492:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2596:7;2567:17;:25;2585:6;2567:25;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2654:69;2686:6;2706:7;2654:18;:69::i;:::-;2613:12;:26;2626:12;:10;:12::i;:::-;2613:26;;;;;;;;;;;;;;;:37;;;:110;;;;;;;:::i;:::-;;;;;;;;2785:7;2733:12;:26;2746:12;:10;:12::i;:::-;2733:26;;;;;;;;;;;;;;;:40;;:48;2774:6;2733:48;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;2349:450;;:::o;1108:33::-;;;;:::o;615:84::-;668:31;615:84;:::o;705:60::-;742:23;705:60;:::o;1789:180::-;742:23;2464:16:1;2475:4;2464:10;:16::i;:::-;1954:7:7::1;1908:13;:21;1922:6;1908:21;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;1789:180:::0;;;:::o;2854:136:1:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1975:368:7:-;2026:7;2045:18;2066:1;2045:22;;2082:9;2077:233;2101:15;:22;;;;2097:1;:26;2077:233;;;2158:141;2202:15;2218:1;2202:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2239:17;:46;2265:15;2281:1;2265:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2239:46;;;;;;;;;;;;;;;;2158:18;:141::i;:::-;2144:155;;;;;:::i;:::-;;;2125:3;;;;;;;2077:233;;;;2326:10;2319:17;;;1975:368;:::o;2187:49:1:-;2232:4;2187:49;;;:::o;5132:564:7:-;5241:16;5273:31;5307:13;:21;5321:6;5307:21;;;;;;;;;;;;;;;;;;;;;;;;;5273:55;;5402:1;5359:46;;:9;:46;;;5338:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;5468:12;5490:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5465:52;;;;;;5543:1;5535:5;:9;5527:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5577:16;5604:9;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5596:29;;5577:48;;5680:8;5676:2;:12;;;;:::i;:::-;5665:5;5647:7;:24;;;;:::i;:::-;5646:43;;;;:::i;:::-;5635:54;;5263:433;;;5132:564;;;;:::o;3971:553::-;668:31;2464:16:1;2475:4;2464:10;:16::i;:::-;4230:20:7::1;4253:46;4280:7;4290:8;4253:18;:46::i;:::-;4230:69;;4360:21;4384:46;4411:7;4421:8;4384:18;:46::i;:::-;4360:70;;4440:14;4472:13;4457:12;:28;;;;:::i;:::-;4440:45;;4511:6;4495:12;;:22;;;;;;;:::i;:::-;;;;;;;;4130:394;;;3971:553:::0;;;;;:::o;1147:27::-;;;;:::o;1010:46::-;;;;;;;;;;;;;;;;;:::o;771:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4642:138:1:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;2805:800:7:-;2948:7;2896:12;:26;2909:12;:10;:12::i;:::-;2896:26;;;;;;;;;;;;;;;:40;;:48;2937:6;2896:48;;;;;;;;;;;;;;;;:59;;2875:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;3063:7;3011:12;:26;3024:12;:10;:12::i;:::-;3011:26;;;;;;;;;;;;;;;:40;;:48;3052:6;3011:48;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;3109:7;3080:17;:25;3098:6;3080:25;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;3133:6;3126:23;;;3150:12;:10;:12::i;:::-;3164:7;3126:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3247:19;3269:38;3294:12;:10;:12::i;:::-;3269:24;:38::i;:::-;3247:60;;3346:11;3317;:25;3329:12;:10;:12::i;:::-;3317:25;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;3460:69;3492:6;3512:7;3460:18;:69::i;:::-;3419:12;:26;3432:12;:10;:12::i;:::-;3419:26;;;;;;;;;;;;;;;:37;;;:110;;;;;;;:::i;:::-;;;;;;;;3591:7;3539:12;:26;3552:12;:10;:12::i;:::-;3539:26;;;;;;;;;;;;;;;:40;;:48;3580:6;3539:48;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;2865:740;2805:800;;:::o;1063:39::-;;;;:::o;762:146:5:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:1:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;5702:282:7:-;5753:7;5702:282;:::o;6179:316:1:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;6730:317:1:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;4530:263:7:-;4594:4;4615:9;4627:1;4615:13;;4610:155;4634:15;:22;;;;4630:1;:26;4610:155;;;4703:6;4681:28;;:15;4697:1;4681:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;;4677:78;;4736:4;4729:11;;;;;4677:78;4658:3;;;;;;;4610:155;;;;4781:5;4774:12;;4530:263;;;;:::o;4799:327::-;4907:7;4930:31;4964:13;:21;4978:6;4964:21;;;;;;;;;;;;;;;;;;;;;;;;;4930:55;;4998:12;5020:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4995:52;;;;;;5057:13;5090:7;5081:5;5073:24;;;;:::i;:::-;5057:40;;5114:5;5107:12;;;;;4799:327;;;;:::o;3611:354::-;3707:7;3730:17;3804:20;:18;:20::i;:::-;3784:4;3751:12;:19;3764:5;3751:19;;;;;;;;;;;;;;;:30;;;:37;;;;:::i;:::-;3750:74;;;;:::i;:::-;3730:94;;3875:19;3926:4;3913:9;3898:12;;:24;;;;:::i;:::-;3897:33;;;;:::i;:::-;3875:55;;3947:11;3940:18;;;;3611:354;;;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:8:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:77::-;2832:7;2861:5;2850:16;;2795:77;;;:::o;2878:122::-;2951:24;2969:5;2951:24;:::i;:::-;2944:5;2941:35;2931:63;;2990:1;2987;2980:12;2931:63;2878:122;:::o;3006:139::-;3052:5;3090:6;3077:20;3068:29;;3106:33;3133:5;3106:33;:::i;:::-;3006:139;;;;:::o;3151:329::-;3210:6;3259:2;3247:9;3238:7;3234:23;3230:32;3227:119;;;3265:79;;:::i;:::-;3227:119;3385:1;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3356:117;3151:329;;;;:::o;3486:118::-;3573:24;3591:5;3573:24;:::i;:::-;3568:3;3561:37;3486:118;;:::o;3610:222::-;3703:4;3741:2;3730:9;3726:18;3718:26;;3754:71;3822:1;3811:9;3807:17;3798:6;3754:71;:::i;:::-;3610:222;;;;:::o;3838:474::-;3906:6;3914;3963:2;3951:9;3942:7;3938:23;3934:32;3931:119;;;3969:79;;:::i;:::-;3931:119;4089:1;4114:53;4159:7;4150:6;4139:9;4135:22;4114:53;:::i;:::-;4104:63;;4060:117;4216:2;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;:::i;:::-;4232:63;;4187:118;3838:474;;;;;:::o;4318:122::-;4391:24;4409:5;4391:24;:::i;:::-;4384:5;4381:35;4371:63;;4430:1;4427;4420:12;4371:63;4318:122;:::o;4446:139::-;4492:5;4530:6;4517:20;4508:29;;4546:33;4573:5;4546:33;:::i;:::-;4446:139;;;;:::o;4591:474::-;4659:6;4667;4716:2;4704:9;4695:7;4691:23;4687:32;4684:119;;;4722:79;;:::i;:::-;4684:119;4842:1;4867:53;4912:7;4903:6;4892:9;4888:22;4867:53;:::i;:::-;4857:63;;4813:117;4969:2;4995:53;5040:7;5031:6;5020:9;5016:22;4995:53;:::i;:::-;4985:63;;4940:118;4591:474;;;;;:::o;5071:::-;5139:6;5147;5196:2;5184:9;5175:7;5171:23;5167:32;5164:119;;;5202:79;;:::i;:::-;5164:119;5322:1;5347:53;5392:7;5383:6;5372:9;5368:22;5347:53;:::i;:::-;5337:63;;5293:117;5449:2;5475:53;5520:7;5511:6;5500:9;5496:22;5475:53;:::i;:::-;5465:63;;5420:118;5071:474;;;;;:::o;5551:110::-;5602:7;5631:24;5649:5;5631:24;:::i;:::-;5620:35;;5551:110;;;:::o;5667:150::-;5754:38;5786:5;5754:38;:::i;:::-;5747:5;5744:49;5734:77;;5807:1;5804;5797:12;5734:77;5667:150;:::o;5823:167::-;5883:5;5921:6;5908:20;5899:29;;5937:47;5978:5;5937:47;:::i;:::-;5823:167;;;;:::o;5996:821::-;6110:6;6118;6126;6134;6183:3;6171:9;6162:7;6158:23;6154:33;6151:120;;;6190:79;;:::i;:::-;6151:120;6310:1;6335:67;6394:7;6385:6;6374:9;6370:22;6335:67;:::i;:::-;6325:77;;6281:131;6451:2;6477:53;6522:7;6513:6;6502:9;6498:22;6477:53;:::i;:::-;6467:63;;6422:118;6579:2;6605:67;6664:7;6655:6;6644:9;6640:22;6605:67;:::i;:::-;6595:77;;6550:132;6721:2;6747:53;6792:7;6783:6;6772:9;6768:22;6747:53;:::i;:::-;6737:63;;6692:118;5996:821;;;;;;;:::o;6823:329::-;6882:6;6931:2;6919:9;6910:7;6906:23;6902:32;6899:119;;;6937:79;;:::i;:::-;6899:119;7057:1;7082:53;7127:7;7118:6;7107:9;7103:22;7082:53;:::i;:::-;7072:63;;7028:117;6823:329;;;;:::o;7158:60::-;7186:3;7207:5;7200:12;;7158:60;;;:::o;7224:142::-;7274:9;7307:53;7325:34;7334:24;7352:5;7334:24;:::i;:::-;7325:34;:::i;:::-;7307:53;:::i;:::-;7294:66;;7224:142;;;:::o;7372:126::-;7422:9;7455:37;7486:5;7455:37;:::i;:::-;7442:50;;7372:126;;;:::o;7504:140::-;7568:9;7601:37;7632:5;7601:37;:::i;:::-;7588:50;;7504:140;;;:::o;7650:159::-;7751:51;7796:5;7751:51;:::i;:::-;7746:3;7739:64;7650:159;;:::o;7815:250::-;7922:4;7960:2;7949:9;7945:18;7937:26;;7973:85;8055:1;8044:9;8040:17;8031:6;7973:85;:::i;:::-;7815:250;;;;:::o;8071:180::-;8119:77;8116:1;8109:88;8216:4;8213:1;8206:15;8240:4;8237:1;8230:15;8257:410;8297:7;8320:20;8338:1;8320:20;:::i;:::-;8315:25;;8354:20;8372:1;8354:20;:::i;:::-;8349:25;;8409:1;8406;8402:9;8431:30;8449:11;8431:30;:::i;:::-;8420:41;;8610:1;8601:7;8597:15;8594:1;8591:22;8571:1;8564:9;8544:83;8521:139;;8640:18;;:::i;:::-;8521:139;8305:362;8257:410;;;;:::o;8673:180::-;8721:77;8718:1;8711:88;8818:4;8815:1;8808:15;8842:4;8839:1;8832:15;8859:185;8899:1;8916:20;8934:1;8916:20;:::i;:::-;8911:25;;8950:20;8968:1;8950:20;:::i;:::-;8945:25;;8989:1;8979:35;;8994:18;;:::i;:::-;8979:35;9036:1;9033;9029:9;9024:14;;8859:185;;;;:::o;9050:169::-;9134:11;9168:6;9163:3;9156:19;9208:4;9203:3;9199:14;9184:29;;9050:169;;;;:::o;9225:::-;9365:21;9361:1;9353:6;9349:14;9342:45;9225:169;:::o;9400:366::-;9542:3;9563:67;9627:2;9622:3;9563:67;:::i;:::-;9556:74;;9639:93;9728:3;9639:93;:::i;:::-;9757:2;9752:3;9748:12;9741:19;;9400:366;;;:::o;9772:419::-;9938:4;9976:2;9965:9;9961:18;9953:26;;10025:9;10019:4;10015:20;10011:1;10000:9;9996:17;9989:47;10053:131;10179:4;10053:131;:::i;:::-;10045:139;;9772:419;;;:::o;10197:118::-;10284:24;10302:5;10284:24;:::i;:::-;10279:3;10272:37;10197:118;;:::o;10321:442::-;10470:4;10508:2;10497:9;10493:18;10485:26;;10521:71;10589:1;10578:9;10574:17;10565:6;10521:71;:::i;:::-;10602:72;10670:2;10659:9;10655:18;10646:6;10602:72;:::i;:::-;10684;10752:2;10741:9;10737:18;10728:6;10684:72;:::i;:::-;10321:442;;;;;;:::o;10769:116::-;10839:21;10854:5;10839:21;:::i;:::-;10832:5;10829:32;10819:60;;10875:1;10872;10865:12;10819:60;10769:116;:::o;10891:137::-;10945:5;10976:6;10970:13;10961:22;;10992:30;11016:5;10992:30;:::i;:::-;10891:137;;;;:::o;11034:345::-;11101:6;11150:2;11138:9;11129:7;11125:23;11121:32;11118:119;;;11156:79;;:::i;:::-;11118:119;11276:1;11301:61;11354:7;11345:6;11334:9;11330:22;11301:61;:::i;:::-;11291:71;;11247:125;11034:345;;;;:::o;11385:191::-;11425:3;11444:20;11462:1;11444:20;:::i;:::-;11439:25;;11478:20;11496:1;11478:20;:::i;:::-;11473:25;;11521:1;11518;11514:9;11507:16;;11542:3;11539:1;11536:10;11533:36;;;11549:18;;:::i;:::-;11533:36;11385:191;;;;:::o;11582:180::-;11630:77;11627:1;11620:88;11727:4;11724:1;11717:15;11751:4;11748:1;11741:15;11768:174;11908:26;11904:1;11896:6;11892:14;11885:50;11768:174;:::o;11948:366::-;12090:3;12111:67;12175:2;12170:3;12111:67;:::i;:::-;12104:74;;12187:93;12276:3;12187:93;:::i;:::-;12305:2;12300:3;12296:12;12289:19;;11948:366;;;:::o;12320:419::-;12486:4;12524:2;12513:9;12509:18;12501:26;;12573:9;12567:4;12563:20;12559:1;12548:9;12544:17;12537:47;12601:131;12727:4;12601:131;:::i;:::-;12593:139;;12320:419;;;:::o;12745:105::-;12781:7;12821:22;12814:5;12810:34;12799:45;;12745:105;;;:::o;12856:120::-;12928:23;12945:5;12928:23;:::i;:::-;12921:5;12918:34;12908:62;;12966:1;12963;12956:12;12908:62;12856:120;:::o;12982:141::-;13038:5;13069:6;13063:13;13054:22;;13085:32;13111:5;13085:32;:::i;:::-;12982:141;;;;:::o;13129:76::-;13165:7;13194:5;13183:16;;13129:76;;;:::o;13211:120::-;13283:23;13300:5;13283:23;:::i;:::-;13276:5;13273:34;13263:62;;13321:1;13318;13311:12;13263:62;13211:120;:::o;13337:141::-;13393:5;13424:6;13418:13;13409:22;;13440:32;13466:5;13440:32;:::i;:::-;13337:141;;;;:::o;13484:143::-;13541:5;13572:6;13566:13;13557:22;;13588:33;13615:5;13588:33;:::i;:::-;13484:143;;;;:::o;13633:971::-;13736:6;13744;13752;13760;13768;13817:3;13805:9;13796:7;13792:23;13788:33;13785:120;;;13824:79;;:::i;:::-;13785:120;13944:1;13969:63;14024:7;14015:6;14004:9;14000:22;13969:63;:::i;:::-;13959:73;;13915:127;14081:2;14107:63;14162:7;14153:6;14142:9;14138:22;14107:63;:::i;:::-;14097:73;;14052:128;14219:2;14245:64;14301:7;14292:6;14281:9;14277:22;14245:64;:::i;:::-;14235:74;;14190:129;14358:2;14384:64;14440:7;14431:6;14420:9;14416:22;14384:64;:::i;:::-;14374:74;;14329:129;14497:3;14524:63;14579:7;14570:6;14559:9;14555:22;14524:63;:::i;:::-;14514:73;;14468:129;13633:971;;;;;;;;:::o;14610:168::-;14750:20;14746:1;14738:6;14734:14;14727:44;14610:168;:::o;14784:366::-;14926:3;14947:67;15011:2;15006:3;14947:67;:::i;:::-;14940:74;;15023:93;15112:3;15023:93;:::i;:::-;15141:2;15136:3;15132:12;15125:19;;14784:366;;;:::o;15156:419::-;15322:4;15360:2;15349:9;15345:18;15337:26;;15409:9;15403:4;15399:20;15395:1;15384:9;15380:17;15373:47;15437:131;15563:4;15437:131;:::i;:::-;15429:139;;15156:419;;;:::o;15581:86::-;15616:7;15656:4;15649:5;15645:16;15634:27;;15581:86;;;:::o;15673:118::-;15744:22;15760:5;15744:22;:::i;:::-;15737:5;15734:33;15724:61;;15781:1;15778;15771:12;15724:61;15673:118;:::o;15797:139::-;15852:5;15883:6;15877:13;15868:22;;15899:31;15924:5;15899:31;:::i;:::-;15797:139;;;;:::o;15942:347::-;16010:6;16059:2;16047:9;16038:7;16034:23;16030:32;16027:119;;;16065:79;;:::i;:::-;16027:119;16185:1;16210:62;16264:7;16255:6;16244:9;16240:22;16210:62;:::i;:::-;16200:72;;16156:126;15942:347;;;;:::o;16295:102::-;16337:8;16384:5;16381:1;16377:13;16356:34;;16295:102;;;:::o;16403:848::-;16464:5;16471:4;16495:6;16486:15;;16519:5;16510:14;;16533:712;16554:1;16544:8;16541:15;16533:712;;;16649:4;16644:3;16640:14;16634:4;16631:24;16628:50;;;16658:18;;:::i;:::-;16628:50;16708:1;16698:8;16694:16;16691:451;;;17123:4;17116:5;17112:16;17103:25;;16691:451;17173:4;17167;17163:15;17155:23;;17203:32;17226:8;17203:32;:::i;:::-;17191:44;;16533:712;;;16403:848;;;;;;;:::o;17257:1073::-;17311:5;17502:8;17492:40;;17523:1;17514:10;;17525:5;;17492:40;17551:4;17541:36;;17568:1;17559:10;;17570:5;;17541:36;17637:4;17685:1;17680:27;;;;17721:1;17716:191;;;;17630:277;;17680:27;17698:1;17689:10;;17700:5;;;17716:191;17761:3;17751:8;17748:17;17745:43;;;17768:18;;:::i;:::-;17745:43;17817:8;17814:1;17810:16;17801:25;;17852:3;17845:5;17842:14;17839:40;;;17859:18;;:::i;:::-;17839:40;17892:5;;;17630:277;;18016:2;18006:8;18003:16;17997:3;17991:4;17988:13;17984:36;17966:2;17956:8;17953:16;17948:2;17942:4;17939:12;17935:35;17919:111;17916:246;;;18072:8;18066:4;18062:19;18053:28;;18107:3;18100:5;18097:14;18094:40;;;18114:18;;:::i;:::-;18094:40;18147:5;;17916:246;18187:42;18225:3;18215:8;18209:4;18206:1;18187:42;:::i;:::-;18172:57;;;;18261:4;18256:3;18252:14;18245:5;18242:25;18239:51;;;18270:18;;:::i;:::-;18239:51;18319:4;18312:5;18308:16;18299:25;;17257:1073;;;;;;:::o;18336:285::-;18396:5;18420:23;18438:4;18420:23;:::i;:::-;18412:31;;18464:27;18482:8;18464:27;:::i;:::-;18452:39;;18510:104;18547:66;18537:8;18531:4;18510:104;:::i;:::-;18501:113;;18336:285;;;;:::o;18627:194::-;18667:4;18687:20;18705:1;18687:20;:::i;:::-;18682:25;;18721:20;18739:1;18721:20;:::i;:::-;18716:25;;18765:1;18762;18758:9;18750:17;;18789:1;18783:4;18780:11;18777:37;;;18794:18;;:::i;:::-;18777:37;18627:194;;;;:::o;18827:170::-;18967:22;18963:1;18955:6;18951:14;18944:46;18827:170;:::o;19003:366::-;19145:3;19166:67;19230:2;19225:3;19166:67;:::i;:::-;19159:74;;19242:93;19331:3;19242:93;:::i;:::-;19360:2;19355:3;19351:12;19344:19;;19003:366;;;:::o;19375:419::-;19541:4;19579:2;19568:9;19564:18;19556:26;;19628:9;19622:4;19618:20;19614:1;19603:9;19599:17;19592:47;19656:131;19782:4;19656:131;:::i;:::-;19648:139;;19375:419;;;:::o;19800:332::-;19921:4;19959:2;19948:9;19944:18;19936:26;;19972:71;20040:1;20029:9;20025:17;20016:6;19972:71;:::i;:::-;20053:72;20121:2;20110:9;20106:18;20097:6;20053:72;:::i;:::-;19800:332;;;;;:::o;20138:::-;20259:4;20297:2;20286:9;20282:18;20274:26;;20310:71;20378:1;20367:9;20363:17;20354:6;20310:71;:::i;:::-;20391:72;20459:2;20448:9;20444:18;20435:6;20391:72;:::i;:::-;20138:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1706000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "458",
								"DEFAULT_ADMIN_ROLE()": "419",
								"VAULT_MANAGER_ROLE()": "436",
								"collectPerformanceFee()": "2969",
								"deposit(address,uint256)": "infinite",
								"estimateAssetValueUSD(address,uint256)": "infinite",
								"estimateVaultValue()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"lastRecordedProfit()": "2514",
								"performanceFeePercentage()": "2557",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setAssetToOracle(address,address)": "infinite",
								"supportedAssets(uint256)": "infinite",
								"supportsInterface(bytes4)": "741",
								"totalProfits()": "2447",
								"totalVaultBalance(address)": "2825",
								"trade(address,uint256,address,uint256)": "infinite",
								"userDeposits(address)": "2883",
								"userProfits(address)": "2846",
								"withdraw(address,uint256)": "infinite"
							},
							"internal": {
								"calculateProfits()": "14",
								"calculateUserProfitShare(address)": "infinite",
								"estimateAssetValue(address,uint256)": "infinite",
								"isAssetSupported(contract IERC20)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1181,
									"end": 1783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 668,
									"end": 699,
									"name": "PUSH",
									"source": 7,
									"value": "D1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B"
								},
								{
									"begin": 1368,
									"end": 1381,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1338,
									"end": 1347,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1338,
									"end": 1347,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1382,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1338,
									"end": 1382,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1382,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1338,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1422,
									"end": 1428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1401,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1392,
									"end": 1401,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1429,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1392,
									"end": 1429,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1429,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 668,
									"end": 699,
									"name": "PUSH",
									"source": 7,
									"value": "D1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B"
								},
								{
									"begin": 742,
									"end": 765,
									"name": "PUSH",
									"source": 7,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1439,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1439,
									"end": 1452,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1439,
									"end": 1452,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1484,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1439,
									"end": 1484,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1484,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1439,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1539,
									"end": 1548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1572,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1579,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1555,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1579,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1628,
									"end": 1642,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1644,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1628,
									"end": 1645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1645,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1584,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1709,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1709,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1709,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1709,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1719,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1719,
									"end": 1741,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1741,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1741,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1741,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2475,
									"end": 2479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 4341,
									"end": 4345,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4347,
									"end": 4354,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5822,
									"end": 5826,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5809,
									"end": 5827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5862,
									"end": 5871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5844,
									"end": 5848,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5909,
									"end": 5926,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 5907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 1,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 5771,
									"end": 5945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3276,
									"end": 3280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3528,
									"end": 3532,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3534,
									"end": 3541,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3607,
									"end": 3611,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 3565,
									"end": 3612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1015,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1054,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1064,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 968,
									"end": 1070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1202,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1225,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1218,
									"end": 1219,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1211,
									"end": 1226,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1249,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1250,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1367,
									"end": 1371,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1345,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1373,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1475,
									"end": 1481,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1473,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1482,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1437,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1458,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1421,
									"end": 1483,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1486,
									"end": 1504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1536,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1522,
									"end": 1524,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1515,
									"end": 1537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1305,
									"end": 1543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1583,
									"end": 1589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1610,
									"end": 1630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1639,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1765,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1851,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1843,
									"end": 1849,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 1870,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1873,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1921,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1911,
									"end": 1928,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1903,
									"end": 1928,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1903,
									"end": 1928,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1977,
									"end": 1981,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 1988,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2118,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2001,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 2108,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2100,
									"end": 2112,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3364,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3287,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3324,
									"end": 3331,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3353,
									"end": 3358,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3342,
									"end": 3358,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3342,
									"end": 3358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3364,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3364,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3492,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3370,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3467,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3461,
									"end": 3466,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3467,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3443,
									"end": 3467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3467,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3443,
									"end": 3467,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3441,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3433,
									"end": 3468,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3423,
									"end": 3486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3423,
									"end": 3486,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3479,
									"end": 3480,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3484,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3423,
									"end": 3486,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3423,
									"end": 3486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3555,
									"end": 3560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3586,
									"end": 3592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3580,
									"end": 3593,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3593,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3593,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3629,
									"end": 3634,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3602,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3775,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3777,
									"end": 3783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3793,
									"end": 3799,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3842,
									"end": 3845,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3830,
									"end": 3839,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3828,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3840,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 3846,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3849,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3849,
									"end": 3928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3928,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3849,
									"end": 3928,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3969,
									"end": 3970,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3994,
									"end": 4058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 4050,
									"end": 4057,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4047,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4030,
									"end": 4039,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4026,
									"end": 4048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3994,
									"end": 4058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3994,
									"end": 4058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3994,
									"end": 4058,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3994,
									"end": 4058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3984,
									"end": 4058,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3984,
									"end": 4058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3940,
									"end": 4068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4128,
									"end": 4130,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4117,
									"end": 4126,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4107,
									"end": 4132,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4177,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4151,
									"end": 4157,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4148,
									"end": 4178,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4262,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4145,
									"end": 4262,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4181,
									"end": 4260,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4181,
									"end": 4260,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4181,
									"end": 4260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4181,
									"end": 4260,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4181,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4262,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4145,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4286,
									"end": 4375,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4367,
									"end": 4374,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4358,
									"end": 4364,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4347,
									"end": 4356,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4343,
									"end": 4365,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4286,
									"end": 4375,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4286,
									"end": 4375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4286,
									"end": 4375,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4286,
									"end": 4375,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4276,
									"end": 4375,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4276,
									"end": 4375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4078,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4424,
									"end": 4426,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4450,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4506,
									"end": 4513,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4497,
									"end": 4503,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4486,
									"end": 4495,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4482,
									"end": 4504,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4450,
									"end": 4514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4514,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4450,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4514,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4395,
									"end": 4524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4563,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4589,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4645,
									"end": 4652,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4636,
									"end": 4642,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 4634,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4621,
									"end": 4643,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4589,
									"end": 4653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4653,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4589,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4579,
									"end": 4653,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4579,
									"end": 4653,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 4670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4676,
									"end": 4856,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 4676,
									"end": 4856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4724,
									"end": 4801,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4721,
									"end": 4722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4714,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4825,
									"name": "PUSH",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4818,
									"end": 4819,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4811,
									"end": 4826,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4849,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4842,
									"end": 4843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4835,
									"end": 4850,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4980,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 4862,
									"end": 4980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4949,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4949,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4949,
									"end": 4973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4949,
									"end": 4973,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4949,
									"end": 4973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4986,
									"end": 5063,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 4986,
									"end": 5063,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5030,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5052,
									"end": 5057,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5057,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5057,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4986,
									"end": 5063,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4986,
									"end": 5063,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4986,
									"end": 5063,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4986,
									"end": 5063,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5187,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5069,
									"end": 5187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5156,
									"end": 5180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 5174,
									"end": 5179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5156,
									"end": 5180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5156,
									"end": 5180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5156,
									"end": 5180,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 5156,
									"end": 5180,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5151,
									"end": 5154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5181,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5314,
									"end": 5318,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5352,
									"end": 5354,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5341,
									"end": 5350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5329,
									"end": 5355,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5329,
									"end": 5355,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5365,
									"end": 5436,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5433,
									"end": 5434,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5422,
									"end": 5431,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5418,
									"end": 5435,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5409,
									"end": 5415,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5365,
									"end": 5436,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5365,
									"end": 5436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5365,
									"end": 5436,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5365,
									"end": 5436,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5446,
									"end": 5518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5514,
									"end": 5516,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5512,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5499,
									"end": 5517,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5446,
									"end": 5518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5446,
									"end": 5518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5446,
									"end": 5518,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5446,
									"end": 5518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5193,
									"end": 5525,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 6427,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203122113be70ffbcfa896301971a9ee8c4aea628265c5674c75ed26967e7e4c9864736f6c63430008170033",
									".code": [
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "90805C34"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "BD998CB3"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "BD998CB3"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "BE354836"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "C68DBB37"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "F3FEF3A3"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "F4457FAB"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "90805C34"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "9E4A9369"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "A356EFC4"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "BB39A960"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "30E5065E"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "30E5065E"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "47E7EF24"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "523820A1"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "5E5A24A4"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "75B238FC"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "6F34C2F"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "BA36DCD"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 323,
											"end": 6427,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5990,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 953,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 953,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 808,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 808,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 808,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2349,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2349,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1108,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1108,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 615,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 705,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 705,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1789,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1789,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1975,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1975,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5132,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5132,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5132,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3971,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3971,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1010,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1010,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 771,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 771,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 771,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2805,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2805,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1063,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1063,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 668,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "D1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6089,
											"end": 6105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6089,
											"end": 6107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6089,
											"end": 6107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6131,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6121,
											"end": 6132,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6419,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6117,
											"end": 6419,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6184,
											"end": 6208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6184,
											"end": 6208,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6174,
											"end": 6208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6174,
											"end": 6208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6173,
											"end": 6215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6173,
											"end": 6215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 6353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6318,
											"end": 6353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6117,
											"end": 6419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2426,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2458,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2426,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2418,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2418,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2519,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2520,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2520,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2520,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2532,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2520,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2546,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2492,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2492,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2584,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2567,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2654,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2723,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2654,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2626,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2639,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2613,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2746,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2733,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2733,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 668,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "D1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B"
										},
										{
											"begin": 615,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 705,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2116,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2123,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2202,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2202,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2256,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2265,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2158,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2158,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2144,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5405,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5405,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5405,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5405,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5338,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5338,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5490,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5490,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "SGT",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5527,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5527,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5604,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5596,
											"end": 5625,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5688,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5676,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5654,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5647,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5647,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5646,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5646,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 668,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "D1473398BB66596DE5D1EA1FC8E303FF2AC23265ADC9144B1B52065DC4F0934B"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4280,
											"end": 4287,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4298,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4253,
											"end": 4271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4253,
											"end": 4299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4253,
											"end": 4299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4253,
											"end": 4299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4411,
											"end": 4418,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4429,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4384,
											"end": 4430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4384,
											"end": 4430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4485,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4457,
											"end": 4485,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4457,
											"end": 4485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4485,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4495,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4495,
											"end": 4517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 771,
											"end": 802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 771,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2909,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2921,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2909,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2922,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2936,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2896,
											"end": 2936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2944,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2955,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2955,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2875,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2875,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3024,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3024,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3036,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3024,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3037,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3011,
											"end": 3051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3011,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3080,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3150,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3150,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3126,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3126,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3294,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3294,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3294,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3294,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3269,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3328,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3329,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3329,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3317,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3460,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3529,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3460,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3432,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3444,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3432,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3445,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3419,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3552,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3552,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3539,
											"end": 3579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3539,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 3605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5702,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5702,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4696,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4681,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4677,
											"end": 4755,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4755,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4677,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4977,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 4985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5020,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5020,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5073,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3965,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3611,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3804,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3824,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3804,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3751,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3750,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3750,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3898,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3897,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3897,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3947,
											"end": 3958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3965,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2976,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3106,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3245,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3265,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3591,
											"end": 3596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3573,
											"end": 3597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3598,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3754,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3969,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4114,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4242,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4409,
											"end": 4414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4391,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4416,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4546,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4714,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4687,
											"end": 4719,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4867,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5016,
											"end": 5038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4995,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5182,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5199,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5202,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5347,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5451,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5475,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5661,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5551,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5631,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5631,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5631,
											"end": 5655,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5631,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5661,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5817,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 5667,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5754,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5754,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5754,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5754,
											"end": 5792,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5754,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5747,
											"end": 5752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5744,
											"end": 5793,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5734,
											"end": 5811,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5811,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5734,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5883,
											"end": 5888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5928,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5937,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5937,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 5937,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5937,
											"end": 5984,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 5937,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6186,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6171,
											"end": 6180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6169,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6181,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6187,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6151,
											"end": 6271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6190,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6190,
											"end": 6269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6269,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6190,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6271,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6151,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6310,
											"end": 6311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 6335,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6402,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6335,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6402,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6477,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6422,
											"end": 6540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 6664,
											"end": 6671,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 6605,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6672,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 6605,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6672,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6721,
											"end": 6723,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6747,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6792,
											"end": 6799,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6783,
											"end": 6789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6747,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6747,
											"end": 6800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6747,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6747,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6737,
											"end": 6800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6737,
											"end": 6800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6910,
											"end": 6917,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 6934,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6937,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 6937,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6899,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7127,
											"end": 7134,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 7082,
											"end": 7135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7082,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7135,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7218,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 7158,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7186,
											"end": 7189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7366,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7224,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7334,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7352,
											"end": 7357,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7334,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7358,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7334,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 7325,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7307,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7307,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7307,
											"end": 7360,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7307,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7294,
											"end": 7360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7294,
											"end": 7360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7498,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7372,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7486,
											"end": 7491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7455,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7492,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7455,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7442,
											"end": 7492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7442,
											"end": 7492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7372,
											"end": 7498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7644,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7504,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7632,
											"end": 7637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7601,
											"end": 7638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7638,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7601,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7809,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7650,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 7796,
											"end": 7801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7751,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7802,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 7751,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8037,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7973,
											"end": 8058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 8058,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7973,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8251,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 8071,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8196,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8240,
											"end": 8244,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8245,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8338,
											"end": 8339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8320,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8354,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8374,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8402,
											"end": 8411,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8449,
											"end": 8460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8431,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8461,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8431,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8420,
											"end": 8461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8420,
											"end": 8461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8612,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8594,
											"end": 8595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8627,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 8640,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8853,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8673,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8798,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8847,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8916,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8936,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8916,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8911,
											"end": 8936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8911,
											"end": 8936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8968,
											"end": 8969,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8950,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 8970,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 8970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 8990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8979,
											"end": 9014,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8994,
											"end": 9012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 9014,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8979,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9134,
											"end": 9145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9394,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9225,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9386,
											"name": "PUSH",
											"source": 8,
											"value": "4173736574206E6F7420737570706F7274656400000000000000000000000000"
										},
										{
											"begin": 9361,
											"end": 9362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9349,
											"end": 9363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9342,
											"end": 9387,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9766,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9400,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9563,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9563,
											"end": 9630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9563,
											"end": 9630,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9563,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9556,
											"end": 9630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9556,
											"end": 9630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9639,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 9728,
											"end": 9731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9639,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9639,
											"end": 9732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9639,
											"end": 9732,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 9639,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9752,
											"end": 9755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9741,
											"end": 9760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9741,
											"end": 9760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 10191,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 9772,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9938,
											"end": 9942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9978,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10019,
											"end": 10023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10009,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10179,
											"end": 10183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10053,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10184,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10053,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 10191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 10191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 10191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10315,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10197,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10302,
											"end": 10307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 10284,
											"end": 10308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10470,
											"end": 10474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10497,
											"end": 10506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10485,
											"end": 10511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10485,
											"end": 10511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10587,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10574,
											"end": 10591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10571,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10521,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10592,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10521,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10670,
											"end": 10672,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10655,
											"end": 10673,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10646,
											"end": 10652,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10602,
											"end": 10674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10674,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10602,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10684,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10752,
											"end": 10754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10741,
											"end": 10750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10684,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10684,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10684,
											"end": 10756,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10684,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10885,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10769,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 10839,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10829,
											"end": 10861,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 10819,
											"end": 10879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10865,
											"end": 10877,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10879,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 10819,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10945,
											"end": 10950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10976,
											"end": 10982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10970,
											"end": 10983,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 10983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 10983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 11016,
											"end": 11021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10992,
											"end": 11022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11022,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 10992,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11101,
											"end": 11107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11138,
											"end": 11147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11129,
											"end": 11136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11121,
											"end": 11153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11118,
											"end": 11237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11118,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 11118,
											"end": 11237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 11156,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11156,
											"end": 11235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11235,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 11156,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11118,
											"end": 11237,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 11118,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11276,
											"end": 11277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11301,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11354,
											"end": 11361,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11345,
											"end": 11351,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11334,
											"end": 11343,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11330,
											"end": 11352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 11301,
											"end": 11362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11362,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11301,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11444,
											"end": 11464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11478,
											"end": 11498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11514,
											"end": 11523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11507,
											"end": 11523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11507,
											"end": 11523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11536,
											"end": 11546,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11569,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 11533,
											"end": 11569,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 11549,
											"end": 11567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11569,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 11533,
											"end": 11569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 11762,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 11582,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11707,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11627,
											"end": 11628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11620,
											"end": 11708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 11724,
											"end": 11725,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11717,
											"end": 11732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11751,
											"end": 11755,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11768,
											"end": 11942,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11768,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11934,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C65206E6F742073657420666F722061737365740000000000000000"
										},
										{
											"begin": 11904,
											"end": 11905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11896,
											"end": 11902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11892,
											"end": 11906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11768,
											"end": 11942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11768,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12090,
											"end": 12093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 12170,
											"end": 12173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 12111,
											"end": 12178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12104,
											"end": 12178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12104,
											"end": 12178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12276,
											"end": 12279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 12187,
											"end": 12280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12307,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12300,
											"end": 12303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12486,
											"end": 12490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12567,
											"end": 12571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12559,
											"end": 12560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12548,
											"end": 12557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12537,
											"end": 12584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 12727,
											"end": 12731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 12601,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12593,
											"end": 12732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12850,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 12745,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12781,
											"end": 12788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12843,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12814,
											"end": 12819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12844,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12799,
											"end": 12844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12799,
											"end": 12844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12976,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 12856,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 12945,
											"end": 12950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 12928,
											"end": 12951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12951,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 12928,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12921,
											"end": 12926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12918,
											"end": 12952,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 12908,
											"end": 12970,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12966,
											"end": 12967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 12968,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12970,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 12908,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13038,
											"end": 13043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13063,
											"end": 13076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13054,
											"end": 13076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13054,
											"end": 13076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 13111,
											"end": 13116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13085,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13117,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 13085,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 13123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13129,
											"end": 13205,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 13129,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13165,
											"end": 13172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13129,
											"end": 13205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13129,
											"end": 13205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13129,
											"end": 13205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13129,
											"end": 13205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13211,
											"end": 13331,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 13211,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 13300,
											"end": 13305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 13283,
											"end": 13306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13276,
											"end": 13281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13273,
											"end": 13307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13263,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 13263,
											"end": 13325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13321,
											"end": 13322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13318,
											"end": 13319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13311,
											"end": 13323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13263,
											"end": 13325,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 13263,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13211,
											"end": 13331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13211,
											"end": 13331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13393,
											"end": 13398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13418,
											"end": 13431,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13409,
											"end": 13431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13409,
											"end": 13431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13440,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 13466,
											"end": 13471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13440,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 13440,
											"end": 13472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13440,
											"end": 13472,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 13440,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13337,
											"end": 13478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13579,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 13615,
											"end": 13620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 13588,
											"end": 13621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13621,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 13588,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13750,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13820,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13803,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13788,
											"end": 13821,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13905,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 13785,
											"end": 13905,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13824,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 13824,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13824,
											"end": 13903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13824,
											"end": 13903,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 13824,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13905,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 13785,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13944,
											"end": 13945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13969,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 14024,
											"end": 14031,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14015,
											"end": 14021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14004,
											"end": 14013,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13969,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 13969,
											"end": 14032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13969,
											"end": 14032,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 13969,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13959,
											"end": 14032,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13959,
											"end": 14032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13915,
											"end": 14042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14081,
											"end": 14083,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 14162,
											"end": 14169,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14153,
											"end": 14159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14142,
											"end": 14151,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14138,
											"end": 14160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 14107,
											"end": 14170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14170,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 14107,
											"end": 14170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14097,
											"end": 14170,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14097,
											"end": 14170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14245,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 14301,
											"end": 14308,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14292,
											"end": 14298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14277,
											"end": 14299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14245,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 14245,
											"end": 14309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14245,
											"end": 14309,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 14245,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14235,
											"end": 14309,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14235,
											"end": 14309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14190,
											"end": 14319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14358,
											"end": 14360,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14384,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 14440,
											"end": 14447,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14431,
											"end": 14437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14420,
											"end": 14429,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14416,
											"end": 14438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14384,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 14384,
											"end": 14448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14384,
											"end": 14448,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 14384,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14374,
											"end": 14448,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14374,
											"end": 14448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14329,
											"end": 14458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14497,
											"end": 14500,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 14524,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 14579,
											"end": 14586,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14570,
											"end": 14576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14559,
											"end": 14568,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14555,
											"end": 14577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 14524,
											"end": 14587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14587,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 14524,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14514,
											"end": 14587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14514,
											"end": 14587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14468,
											"end": 14597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 14604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14610,
											"end": 14778,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 14610,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14750,
											"end": 14770,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420707269636520646174610000000000000000000000000000"
										},
										{
											"begin": 14746,
											"end": 14747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14727,
											"end": 14771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14610,
											"end": 14778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14610,
											"end": 14778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 15150,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 14784,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14926,
											"end": 14929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 15011,
											"end": 15013,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 15006,
											"end": 15009,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 14947,
											"end": 15014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 15014,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 14947,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 15014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 15014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 15112,
											"end": 15115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 15023,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15116,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 15023,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15141,
											"end": 15143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15136,
											"end": 15139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15132,
											"end": 15144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 15150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 15150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 15150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 15150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15575,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 15156,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15360,
											"end": 15362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15345,
											"end": 15363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15337,
											"end": 15363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15337,
											"end": 15363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15409,
											"end": 15418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15403,
											"end": 15407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15399,
											"end": 15419,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15395,
											"end": 15396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15384,
											"end": 15393,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15380,
											"end": 15397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15420,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15437,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15437,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 15437,
											"end": 15568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15437,
											"end": 15568,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 15437,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15429,
											"end": 15568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15429,
											"end": 15568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15667,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 15581,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 15649,
											"end": 15654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15645,
											"end": 15661,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15634,
											"end": 15661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15634,
											"end": 15661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15581,
											"end": 15667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15791,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 15673,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 15760,
											"end": 15765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 15744,
											"end": 15766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 15766,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 15744,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 15767,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15724,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 15724,
											"end": 15785,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15781,
											"end": 15782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15778,
											"end": 15779,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15771,
											"end": 15783,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15724,
											"end": 15785,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 15724,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15852,
											"end": 15857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15883,
											"end": 15889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15877,
											"end": 15890,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15868,
											"end": 15890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15868,
											"end": 15890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15899,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 15924,
											"end": 15929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15899,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 15899,
											"end": 15930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15899,
											"end": 15930,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 15899,
											"end": 15930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16010,
											"end": 16016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16059,
											"end": 16061,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16047,
											"end": 16056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16038,
											"end": 16045,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16034,
											"end": 16057,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16062,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16027,
											"end": 16146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16027,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 16027,
											"end": 16146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16065,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 16065,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 16065,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16065,
											"end": 16144,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 16065,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16027,
											"end": 16146,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 16027,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16210,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 16264,
											"end": 16271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16244,
											"end": 16253,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16240,
											"end": 16262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 16210,
											"end": 16272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16272,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 16210,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16200,
											"end": 16272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16200,
											"end": 16272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15942,
											"end": 16289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16397,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 16295,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16337,
											"end": 16345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16384,
											"end": 16389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16377,
											"end": 16390,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16356,
											"end": 16390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16356,
											"end": 16390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16464,
											"end": 16469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16495,
											"end": 16501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16519,
											"end": 16524,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16510,
											"end": 16524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16510,
											"end": 16524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16555,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16544,
											"end": 16552,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16541,
											"end": 16556,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16649,
											"end": 16653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16644,
											"end": 16647,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16640,
											"end": 16654,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16634,
											"end": 16638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16631,
											"end": 16655,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16628,
											"end": 16678,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16628,
											"end": 16678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 16628,
											"end": 16678,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 16658,
											"end": 16676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16628,
											"end": 16678,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 16628,
											"end": 16678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16708,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16698,
											"end": 16706,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16694,
											"end": 16710,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16691,
											"end": 17142,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16691,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 16691,
											"end": 17142,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17112,
											"end": 17128,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17103,
											"end": 17128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17103,
											"end": 17128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16691,
											"end": 17142,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 16691,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17173,
											"end": 17177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17167,
											"end": 17171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17163,
											"end": 17178,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17155,
											"end": 17178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17155,
											"end": 17178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17203,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 17226,
											"end": 17234,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17203,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 17203,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17203,
											"end": 17235,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 17203,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17191,
											"end": 17235,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17191,
											"end": 17235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 16533,
											"end": 17245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 17251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 17492,
											"end": 17532,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17523,
											"end": 17524,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17514,
											"end": 17524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17514,
											"end": 17524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 17525,
											"end": 17530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17532,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 17492,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17551,
											"end": 17555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 17541,
											"end": 17577,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17568,
											"end": 17569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17559,
											"end": 17569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17559,
											"end": 17569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17570,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 17570,
											"end": 17575,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17577,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 17541,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17637,
											"end": 17641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17685,
											"end": 17686,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17722,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17630,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 17630,
											"end": 17907,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 17680,
											"end": 17707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17698,
											"end": 17699,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17689,
											"end": 17699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17689,
											"end": 17699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17700,
											"end": 17705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17700,
											"end": 17705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 17700,
											"end": 17705,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 17716,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17764,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 17751,
											"end": 17759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17748,
											"end": 17765,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17745,
											"end": 17788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17745,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 17745,
											"end": 17788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17768,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 17768,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 17768,
											"end": 17786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17768,
											"end": 17786,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 17768,
											"end": 17786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17745,
											"end": 17788,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 17745,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17817,
											"end": 17825,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17814,
											"end": 17815,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17810,
											"end": 17826,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 17801,
											"end": 17826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17801,
											"end": 17826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17855,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17845,
											"end": 17850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17842,
											"end": 17856,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17839,
											"end": 17879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17839,
											"end": 17879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 17839,
											"end": 17879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17859,
											"end": 17877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 17859,
											"end": 17877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 17859,
											"end": 17877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17859,
											"end": 17877,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 17859,
											"end": 17877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17839,
											"end": 17879,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 17839,
											"end": 17879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17892,
											"end": 17897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17892,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 17892,
											"end": 17897,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17630,
											"end": 17907,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 17630,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17630,
											"end": 17907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18016,
											"end": 18018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18006,
											"end": 18014,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18019,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17997,
											"end": 18000,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 17991,
											"end": 17995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17988,
											"end": 18001,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17984,
											"end": 18020,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17966,
											"end": 17968,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 17956,
											"end": 17964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17953,
											"end": 17969,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 17950,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 17942,
											"end": 17946,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17939,
											"end": 17951,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17935,
											"end": 17970,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17919,
											"end": 18030,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17916,
											"end": 18162,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17916,
											"end": 18162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 17916,
											"end": 18162,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18072,
											"end": 18080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18066,
											"end": 18070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18062,
											"end": 18081,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 18053,
											"end": 18081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18053,
											"end": 18081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18107,
											"end": 18110,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18100,
											"end": 18105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18097,
											"end": 18111,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18094,
											"end": 18134,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18094,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 18094,
											"end": 18134,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18114,
											"end": 18132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 18114,
											"end": 18132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 18114,
											"end": 18132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18114,
											"end": 18132,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 18114,
											"end": 18132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18094,
											"end": 18134,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 18094,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18147,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 18147,
											"end": 18152,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17916,
											"end": 18162,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 17916,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 18225,
											"end": 18228,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18215,
											"end": 18223,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18206,
											"end": 18207,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18187,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 18187,
											"end": 18229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18229,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 18187,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18172,
											"end": 18229,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18172,
											"end": 18229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18172,
											"end": 18229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18172,
											"end": 18229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18261,
											"end": 18265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18256,
											"end": 18259,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18252,
											"end": 18266,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18245,
											"end": 18250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18242,
											"end": 18267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18290,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 18239,
											"end": 18290,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 18270,
											"end": 18288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18290,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 18239,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18319,
											"end": 18323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18312,
											"end": 18317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18324,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18299,
											"end": 18324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18299,
											"end": 18324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 18330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18396,
											"end": 18401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18420,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 18438,
											"end": 18442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18420,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18420,
											"end": 18443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18420,
											"end": 18443,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 18420,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18412,
											"end": 18443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18412,
											"end": 18443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18464,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18482,
											"end": 18490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18464,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18464,
											"end": 18491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18464,
											"end": 18491,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18464,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18452,
											"end": 18491,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18452,
											"end": 18491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18510,
											"end": 18614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18547,
											"end": 18613,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18537,
											"end": 18545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18531,
											"end": 18535,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18510,
											"end": 18614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 18510,
											"end": 18614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18510,
											"end": 18614,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18510,
											"end": 18614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18501,
											"end": 18614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18501,
											"end": 18614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18336,
											"end": 18621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18667,
											"end": 18671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18687,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 18705,
											"end": 18706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18687,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18687,
											"end": 18707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18687,
											"end": 18707,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 18687,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18682,
											"end": 18707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18682,
											"end": 18707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18721,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 18739,
											"end": 18740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18721,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18721,
											"end": 18741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18721,
											"end": 18741,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 18721,
											"end": 18741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18716,
											"end": 18741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18716,
											"end": 18741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18762,
											"end": 18763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18758,
											"end": 18767,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18750,
											"end": 18767,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18750,
											"end": 18767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18783,
											"end": 18787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18791,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 18777,
											"end": 18814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 18794,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 18794,
											"end": 18812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18812,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 18794,
											"end": 18812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18814,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 18777,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18827,
											"end": 18997,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 18827,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18967,
											"end": 18989,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 18963,
											"end": 18964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 18965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18944,
											"end": 18990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18827,
											"end": 18997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18827,
											"end": 18997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19003,
											"end": 19369,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 19003,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19145,
											"end": 19148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19166,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 19230,
											"end": 19232,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 19225,
											"end": 19228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19166,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 19166,
											"end": 19233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19166,
											"end": 19233,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 19166,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19159,
											"end": 19233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19159,
											"end": 19233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 19331,
											"end": 19334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 19242,
											"end": 19335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19335,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 19242,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19355,
											"end": 19358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19351,
											"end": 19363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19003,
											"end": 19369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19003,
											"end": 19369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19003,
											"end": 19369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19003,
											"end": 19369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19794,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 19375,
											"end": 19794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19541,
											"end": 19545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19579,
											"end": 19581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19568,
											"end": 19577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19556,
											"end": 19582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19556,
											"end": 19582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19628,
											"end": 19637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19622,
											"end": 19626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19618,
											"end": 19638,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19614,
											"end": 19615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19603,
											"end": 19612,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19592,
											"end": 19639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19656,
											"end": 19787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 19782,
											"end": 19786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19656,
											"end": 19787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 19656,
											"end": 19787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19656,
											"end": 19787,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 19656,
											"end": 19787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19648,
											"end": 19787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19648,
											"end": 19787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19921,
											"end": 19925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19959,
											"end": 19961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19948,
											"end": 19957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19944,
											"end": 19962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19936,
											"end": 19962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19936,
											"end": 19962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19972,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 20040,
											"end": 20041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20029,
											"end": 20038,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20025,
											"end": 20042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20016,
											"end": 20022,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19972,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 19972,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19972,
											"end": 20043,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 19972,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 20121,
											"end": 20123,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20110,
											"end": 20119,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20106,
											"end": 20124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20097,
											"end": 20103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 20053,
											"end": 20125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19800,
											"end": 20132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20259,
											"end": 20263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20297,
											"end": 20299,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20286,
											"end": 20295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20282,
											"end": 20300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20274,
											"end": 20300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20274,
											"end": 20300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 20378,
											"end": 20379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20367,
											"end": 20376,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20363,
											"end": 20380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20354,
											"end": 20360,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 20310,
											"end": 20381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20391,
											"end": 20463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 20459,
											"end": 20461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20448,
											"end": 20457,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20444,
											"end": 20462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20435,
											"end": 20441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20391,
											"end": 20463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 20391,
											"end": 20463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20391,
											"end": 20463,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 20391,
											"end": 20463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/vault/AssetVault/AssetVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"VAULT_MANAGER_ROLE()": "5e5a24a4",
							"collectPerformanceFee()": "06f34c2f",
							"deposit(address,uint256)": "47e7ef24",
							"estimateAssetValueUSD(address,uint256)": "a356efc4",
							"estimateVaultValue()": "9e4a9369",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lastRecordedProfit()": "523820a1",
							"performanceFeePercentage()": "f4457fab",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setAssetToOracle(address,address)": "90805c34",
							"supportedAssets(uint256)": "c68dbb37",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalProfits()": "bd998cb3",
							"totalVaultBalance(address)": "30e5065e",
							"trade(address,uint256,address,uint256)": "bb39a960",
							"userDeposits(address)": "0ba36dcd",
							"userProfits(address)": "be354836",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"estimateAssetValueUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valueUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateVaultValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRecordedProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setAssetToOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedAssets\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalVaultBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount2\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/AssetVault/AssetVault.sol\":\"AssetVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/vault/AssetVault/AssetVault.sol\":{\"keccak256\":\"0x6e34f5d92ad108c3a6963651911c51c4babe53e2c10863d6e1a23567f9abe8e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87911397836a9a25cfe41ce01bb0417c7f5ac61519c7b36cbbf659969f4266\",\"dweb:/ipfs/QmPpWQizTCYwVECvmms3vd6LjJme4eiwiWh5j1LQg4iry9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)67_storage)"
							},
							{
								"astId": 588,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "dataFeed",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 602,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "supportedAssets",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_contract(IERC20)502)dyn_storage"
							},
							{
								"astId": 606,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "totalVaultBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 611,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "assetToOracle",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)"
							},
							{
								"astId": 616,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "userDeposits",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(UserDeposit)585_storage)"
							},
							{
								"astId": 620,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "userProfits",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 622,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "performanceFeePercentage",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 624,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "lastRecordedProfit",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 626,
								"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
								"label": "totalProfits",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IERC20)502)dyn_storage": {
								"base": "t_contract(IERC20)502",
								"encoding": "dynamic_array",
								"label": "contract IERC20[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)502": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)45"
							},
							"t_mapping(t_address,t_struct(UserDeposit)585_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct AssetVault.UserDeposit)",
								"numberOfBytes": "32",
								"value": "t_struct(UserDeposit)585_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)67_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)67_storage"
							},
							"t_struct(RoleData)67_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 64,
										"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 66,
										"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserDeposit)585_storage": {
								"encoding": "inplace",
								"label": "struct AssetVault.UserDeposit",
								"members": [
									{
										"astId": 580,
										"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
										"label": "totalValue",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 584,
										"contract": "contracts/vault/AssetVault/AssetVault.sol:AssetVault",
										"label": "assetBalances",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							341
						],
						"Context": [
							532
						],
						"ERC165": [
							556
						],
						"IAccessControl": [
							424
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 425,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 424,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 533,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 532,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 557,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 556,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 532,
										"src": "1988:7:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 57,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "1997:14:1"
									},
									"id": 58,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 59,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 556,
										"src": "2013:6:1"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341,
								556,
								568,
								424,
								532
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 67,
									"members": [
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 63,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 65,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 341,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 341,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 71,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 68,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 70,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 69,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 67,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$67_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 75,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 341,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 73,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 80,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															160
														],
														"referencedDeclaration": 139,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 84,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 86,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 77,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										555
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 95,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 97,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$424_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$424_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 96,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$424",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 101,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$341_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 555,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 94,
												"id": 106,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 88,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 341,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 118,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 120,
															"indexExpression": {
																"id": 119,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$67_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 123,
													"indexExpression": {
														"id": 122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 117,
												"id": 124,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 341,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 134,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															160
														],
														"referencedDeclaration": 160,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 341,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 148,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 149,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 147,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 153,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 154,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 152,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 341,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										399
									],
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 168,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 170,
														"indexExpression": {
															"id": 169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$67_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 66,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 167,
												"id": 172,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 341,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										407
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 183,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 182,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 181,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 341,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										415
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 202,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 201,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 200,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 341,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										423
									],
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 220,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 221,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 227,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 224,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 226,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 231,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 229,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 341,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 243,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 245,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 249,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 251,
															"indexExpression": {
																"id": 250,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$67_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 66,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 253,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 257,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 258,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 256,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 341,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 274,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 275,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 273,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 272,
															"id": 298,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 278,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 280,
																			"indexExpression": {
																				"id": 279,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$67_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 283,
																	"indexExpression": {
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 288,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 289,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 290,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 287,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 272,
															"id": 295,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 341,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 313,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 314,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 312,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 311,
															"id": 336,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 316,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 318,
																			"indexExpression": {
																				"id": 317,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$67_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 321,
																	"indexExpression": {
																		"id": 320,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 326,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 327,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 328,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 325,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 331,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 311,
															"id": 333,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 341,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 342,
							"src": "1953:5096:1",
							"usedErrors": [
								351,
								354
							],
							"usedEvents": [
								363,
								372,
								381
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							424
						]
					},
					"id": 425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 351,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "373:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:2"
									},
									"src": "317:76:2"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 354,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:2"
									},
									"src": "552:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 363,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "877:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "899:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 358,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "934:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:2"
									},
									"src": "854:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 372,
									"name": "RoleGranted",
									"nameLocation": "1193:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1205:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1227:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1252:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:2"
									},
									"src": "1187:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 381,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1580:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1602:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1627:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:2"
									},
									"src": "1562:89:2"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1755:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 383,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1769:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1809:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:2"
									},
									"scope": 424,
									"src": "1738:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:2"
									},
									"scope": 424,
									"src": "2010:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2347:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2361:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:2"
									},
									"scope": 424,
									"src": "2328:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2641:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2655:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:2"
									},
									"scope": 424,
									"src": "2621:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3205:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3219:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:2"
									},
									"scope": 424,
									"src": "3183:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 425,
							"src": "225:3033:2",
							"usedErrors": [
								351,
								354
							],
							"usedEvents": [
								363,
								372,
								381
							]
						}
					],
					"src": "109:3150:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							502
						]
					},
					"id": 503,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 427,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 436,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 445,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 502,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 502,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 502,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 502,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 502,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 502,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								436,
								445
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							532
						]
					},
					"id": 533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 504,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 505,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 532,
							"linearizedBaseContracts": [
								532
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 510,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 509,
												"id": 512,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 532,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 519,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 518,
												"id": 521,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 532,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 527,
												"id": 529,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 532,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 533,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							556
						],
						"IERC165": [
							568
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 534,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 569,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 535,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 538,
										"name": "IERC165",
										"nameLocations": [
											"687:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "687:7:5"
									},
									"id": 539,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 556,
							"linearizedBaseContracts": [
								556,
								568
							],
							"name": "ERC165",
							"nameLocation": "677:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										567
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "844:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 547,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "861:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 549,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$568_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$568_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 548,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$568",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "854:47:5"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "789:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 541,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:5"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "838:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:5"
									},
									"scope": 556,
									"src": "762:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 557,
							"src": "659:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							568
						]
					},
					"id": 569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 559,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 561,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 568,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 569,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"contracts/vault/AssetVault/AssetVault.sol": {
				"ast": {
					"absolutePath": "contracts/vault/AssetVault/AssetVault.sol",
					"exportedSymbols": {
						"AccessControl": [
							341
						],
						"AggregatorV3Interface": [
							45
						],
						"AssetVault": [
							1135
						],
						"IERC20": [
							502
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 570,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 503,
							"src": "58:70:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 571,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 502,
										"src": "66:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 342,
							"src": "129:79:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 573,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 341,
										"src": "137:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 46,
							"src": "209:112:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 575,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "217:21:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 577,
										"name": "AccessControl",
										"nameLocations": [
											"346:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "346:13:7"
									},
									"id": 578,
									"nodeType": "InheritanceSpecifier",
									"src": "346:13:7"
								}
							],
							"canonicalName": "AssetVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								341,
								556,
								568,
								424,
								532
							],
							"name": "AssetVault",
							"nameLocation": "332:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AssetVault.UserDeposit",
									"id": 585,
									"members": [
										{
											"constant": false,
											"id": 580,
											"mutability": "mutable",
											"name": "totalValue",
											"nameLocation": "403:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "395:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "395:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 584,
											"mutability": "mutable",
											"name": "assetBalances",
											"nameLocation": "497:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "469:41:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 583,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "469:27:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserDeposit",
									"nameLocation": "373:11:7",
									"nodeType": "StructDefinition",
									"scope": 1135,
									"src": "366:198:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 588,
									"mutability": "mutable",
									"name": "dataFeed",
									"nameLocation": "601:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "570:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 587,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 586,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"570:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "570:21:7"
										},
										"referencedDeclaration": 45,
										"src": "570:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "5e5a24a4",
									"id": 593,
									"mutability": "constant",
									"name": "VAULT_MANAGER_ROLE",
									"nameLocation": "639:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "615:84:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 589,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "615:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5641554c545f4d414e414745525f524f4c45",
												"id": 591,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "678:20:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b",
													"typeString": "literal_string \"VAULT_MANAGER_ROLE\""
												},
												"value": "VAULT_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b",
													"typeString": "literal_string \"VAULT_MANAGER_ROLE\""
												}
											],
											"id": 590,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "668:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "668:31:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 598,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "729:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "705:60:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 594,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 596,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "752:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 595,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "742:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "742:23:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c68dbb37",
									"id": 602,
									"mutability": "mutable",
									"name": "supportedAssets",
									"nameLocation": "787:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "771:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
										"typeString": "contract IERC20[]"
									},
									"typeName": {
										"baseType": {
											"id": 600,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 599,
												"name": "IERC20",
												"nameLocations": [
													"771:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "771:6:7"
											},
											"referencedDeclaration": 502,
											"src": "771:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$502",
												"typeString": "contract IERC20"
											}
										},
										"id": 601,
										"nodeType": "ArrayTypeName",
										"src": "771:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage_ptr",
											"typeString": "contract IERC20[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30e5065e",
									"id": 606,
									"mutability": "mutable",
									"name": "totalVaultBalance",
									"nameLocation": "843:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "808:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 605,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 603,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "808:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 604,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "assetToOracle",
									"nameLocation": "908:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "866:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 610,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 607,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "866:41:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 609,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 608,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"885:21:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "885:21:7"
											},
											"referencedDeclaration": 45,
											"src": "885:21:7",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0ba36dcd",
									"id": 616,
									"mutability": "mutable",
									"name": "userDeposits",
									"nameLocation": "992:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "953:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
										"typeString": "mapping(address => struct AssetVault.UserDeposit)"
									},
									"typeName": {
										"id": 615,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "953:31:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
											"typeString": "mapping(address => struct AssetVault.UserDeposit)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 614,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 613,
												"name": "UserDeposit",
												"nameLocations": [
													"972:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "972:11:7"
											},
											"referencedDeclaration": 585,
											"src": "972:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserDeposit_$585_storage_ptr",
												"typeString": "struct AssetVault.UserDeposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be354836",
									"id": 620,
									"mutability": "mutable",
									"name": "userProfits",
									"nameLocation": "1045:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "1010:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 619,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 617,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1010:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 618,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f4457fab",
									"id": 622,
									"mutability": "mutable",
									"name": "performanceFeePercentage",
									"nameLocation": "1078:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "1063:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1063:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "523820a1",
									"id": 624,
									"mutability": "mutable",
									"name": "lastRecordedProfit",
									"nameLocation": "1123:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "1108:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 623,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd998cb3",
									"id": 626,
									"mutability": "mutable",
									"name": "totalProfits",
									"nameLocation": "1162:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "1147:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 625,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1147:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1328:455:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "VAULT_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1348:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 640,
															"name": "_vaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1368:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 638,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1338:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "1338:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1402:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 645,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "1422:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 643,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1392:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "1392:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "VAULT_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1453:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 650,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1473:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 648,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1439:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "1439:45:7"
											},
											{
												"body": {
													"id": 674,
													"nodeType": "Block",
													"src": "1586:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 668,
																					"name": "_initialAssets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "1628:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 670,
																				"indexExpression": {
																					"id": 669,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 654,
																					"src": "1643:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1628:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 667,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "1621:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1621:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$502",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$502",
																			"typeString": "contract IERC20"
																		}
																	],
																	"expression": {
																		"id": 664,
																		"name": "supportedAssets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "1600:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																			"typeString": "contract IERC20[] storage ref"
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1616:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1600:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC20_$502_$dyn_storage_ptr_$_t_contract$_IERC20_$502_$returns$__$attached_to$_t_array$_t_contract$_IERC20_$502_$dyn_storage_ptr_$",
																		"typeString": "function (contract IERC20[] storage pointer,contract IERC20)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1600:47:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "1600:47:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 657,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1554:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 658,
															"name": "_initialAssets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "1558:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1573:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1558:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1554:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"initializationExpression": {
													"assignments": [
														654
													],
													"declarations": [
														{
															"constant": false,
															"id": 654,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1547:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 675,
															"src": "1539:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 653,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1539:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 656,
													"initialValue": {
														"hexValue": "30",
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1551:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1539:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1581:3:7",
														"subExpression": {
															"id": 661,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1581:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 663,
													"nodeType": "ExpressionStatement",
													"src": "1581:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1534:124:7"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 676,
														"name": "performanceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "1667:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 677,
														"name": "_performanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "1694:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1667:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "1667:42:7"
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 680,
														"name": "lastRecordedProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1719:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1740:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "1719:22:7"
											}
										]
									},
									"id": 685,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "1210:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1202:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "_initialAssets",
												"nameLocation": "1250:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1233:31:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 629,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 630,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_performanceFee",
												"nameLocation": "1282:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1274:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1315:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1307:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:135:7"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:0:7"
									},
									"scope": 1135,
									"src": "1181:602:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "1898:71:7",
										"statements": [
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 695,
															"name": "assetToOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "1908:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 697,
														"indexExpression": {
															"id": 696,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "1922:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1908:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 699,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "1954:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 698,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1932:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1932:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1908:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "1908:54:7"
											}
										]
									},
									"functionSelector": "90805c34",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 692,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 598,
													"src": "1882:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 691,
												"name": "onlyRole",
												"nameLocations": [
													"1873:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "1873:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1873:20:7"
										}
									],
									"name": "setAssetToOracle",
									"nameLocation": "1798:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "1823:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1815:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "1839:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1831:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:33:7"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:0:7"
									},
									"scope": 1135,
									"src": "1789:180:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "2035:308:7",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "2053:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "2045:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2045:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"hexValue": "30",
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2066:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2045:22:7"
											},
											{
												"body": {
													"id": 743,
													"nodeType": "Block",
													"src": "2130:180:7",
													"statements": [
														{
															"expression": {
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 724,
																	"name": "totalValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "2144:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 728,
																						"name": "supportedAssets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 602,
																						"src": "2202:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																							"typeString": "contract IERC20[] storage ref"
																						}
																					},
																					"id": 730,
																					"indexExpression": {
																						"id": 729,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 714,
																						"src": "2218:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2202:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$502",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$502",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2194:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 726,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2194:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2194:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 732,
																				"name": "totalVaultBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "2239:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 739,
																			"indexExpression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 735,
																							"name": "supportedAssets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 602,
																							"src": "2265:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																								"typeString": "contract IERC20[] storage ref"
																							}
																						},
																						"id": 737,
																						"indexExpression": {
																							"id": 736,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 714,
																							"src": "2281:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2265:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$502",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$502",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2257:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 733,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2257:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2257:27:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2239:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 725,
																		"name": "estimateAssetValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "2158:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2158:141:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2144:155:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "2144:155:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "2097:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 718,
															"name": "supportedAssets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "2101:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																"typeString": "contract IERC20[] storage ref"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2117:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2101:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2097:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"initializationExpression": {
													"assignments": [
														714
													],
													"declarations": [
														{
															"constant": false,
															"id": 714,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2090:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 744,
															"src": "2082:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 713,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2082:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 716,
													"initialValue": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2082:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2125:3:7",
														"subExpression": {
															"id": 721,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2125:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 723,
													"nodeType": "ExpressionStatement",
													"src": "2125:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2077:233:7"
											},
											{
												"expression": {
													"id": 745,
													"name": "totalValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 710,
													"src": "2326:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 746,
												"nodeType": "Return",
												"src": "2319:17:7"
											}
										]
									},
									"functionSelector": "9e4a9369",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateVaultValue",
									"nameLocation": "1984:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:2:7"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2026:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:9:7"
									},
									"scope": 1135,
									"src": "1975:368:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "2408:391:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 758,
																			"name": "_asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "2450:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 757,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "2443:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2443:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 756,
																"name": "isAssetSupported",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "2426:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$502_$returns$_t_bool_$",
																	"typeString": "function (contract IERC20) view returns (bool)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2426:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4173736574206e6f7420737570706f72746564",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f",
																"typeString": "literal_string \"Asset not supported\""
															},
															"value": "Asset not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44696fd92acdd51a6e293cc3e10ca0b71f382105483f52f370c27b42fa875a1f",
																"typeString": "literal_string \"Asset not supported\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2418:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "2418:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 768,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "2520:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 772,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2542:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AssetVault_$1135",
																		"typeString": "contract AssetVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AssetVault_$1135",
																		"typeString": "contract AssetVault"
																	}
																],
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2534:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2534:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2534:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "2549:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 765,
																	"name": "_asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "2499:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 764,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "2492:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2492:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$502",
																"typeString": "contract IERC20"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2507:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "2492:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "2492:65:7"
											},
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 777,
															"name": "totalVaultBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2567:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 779,
														"indexExpression": {
															"id": 778,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2585:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2567:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 780,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2567:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "2567:36:7"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 783,
																"name": "userDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "2613:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																	"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																}
															},
															"id": 786,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 784,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "2626:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2626:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2613:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																"typeString": "struct AssetVault.UserDeposit storage ref"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2640:10:7",
														"memberName": "totalValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2613:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 789,
																"name": "_asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "2686:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 790,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "2706:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 788,
															"name": "estimateAssetValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2654:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2654:69:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2613:110:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "2613:110:7"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 794,
																	"name": "userDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "2733:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																		"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																	}
																},
																"id": 797,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 795,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "2746:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2746:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2733:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																	"typeString": "struct AssetVault.UserDeposit storage ref"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2760:13:7",
															"memberName": "assetBalances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 584,
															"src": "2733:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2774:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2733:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 801,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2785:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2733:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "2733:59:7"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "2358:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "2374:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2366:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2390:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2382:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:33:7"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2408:0:7"
									},
									"scope": 1135,
									"src": "2349:450:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "2865:740:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 813,
																			"name": "userDeposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "2896:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																				"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																			}
																		},
																		"id": 816,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 814,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "2909:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2909:12:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2896:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																			"typeString": "struct AssetVault.UserDeposit storage ref"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2923:13:7",
																	"memberName": "assetBalances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 584,
																	"src": "2896:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 819,
																"indexExpression": {
																	"id": 818,
																	"name": "_asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "2937:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2896:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 820,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "2948:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2896:59:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2969:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2875:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:126:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2875:126:7"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 825,
																	"name": "userDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "3011:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																		"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																	}
																},
																"id": 828,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 826,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "3024:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3024:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3011:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																	"typeString": "struct AssetVault.UserDeposit storage ref"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3038:13:7",
															"memberName": "assetBalances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 584,
															"src": "3011:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 831,
														"indexExpression": {
															"id": 830,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3052:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3011:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 832,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3063:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3011:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "3011:59:7"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "totalVaultBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "3080:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3098:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3080:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 838,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3109:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3080:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "3080:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 845,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "3150:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3150:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3164:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 842,
																	"name": "_asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "3133:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 841,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "3126:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3126:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$502",
																"typeString": "contract IERC20"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3141:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 469,
														"src": "3126:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3126:46:7"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "profitShare",
														"nameLocation": "3255:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3247:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3247:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 853,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "3294:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3294:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "calculateUserProfitShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3269:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3269:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3247:60:7"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 857,
															"name": "userProfits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "3317:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 860,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 858,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "3329:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3329:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3317:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 861,
														"name": "profitShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "3346:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3317:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "3317:40:7"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 864,
																"name": "userDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "3419:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																	"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																}
															},
															"id": 867,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 865,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "3432:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3432:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3419:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																"typeString": "struct AssetVault.UserDeposit storage ref"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3446:10:7",
														"memberName": "totalValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "3419:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 870,
																"name": "_asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "3492:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 871,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3512:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 869,
															"name": "estimateAssetValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "3460:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3460:69:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3419:110:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "3419:110:7"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 875,
																	"name": "userDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "3539:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																		"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																	}
																},
																"id": 878,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 876,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "3552:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3552:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3539:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																	"typeString": "struct AssetVault.UserDeposit storage ref"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3566:13:7",
															"memberName": "assetBalances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 584,
															"src": "3539:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 880,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3580:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3539:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 882,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3591:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3539:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "3539:59:7"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2814:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "2831:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2823:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2847:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2839:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2822:33:7"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2865:0:7"
									},
									"scope": 1135,
									"src": "2805:800:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "3720:245:7",
										"statements": [
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "3738:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "3730:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3730:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 895,
																			"name": "userDeposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "3751:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDeposit_$585_storage_$",
																				"typeString": "mapping(address => struct AssetVault.UserDeposit storage ref)"
																			}
																		},
																		"id": 897,
																		"indexExpression": {
																			"id": 896,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "3764:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3751:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserDeposit_$585_storage",
																			"typeString": "struct AssetVault.UserDeposit storage ref"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3771:10:7",
																	"memberName": "totalValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 580,
																	"src": "3751:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3784:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3751:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 901,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3750:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 902,
															"name": "estimateVaultValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3804:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3804:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3750:74:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3730:94:7"
											},
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "profitShare",
														"nameLocation": "3883:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "3875:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 908,
																	"name": "totalProfits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "3898:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 909,
																	"name": "userShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "3913:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3898:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 911,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3897:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3926:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3897:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3875:55:7"
											},
											{
												"expression": {
													"id": 915,
													"name": "profitShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 907,
													"src": "3947:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 892,
												"id": 916,
												"nodeType": "Return",
												"src": "3940:18:7"
											}
										]
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateUserProfitShare",
									"nameLocation": "3620:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3645:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3644:15:7"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3707:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:9:7"
									},
									"scope": 1135,
									"src": "3611:354:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "4130:394:7",
										"statements": [
											{
												"assignments": [
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "currentValue",
														"nameLocation": "4238:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "4230:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4230:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 939,
																	"name": "_asset2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "4280:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4272:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4272:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4272:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "_amount2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4290:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "estimateAssetValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4253:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4253:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4230:69:7"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "previousValue",
														"nameLocation": "4368:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "4360:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4360:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 949,
																	"name": "_asset1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "4411:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4403:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4403:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4403:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4421:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "estimateAssetValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4384:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4360:70:7"
											},
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "4448:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "4440:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4440:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "currentValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4457:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 957,
														"name": "previousValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "4472:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4457:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4440:45:7"
											},
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 960,
														"name": "totalProfits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4495:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 961,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4511:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4495:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "4495:22:7"
											}
										]
									},
									"functionSelector": "bb39a960",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 931,
													"name": "VAULT_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "4110:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 930,
												"name": "onlyRole",
												"nameLocations": [
													"4101:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4101:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4101:28:7"
										}
									],
									"name": "trade",
									"nameLocation": "3980:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "_asset1",
												"nameLocation": "4002:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "3995:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$502",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 919,
														"name": "IERC20",
														"nameLocations": [
															"3995:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "3995:6:7"
													},
													"referencedDeclaration": 502,
													"src": "3995:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$502",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "4027:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4019:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_asset2",
												"nameLocation": "4052:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4045:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$502",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IERC20",
														"nameLocations": [
															"4045:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "4045:6:7"
													},
													"referencedDeclaration": 502,
													"src": "4045:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$502",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_amount2",
												"nameLocation": "4077:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4069:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:106:7"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4130:0:7"
									},
									"scope": 1135,
									"src": "3971:553:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "4600:193:7",
										"statements": [
											{
												"body": {
													"id": 993,
													"nodeType": "Block",
													"src": "4663:102:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$502",
																	"typeString": "contract IERC20"
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 984,
																		"name": "supportedAssets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "4681:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																			"typeString": "contract IERC20[] storage ref"
																		}
																	},
																	"id": 986,
																	"indexExpression": {
																		"id": 985,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "4697:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4681:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 987,
																	"name": "_asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "4703:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$502",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "4681:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 992,
															"nodeType": "IfStatement",
															"src": "4677:78:7",
															"trueBody": {
																"id": 991,
																"nodeType": "Block",
																"src": "4711:44:7",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4736:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 972,
																		"id": 990,
																		"nodeType": "Return",
																		"src": "4729:11:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "4630:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 978,
															"name": "supportedAssets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4634:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$502_$dyn_storage",
																"typeString": "contract IERC20[] storage ref"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4650:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4634:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4630:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"initializationExpression": {
													"assignments": [
														974
													],
													"declarations": [
														{
															"constant": false,
															"id": 974,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4623:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 994,
															"src": "4615:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 973,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4615:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 976,
													"initialValue": {
														"hexValue": "30",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4627:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4615:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4658:3:7",
														"subExpression": {
															"id": 981,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "4658:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 983,
													"nodeType": "ExpressionStatement",
													"src": "4658:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4610:155:7"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4781:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 972,
												"id": 996,
												"nodeType": "Return",
												"src": "4774:12:7"
											}
										]
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAssetSupported",
									"nameLocation": "4539:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "4563:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4556:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$502",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 966,
														"name": "IERC20",
														"nameLocations": [
															"4556:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "4556:6:7"
													},
													"referencedDeclaration": 502,
													"src": "4556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$502",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:15:7"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4594:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4594:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4593:6:7"
									},
									"scope": 1135,
									"src": "4530:263:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "4920:206:7",
										"statements": [
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "4952:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "4930:31:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1008,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1007,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"4930:21:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "4930:21:7"
															},
															"referencedDeclaration": 45,
															"src": "4930:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"baseExpression": {
														"id": 1010,
														"name": "assetToOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "4964:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "mapping(address => contract AggregatorV3Interface)"
														}
													},
													"id": 1012,
													"indexExpression": {
														"id": 1011,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "4978:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4964:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4930:55:7"
											},
											{
												"assignments": [
													null,
													1015,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5005:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "4998:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1014,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4998:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1016,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "5020:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5030:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "5020:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4995:52:7"
											},
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5065:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "5057:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5057:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1024,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "5081:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1022,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1026,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "5090:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5073:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5057:40:7"
											},
											{
												"expression": {
													"id": 1029,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1021,
													"src": "5114:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1030,
												"nodeType": "Return",
												"src": "5107:12:7"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateAssetValue",
									"nameLocation": "4808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "4835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4851:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4843:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:33:7"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4907:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4906:9:7"
									},
									"scope": 1135,
									"src": "4799:327:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "5263:433:7",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "5295:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "5273:31:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1042,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1041,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"5273:21:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "5273:21:7"
															},
															"referencedDeclaration": 45,
															"src": "5273:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"baseExpression": {
														"id": 1044,
														"name": "assetToOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "5307:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "mapping(address => contract AggregatorV3Interface)"
														}
													},
													"id": 1046,
													"indexExpression": {
														"id": 1045,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "5321:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5307:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5273:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1049,
																"name": "priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "5359:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5402:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5394:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1051,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5394:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5394:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1050,
																	"name": "AggregatorV3Interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "5372:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																		"typeString": "type(contract AggregatorV3Interface)"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5372:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"src": "5359:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c65206e6f742073657420666f72206173736574",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5419:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9",
																"typeString": "literal_string \"Oracle not set for asset\""
															},
															"value": "Oracle not set for asset"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e334ef267d22bc993fde39e270cbea4e4ad3c106a5b9be6145f3f96cb5386a9",
																"typeString": "literal_string \"Oracle not set for asset\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:117:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "5338:117:7"
											},
											{
												"assignments": [
													null,
													1061,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5475:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "5468:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1060,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5468:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1065,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1062,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "5490:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5500:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "5490:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5490:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5465:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5535:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5543:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5535:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652064617461",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5546:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															},
															"value": "Invalid price data"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5527:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "5527:40:7"
											},
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "5585:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "5577:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5577:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1077,
																	"name": "priceFeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "5604:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5614:8:7",
																"memberName": "decimals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "5604:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																	"typeString": "function () view external returns (uint8)"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5604:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5596:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5577:48:7"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "valueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "5635:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1083,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "5647:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1086,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "5665:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5657:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1084,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5657:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5657:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5647:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1089,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5646:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5676:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1091,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "5680:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5676:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5675:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5646:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5635:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "5635:54:7"
											}
										]
									},
									"functionSelector": "a356efc4",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateAssetValueUSD",
									"nameLocation": "5141:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "5171:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "5163:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5187:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "5179:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5162:33:7"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "valueUSD",
												"nameLocation": "5249:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "5241:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5240:18:7"
									},
									"scope": 1135,
									"src": "5132:564:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "5762:222:7",
										"statements": []
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateProfits",
									"nameLocation": "5711:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5727:2:7"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "5753:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5753:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5752:9:7"
									},
									"scope": 1135,
									"src": "5702:282:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "6061:364:7",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "profits",
														"nameLocation": "6079:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "6071:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6071:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1112,
														"name": "calculateProfits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "6089:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6089:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6071:36:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "profits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "6121:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6131:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6121:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "6117:302:7",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "6134:285:7",
													"statements": [
														{
															"assignments": [
																1119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1119,
																	"mutability": "mutable",
																	"name": "performanceFee",
																	"nameLocation": "6156:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1131,
																	"src": "6148:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6148:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1126,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1120,
																				"name": "profits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1111,
																				"src": "6174:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1121,
																				"name": "performanceFeePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6184:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6174:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1123,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6173:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6212:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "6173:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6148:67:7"
														},
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "lastRecordedProfit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6318:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1128,
																	"name": "performanceFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "6339:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6318:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "6318:35:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "06f34c2f",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1107,
													"name": "VAULT_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "6041:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyRole",
												"nameLocations": [
													"6032:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "6032:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6032:28:7"
										}
									],
									"name": "collectPerformanceFee",
									"nameLocation": "5999:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6020:2:7"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6061:0:7"
									},
									"scope": 1135,
									"src": "5990:435:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1136,
							"src": "323:6104:7",
							"usedErrors": [
								351,
								354
							],
							"usedEvents": [
								363,
								372,
								381
							]
						}
					],
					"src": "32:6396:7"
				},
				"id": 7
			}
		}
	}
}