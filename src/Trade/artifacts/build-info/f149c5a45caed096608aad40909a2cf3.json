{
	"id": "f149c5a45caed096608aad40909a2cf3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/vault/Trade/Trade.sol": {
				"content": "// SPDX-License-Identifier: MIT \npragma solidity =0.8.25;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\"; \nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\nimport {ITradingContract} from \"./ITrade.sol\";\n\n\ncontract TradingContract is ITradingContract {\n    ISwapRouter public immutable swapRouter;\n\n    constructor(address _swapRouter) {\n        swapRouter = ISwapRouter(_swapRouter);\n    }\n\n    // Function to swap `amountIn` of one token for as much as possible of another token\n    function swapExactInputSingle(address tokenIn, address tokenOut, uint256 amountIn, address recipient, uint24 poolFee) external returns (uint256 amountOut) {\n        // Transfer the specified amount of `tokenIn` to this contract.\n        TransferHelper.safeTransferFrom(tokenIn, recipient, address(this), amountIn);\n\n        // Approve the router to spend the specified amount of `tokenIn`.\n        TransferHelper.safeApprove(tokenIn, address(swapRouter), amountIn);\n\n        // Set the parameters for the swap.\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            fee: poolFee,\n            recipient: recipient,\n            deadline: block.timestamp,\n            amountIn: amountIn,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        // Execute the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n}"
			},
			"contracts/vault/Trade/ITrade.sol": {
				"content": "// SPDX-License-Identifier: MIT \npragma solidity =0.8.25;\n\ninterface ITradingContract {\n    function swapExactInputSingle(address tokenIn, address tokenOut, uint256 amountIn, address recipient, uint24 poolFee) external returns (uint256 amountOut);\n}"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220faa2ea74e0704260106081be589dacc969794cf96719da4e7a5b98fe9e6f66db64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220faa2ea74e0704260106081be589dacc969794cf96719da4e7a5b98fe9e6f66db64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LOG2 0xEA PUSH21 0xE0704260106081BE589DACC969794CF96719DA4E7A JUMPDEST SWAP9 INVALID SWAP15 PUSH16 0x66DB64736F6C63430008170033000000 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220faa2ea74e0704260106081be589dacc969794cf96719da4e7a5b98fe9e6f66db64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LOG2 0xEA PUSH21 0xE0704260106081BE589DACC969794CF96719DA4E7A JUMPDEST SWAP9 INVALID SWAP15 PUSH16 0x66DB64736F6C63430008170033000000 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220faa2ea74e0704260106081be589dacc969794cf96719da4e7a5b98fe9e6f66db64736f6c63430008170033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/vault/Trade/ITrade.sol",
								"contracts/vault/Trade/Trade.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vault/Trade/ITrade.sol": {
				"ITradingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swapExactInputSingle(address,address,uint256,address,uint24)": "8ebb36c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/Trade/ITrade.sol\":\"ITradingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/vault/Trade/ITrade.sol\":{\"keccak256\":\"0x515aecefe9d337d39429e309b07768b92d7c5c51bca8e31ae86810ff8aaa63b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a18ab463774f164694b0b9b2ef70068d1f87778a31d4d11730430ea425dc8653\",\"dweb:/ipfs/QmeuhF1xPbgVEnZe19YZZfKpb12jHGRMYbEmNqDCVZSgyV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vault/Trade/Trade.sol": {
				"TradingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vault/Trade/Trade.sol\":306:1557  contract TradingContract is ITradingContract {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/vault/Trade/Trade.sol\":403:490  constructor(address _swapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/vault/Trade/Trade.sol\":471:482  _swapRouter */\n  dup1\n    /* \"contracts/vault/Trade/Trade.sol\":446:483  swapRouter = ISwapRouter(_swapRouter) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/vault/Trade/Trade.sol\":403:490  constructor(address _swapRouter) {... */\n  pop\n    /* \"contracts/vault/Trade/Trade.sol\":306:1557  contract TradingContract is ITradingContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/vault/Trade/Trade.sol\":306:1557  contract TradingContract is ITradingContract {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/vault/Trade/Trade.sol\":306:1557  contract TradingContract is ITradingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ebb36c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/vault/Trade/Trade.sol\":585:1555  function swapExactInputSingle(address tokenIn, address tokenOut, uint256 amountIn, address recipient, uint24 poolFee) external returns (uint256 amountOut) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/Trade/Trade.sol\":357:396  ISwapRouter public immutable swapRouter */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/vault/Trade/Trade.sol\":585:1555  function swapExactInputSingle(address tokenIn, address tokenOut, uint256 amountIn, address recipient, uint24 poolFee) external returns (uint256 amountOut) {... */\n    tag_8:\n        /* \"contracts/vault/Trade/Trade.sol\":721:738  uint256 amountOut */\n      0x00\n        /* \"contracts/vault/Trade/Trade.sol\":822:898  TransferHelper.safeTransferFrom(tokenIn, recipient, address(this), amountIn) */\n      tag_16\n        /* \"contracts/vault/Trade/Trade.sol\":854:861  tokenIn */\n      dup7\n        /* \"contracts/vault/Trade/Trade.sol\":863:872  recipient */\n      dup5\n        /* \"contracts/vault/Trade/Trade.sol\":882:886  this */\n      address\n        /* \"contracts/vault/Trade/Trade.sol\":889:897  amountIn */\n      dup8\n        /* \"contracts/vault/Trade/Trade.sol\":822:853  TransferHelper.safeTransferFrom */\n      tag_17\n        /* \"contracts/vault/Trade/Trade.sol\":822:898  TransferHelper.safeTransferFrom(tokenIn, recipient, address(this), amountIn) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/vault/Trade/Trade.sol\":983:1049  TransferHelper.safeApprove(tokenIn, address(swapRouter), amountIn) */\n      tag_18\n        /* \"contracts/vault/Trade/Trade.sol\":1010:1017  tokenIn */\n      dup7\n        /* \"contracts/vault/Trade/Trade.sol\":1027:1037  swapRouter */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"contracts/vault/Trade/Trade.sol\":1040:1048  amountIn */\n      dup7\n        /* \"contracts/vault/Trade/Trade.sol\":983:1009  TransferHelper.safeApprove */\n      tag_19\n        /* \"contracts/vault/Trade/Trade.sol\":983:1049  TransferHelper.safeApprove(tokenIn, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_18:\n        /* \"contracts/vault/Trade/Trade.sol\":1104:1152  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/vault/Trade/Trade.sol\":1213:1220  tokenIn */\n      dup9\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1244:1252  tokenOut */\n      dup8\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1271:1278  poolFee */\n      dup5\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1303:1312  recipient */\n      dup6\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1336:1351  block.timestamp */\n      timestamp\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1375:1383  amountIn */\n      dup7\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1415:1416  0 */\n      0x00\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/vault/Trade/Trade.sol\":1449:1450  0 */\n      0x00\n        /* \"contracts/vault/Trade/Trade.sol\":1155:1461  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/vault/Trade/Trade.sol\":1104:1461  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/vault/Trade/Trade.sol\":1513:1523  swapRouter */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"contracts/vault/Trade/Trade.sol\":1513:1540  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/vault/Trade/Trade.sol\":1541:1547  params */\n      dup3\n        /* \"contracts/vault/Trade/Trade.sol\":1513:1548  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/vault/Trade/Trade.sol\":1501:1548  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/vault/Trade/Trade.sol\":740:1555  {... */\n      pop\n        /* \"contracts/vault/Trade/Trade.sol\":585:1555  function swapExactInputSingle(address tokenIn, address tokenOut, uint256 amountIn, address recipient, uint24 poolFee) external returns (uint256 amountOut) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault/Trade/Trade.sol\":357:396  ISwapRouter public immutable swapRouter */\n    tag_12:\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_17:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_27\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_33\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_32)\n    tag_33:\n      0x60\n      swap2\n      pop\n    tag_32:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_35\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_35:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_34:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_19:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_44:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_47\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_46)\n    tag_47:\n      0x60\n      swap2\n      pop\n    tag_46:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_49\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_49:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_48:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_55:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_57:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_58:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_98\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_57\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_59:\n        /* \"#utility.yul\":641:665   */\n      tag_100\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_58\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_101:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_60:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_103\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_59\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_61:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_62:\n        /* \"#utility.yul\":997:1021   */\n      tag_106\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_61\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_107:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_63:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_109\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_62\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1288   */\n    tag_64:\n        /* \"#utility.yul\":1233:1240   */\n      0x00\n        /* \"#utility.yul\":1273:1281   */\n      0xffffff\n        /* \"#utility.yul\":1266:1271   */\n      dup3\n        /* \"#utility.yul\":1262:1282   */\n      and\n        /* \"#utility.yul\":1251:1282   */\n      swap1\n      pop\n        /* \"#utility.yul\":1197:1288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1414   */\n    tag_65:\n        /* \"#utility.yul\":1366:1389   */\n      tag_112\n        /* \"#utility.yul\":1383:1388   */\n      dup2\n        /* \"#utility.yul\":1366:1389   */\n      tag_64\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1359:1364   */\n      dup2\n        /* \"#utility.yul\":1356:1390   */\n      eq\n        /* \"#utility.yul\":1346:1408   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1401:1402   */\n      dup1\n        /* \"#utility.yul\":1394:1406   */\n      revert\n        /* \"#utility.yul\":1346:1408   */\n    tag_113:\n        /* \"#utility.yul\":1294:1414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1557   */\n    tag_66:\n        /* \"#utility.yul\":1465:1470   */\n      0x00\n        /* \"#utility.yul\":1503:1509   */\n      dup2\n        /* \"#utility.yul\":1490:1510   */\n      calldataload\n        /* \"#utility.yul\":1481:1510   */\n      swap1\n      pop\n        /* \"#utility.yul\":1519:1551   */\n      tag_115\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1519:1551   */\n      tag_65\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1420:1557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:2472   */\n    tag_7:\n        /* \"#utility.yul\":1657:1663   */\n      0x00\n        /* \"#utility.yul\":1665:1671   */\n      dup1\n        /* \"#utility.yul\":1673:1679   */\n      0x00\n        /* \"#utility.yul\":1681:1687   */\n      dup1\n        /* \"#utility.yul\":1689:1695   */\n      0x00\n        /* \"#utility.yul\":1738:1741   */\n      0xa0\n        /* \"#utility.yul\":1726:1735   */\n      dup7\n        /* \"#utility.yul\":1717:1724   */\n      dup9\n        /* \"#utility.yul\":1713:1736   */\n      sub\n        /* \"#utility.yul\":1709:1742   */\n      slt\n        /* \"#utility.yul\":1706:1826   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1745:1824   */\n      tag_118\n      tag_55\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1706:1826   */\n    tag_117:\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1890:1943   */\n      tag_119\n        /* \"#utility.yul\":1935:1942   */\n      dup9\n        /* \"#utility.yul\":1926:1932   */\n      dup3\n        /* \"#utility.yul\":1915:1924   */\n      dup10\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1890:1943   */\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1880:1943   */\n      swap6\n      pop\n        /* \"#utility.yul\":1836:1953   */\n      pop\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":2018:2071   */\n      tag_120\n        /* \"#utility.yul\":2063:2070   */\n      dup9\n        /* \"#utility.yul\":2054:2060   */\n      dup3\n        /* \"#utility.yul\":2043:2052   */\n      dup10\n        /* \"#utility.yul\":2039:2061   */\n      add\n        /* \"#utility.yul\":2018:2071   */\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2008:2071   */\n      swap5\n      pop\n        /* \"#utility.yul\":1963:2081   */\n      pop\n        /* \"#utility.yul\":2120:2122   */\n      0x40\n        /* \"#utility.yul\":2146:2199   */\n      tag_121\n        /* \"#utility.yul\":2191:2198   */\n      dup9\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2171:2180   */\n      dup10\n        /* \"#utility.yul\":2167:2189   */\n      add\n        /* \"#utility.yul\":2146:2199   */\n      tag_63\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2136:2199   */\n      swap4\n      pop\n        /* \"#utility.yul\":2091:2209   */\n      pop\n        /* \"#utility.yul\":2248:2250   */\n      0x60\n        /* \"#utility.yul\":2274:2327   */\n      tag_122\n        /* \"#utility.yul\":2319:2326   */\n      dup9\n        /* \"#utility.yul\":2310:2316   */\n      dup3\n        /* \"#utility.yul\":2299:2308   */\n      dup10\n        /* \"#utility.yul\":2295:2317   */\n      add\n        /* \"#utility.yul\":2274:2327   */\n      tag_60\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2264:2327   */\n      swap3\n      pop\n        /* \"#utility.yul\":2219:2337   */\n      pop\n        /* \"#utility.yul\":2376:2379   */\n      0x80\n        /* \"#utility.yul\":2403:2455   */\n      tag_123\n        /* \"#utility.yul\":2447:2454   */\n      dup9\n        /* \"#utility.yul\":2438:2444   */\n      dup3\n        /* \"#utility.yul\":2427:2436   */\n      dup10\n        /* \"#utility.yul\":2423:2445   */\n      add\n        /* \"#utility.yul\":2403:2455   */\n      tag_66\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2393:2455   */\n      swap2\n      pop\n        /* \"#utility.yul\":2347:2465   */\n      pop\n        /* \"#utility.yul\":1563:2472   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2596   */\n    tag_67:\n        /* \"#utility.yul\":2565:2589   */\n      tag_125\n        /* \"#utility.yul\":2583:2588   */\n      dup2\n        /* \"#utility.yul\":2565:2589   */\n      tag_61\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2560:2563   */\n      dup3\n        /* \"#utility.yul\":2553:2590   */\n      mstore\n        /* \"#utility.yul\":2478:2596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2824   */\n    tag_10:\n        /* \"#utility.yul\":2695:2699   */\n      0x00\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2722:2731   */\n      dup3\n        /* \"#utility.yul\":2718:2736   */\n      add\n        /* \"#utility.yul\":2710:2736   */\n      swap1\n      pop\n        /* \"#utility.yul\":2746:2817   */\n      tag_127\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2799:2816   */\n      add\n        /* \"#utility.yul\":2790:2796   */\n      dup5\n        /* \"#utility.yul\":2746:2817   */\n      tag_67\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2602:2824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:2890   */\n    tag_68:\n        /* \"#utility.yul\":2858:2861   */\n      0x00\n        /* \"#utility.yul\":2879:2884   */\n      dup2\n        /* \"#utility.yul\":2872:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3038   */\n    tag_69:\n        /* \"#utility.yul\":2946:2955   */\n      0x00\n        /* \"#utility.yul\":2979:3032   */\n      tag_130\n        /* \"#utility.yul\":2997:3031   */\n      tag_131\n        /* \"#utility.yul\":3006:3030   */\n      tag_132\n        /* \"#utility.yul\":3024:3029   */\n      dup5\n        /* \"#utility.yul\":3006:3030   */\n      tag_57\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2997:3031   */\n      tag_68\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2979:3032   */\n      tag_57\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2966:3032   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3044:3170   */\n    tag_70:\n        /* \"#utility.yul\":3094:3103   */\n      0x00\n        /* \"#utility.yul\":3127:3164   */\n      tag_134\n        /* \"#utility.yul\":3158:3163   */\n      dup3\n        /* \"#utility.yul\":3127:3164   */\n      tag_69\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3114:3164   */\n      swap1\n      pop\n        /* \"#utility.yul\":3044:3170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3321   */\n    tag_71:\n        /* \"#utility.yul\":3245:3254   */\n      0x00\n        /* \"#utility.yul\":3278:3315   */\n      tag_136\n        /* \"#utility.yul\":3309:3314   */\n      dup3\n        /* \"#utility.yul\":3278:3315   */\n      tag_70\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3265:3315   */\n      swap1\n      pop\n        /* \"#utility.yul\":3176:3321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3496   */\n    tag_72:\n        /* \"#utility.yul\":3433:3489   */\n      tag_138\n        /* \"#utility.yul\":3483:3488   */\n      dup2\n        /* \"#utility.yul\":3433:3489   */\n      tag_71\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3428:3431   */\n      dup3\n        /* \"#utility.yul\":3421:3490   */\n      mstore\n        /* \"#utility.yul\":3327:3496   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3502:3762   */\n    tag_14:\n        /* \"#utility.yul\":3614:3618   */\n      0x00\n        /* \"#utility.yul\":3652:3654   */\n      0x20\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3637:3655   */\n      add\n        /* \"#utility.yul\":3629:3655   */\n      swap1\n      pop\n        /* \"#utility.yul\":3665:3755   */\n      tag_140\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3741:3750   */\n      dup4\n        /* \"#utility.yul\":3737:3754   */\n      add\n        /* \"#utility.yul\":3728:3734   */\n      dup5\n        /* \"#utility.yul\":3665:3755   */\n      tag_72\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3502:3762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:3876   */\n    tag_73:\n        /* \"#utility.yul\":3845:3869   */\n      tag_142\n        /* \"#utility.yul\":3863:3868   */\n      dup2\n        /* \"#utility.yul\":3845:3869   */\n      tag_58\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3840:3843   */\n      dup3\n        /* \"#utility.yul\":3833:3870   */\n      mstore\n        /* \"#utility.yul\":3768:3876   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3882:3987   */\n    tag_74:\n        /* \"#utility.yul\":3957:3980   */\n      tag_144\n        /* \"#utility.yul\":3974:3979   */\n      dup2\n        /* \"#utility.yul\":3957:3980   */\n      tag_64\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3952:3955   */\n      dup3\n        /* \"#utility.yul\":3945:3981   */\n      mstore\n        /* \"#utility.yul\":3882:3987   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3993:4101   */\n    tag_75:\n        /* \"#utility.yul\":4070:4094   */\n      tag_146\n        /* \"#utility.yul\":4088:4093   */\n      dup2\n        /* \"#utility.yul\":4070:4094   */\n      tag_61\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4065:4068   */\n      dup3\n        /* \"#utility.yul\":4058:4095   */\n      mstore\n        /* \"#utility.yul\":3993:4101   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4215   */\n    tag_76:\n        /* \"#utility.yul\":4184:4208   */\n      tag_148\n        /* \"#utility.yul\":4202:4207   */\n      dup2\n        /* \"#utility.yul\":4184:4208   */\n      tag_57\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4179:4182   */\n      dup3\n        /* \"#utility.yul\":4172:4209   */\n      mstore\n        /* \"#utility.yul\":4107:4215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4315:5938   */\n    tag_77:\n        /* \"#utility.yul\":4490:4496   */\n      0x0100\n        /* \"#utility.yul\":4485:4488   */\n      dup3\n        /* \"#utility.yul\":4481:4497   */\n      add\n        /* \"#utility.yul\":4582:4586   */\n      0x00\n        /* \"#utility.yul\":4575:4580   */\n      dup3\n        /* \"#utility.yul\":4571:4587   */\n      add\n        /* \"#utility.yul\":4565:4588   */\n      mload\n        /* \"#utility.yul\":4601:4664   */\n      tag_150\n        /* \"#utility.yul\":4658:4662   */\n      0x00\n        /* \"#utility.yul\":4653:4656   */\n      dup6\n        /* \"#utility.yul\":4649:4663   */\n      add\n        /* \"#utility.yul\":4635:4647   */\n      dup3\n        /* \"#utility.yul\":4601:4664   */\n      tag_73\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4507:4674   */\n      pop\n        /* \"#utility.yul\":4760:4764   */\n      0x20\n        /* \"#utility.yul\":4753:4758   */\n      dup3\n        /* \"#utility.yul\":4749:4765   */\n      add\n        /* \"#utility.yul\":4743:4766   */\n      mload\n        /* \"#utility.yul\":4779:4842   */\n      tag_151\n        /* \"#utility.yul\":4836:4840   */\n      0x20\n        /* \"#utility.yul\":4831:4834   */\n      dup6\n        /* \"#utility.yul\":4827:4841   */\n      add\n        /* \"#utility.yul\":4813:4825   */\n      dup3\n        /* \"#utility.yul\":4779:4842   */\n      tag_73\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4684:4852   */\n      pop\n        /* \"#utility.yul\":4933:4937   */\n      0x40\n        /* \"#utility.yul\":4926:4931   */\n      dup3\n        /* \"#utility.yul\":4922:4938   */\n      add\n        /* \"#utility.yul\":4916:4939   */\n      mload\n        /* \"#utility.yul\":4952:5013   */\n      tag_152\n        /* \"#utility.yul\":5007:5011   */\n      0x40\n        /* \"#utility.yul\":5002:5005   */\n      dup6\n        /* \"#utility.yul\":4998:5012   */\n      add\n        /* \"#utility.yul\":4984:4996   */\n      dup3\n        /* \"#utility.yul\":4952:5013   */\n      tag_74\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4862:5023   */\n      pop\n        /* \"#utility.yul\":5110:5114   */\n      0x60\n        /* \"#utility.yul\":5103:5108   */\n      dup3\n        /* \"#utility.yul\":5099:5115   */\n      add\n        /* \"#utility.yul\":5093:5116   */\n      mload\n        /* \"#utility.yul\":5129:5192   */\n      tag_153\n        /* \"#utility.yul\":5186:5190   */\n      0x60\n        /* \"#utility.yul\":5181:5184   */\n      dup6\n        /* \"#utility.yul\":5177:5191   */\n      add\n        /* \"#utility.yul\":5163:5175   */\n      dup3\n        /* \"#utility.yul\":5129:5192   */\n      tag_73\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5033:5202   */\n      pop\n        /* \"#utility.yul\":5288:5292   */\n      0x80\n        /* \"#utility.yul\":5281:5286   */\n      dup3\n        /* \"#utility.yul\":5277:5293   */\n      add\n        /* \"#utility.yul\":5271:5294   */\n      mload\n        /* \"#utility.yul\":5307:5370   */\n      tag_154\n        /* \"#utility.yul\":5364:5368   */\n      0x80\n        /* \"#utility.yul\":5359:5362   */\n      dup6\n        /* \"#utility.yul\":5355:5369   */\n      add\n        /* \"#utility.yul\":5341:5353   */\n      dup3\n        /* \"#utility.yul\":5307:5370   */\n      tag_75\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5212:5380   */\n      pop\n        /* \"#utility.yul\":5466:5470   */\n      0xa0\n        /* \"#utility.yul\":5459:5464   */\n      dup3\n        /* \"#utility.yul\":5455:5471   */\n      add\n        /* \"#utility.yul\":5449:5472   */\n      mload\n        /* \"#utility.yul\":5485:5548   */\n      tag_155\n        /* \"#utility.yul\":5542:5546   */\n      0xa0\n        /* \"#utility.yul\":5537:5540   */\n      dup6\n        /* \"#utility.yul\":5533:5547   */\n      add\n        /* \"#utility.yul\":5519:5531   */\n      dup3\n        /* \"#utility.yul\":5485:5548   */\n      tag_75\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5390:5558   */\n      pop\n        /* \"#utility.yul\":5652:5656   */\n      0xc0\n        /* \"#utility.yul\":5645:5650   */\n      dup3\n        /* \"#utility.yul\":5641:5657   */\n      add\n        /* \"#utility.yul\":5635:5658   */\n      mload\n        /* \"#utility.yul\":5671:5734   */\n      tag_156\n        /* \"#utility.yul\":5728:5732   */\n      0xc0\n        /* \"#utility.yul\":5723:5726   */\n      dup6\n        /* \"#utility.yul\":5719:5733   */\n      add\n        /* \"#utility.yul\":5705:5717   */\n      dup3\n        /* \"#utility.yul\":5671:5734   */\n      tag_75\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5568:5744   */\n      pop\n        /* \"#utility.yul\":5839:5843   */\n      0xe0\n        /* \"#utility.yul\":5832:5837   */\n      dup3\n        /* \"#utility.yul\":5828:5844   */\n      add\n        /* \"#utility.yul\":5822:5845   */\n      mload\n        /* \"#utility.yul\":5858:5921   */\n      tag_157\n        /* \"#utility.yul\":5915:5919   */\n      0xe0\n        /* \"#utility.yul\":5910:5913   */\n      dup6\n        /* \"#utility.yul\":5906:5920   */\n      add\n        /* \"#utility.yul\":5892:5904   */\n      dup3\n        /* \"#utility.yul\":5858:5921   */\n      tag_76\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5754:5931   */\n      pop\n        /* \"#utility.yul\":4459:5938   */\n      pop\n        /* \"#utility.yul\":4315:5938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5944:6323   */\n    tag_21:\n        /* \"#utility.yul\":6115:6119   */\n      0x00\n        /* \"#utility.yul\":6153:6156   */\n      0x0100\n        /* \"#utility.yul\":6142:6151   */\n      dup3\n        /* \"#utility.yul\":6138:6157   */\n      add\n        /* \"#utility.yul\":6130:6157   */\n      swap1\n      pop\n        /* \"#utility.yul\":6167:6316   */\n      tag_159\n        /* \"#utility.yul\":6313:6314   */\n      0x00\n        /* \"#utility.yul\":6302:6311   */\n      dup4\n        /* \"#utility.yul\":6298:6315   */\n      add\n        /* \"#utility.yul\":6289:6295   */\n      dup5\n        /* \"#utility.yul\":6167:6316   */\n      tag_77\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5944:6323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6329:6472   */\n    tag_78:\n        /* \"#utility.yul\":6386:6391   */\n      0x00\n        /* \"#utility.yul\":6417:6423   */\n      dup2\n        /* \"#utility.yul\":6411:6424   */\n      mload\n        /* \"#utility.yul\":6402:6424   */\n      swap1\n      pop\n        /* \"#utility.yul\":6433:6466   */\n      tag_161\n        /* \"#utility.yul\":6460:6465   */\n      dup2\n        /* \"#utility.yul\":6433:6466   */\n      tag_62\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6329:6472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6829   */\n    tag_25:\n        /* \"#utility.yul\":6548:6554   */\n      0x00\n        /* \"#utility.yul\":6597:6599   */\n      0x20\n        /* \"#utility.yul\":6585:6594   */\n      dup3\n        /* \"#utility.yul\":6576:6583   */\n      dup5\n        /* \"#utility.yul\":6572:6595   */\n      sub\n        /* \"#utility.yul\":6568:6600   */\n      slt\n        /* \"#utility.yul\":6565:6684   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":6603:6682   */\n      tag_164\n      tag_55\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6565:6684   */\n    tag_163:\n        /* \"#utility.yul\":6723:6724   */\n      0x00\n        /* \"#utility.yul\":6748:6812   */\n      tag_165\n        /* \"#utility.yul\":6804:6811   */\n      dup5\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      dup6\n        /* \"#utility.yul\":6780:6802   */\n      add\n        /* \"#utility.yul\":6748:6812   */\n      tag_78\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6738:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6694:6822   */\n      pop\n        /* \"#utility.yul\":6478:6829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:6953   */\n    tag_79:\n        /* \"#utility.yul\":6922:6946   */\n      tag_167\n        /* \"#utility.yul\":6940:6945   */\n      dup2\n        /* \"#utility.yul\":6922:6946   */\n      tag_58\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6917:6920   */\n      dup3\n        /* \"#utility.yul\":6910:6947   */\n      mstore\n        /* \"#utility.yul\":6835:6953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6959:7401   */\n    tag_28:\n        /* \"#utility.yul\":7108:7112   */\n      0x00\n        /* \"#utility.yul\":7146:7148   */\n      0x60\n        /* \"#utility.yul\":7135:7144   */\n      dup3\n        /* \"#utility.yul\":7131:7149   */\n      add\n        /* \"#utility.yul\":7123:7149   */\n      swap1\n      pop\n        /* \"#utility.yul\":7159:7230   */\n      tag_169\n        /* \"#utility.yul\":7227:7228   */\n      0x00\n        /* \"#utility.yul\":7216:7225   */\n      dup4\n        /* \"#utility.yul\":7212:7229   */\n      add\n        /* \"#utility.yul\":7203:7209   */\n      dup7\n        /* \"#utility.yul\":7159:7230   */\n      tag_79\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7240:7312   */\n      tag_170\n        /* \"#utility.yul\":7308:7310   */\n      0x20\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7293:7311   */\n      add\n        /* \"#utility.yul\":7284:7290   */\n      dup6\n        /* \"#utility.yul\":7240:7312   */\n      tag_79\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7322:7394   */\n      tag_171\n        /* \"#utility.yul\":7390:7392   */\n      0x40\n        /* \"#utility.yul\":7379:7388   */\n      dup4\n        /* \"#utility.yul\":7375:7393   */\n      add\n        /* \"#utility.yul\":7366:7372   */\n      dup5\n        /* \"#utility.yul\":7322:7394   */\n      tag_67\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6959:7401   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7505   */\n    tag_80:\n        /* \"#utility.yul\":7458:7464   */\n      0x00\n        /* \"#utility.yul\":7492:7497   */\n      dup2\n        /* \"#utility.yul\":7486:7498   */\n      mload\n        /* \"#utility.yul\":7476:7498   */\n      swap1\n      pop\n        /* \"#utility.yul\":7407:7505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7511:7658   */\n    tag_81:\n        /* \"#utility.yul\":7612:7623   */\n      0x00\n        /* \"#utility.yul\":7649:7652   */\n      dup2\n        /* \"#utility.yul\":7634:7652   */\n      swap1\n      pop\n        /* \"#utility.yul\":7511:7658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7664:7910   */\n    tag_82:\n        /* \"#utility.yul\":7745:7746   */\n      0x00\n        /* \"#utility.yul\":7755:7868   */\n    tag_175:\n        /* \"#utility.yul\":7769:7775   */\n      dup4\n        /* \"#utility.yul\":7766:7767   */\n      dup2\n        /* \"#utility.yul\":7763:7776   */\n      lt\n        /* \"#utility.yul\":7755:7868   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":7854:7855   */\n      dup1\n        /* \"#utility.yul\":7849:7852   */\n      dup3\n        /* \"#utility.yul\":7845:7856   */\n      add\n        /* \"#utility.yul\":7839:7857   */\n      mload\n        /* \"#utility.yul\":7835:7836   */\n      dup2\n        /* \"#utility.yul\":7830:7833   */\n      dup5\n        /* \"#utility.yul\":7826:7837   */\n      add\n        /* \"#utility.yul\":7819:7858   */\n      mstore\n        /* \"#utility.yul\":7791:7793   */\n      0x20\n        /* \"#utility.yul\":7788:7789   */\n      dup2\n        /* \"#utility.yul\":7784:7794   */\n      add\n        /* \"#utility.yul\":7779:7794   */\n      swap1\n      pop\n        /* \"#utility.yul\":7755:7868   */\n      jump(tag_175)\n    tag_177:\n        /* \"#utility.yul\":7902:7903   */\n      0x00\n        /* \"#utility.yul\":7893:7899   */\n      dup5\n        /* \"#utility.yul\":7888:7891   */\n      dup5\n        /* \"#utility.yul\":7884:7900   */\n      add\n        /* \"#utility.yul\":7877:7904   */\n      mstore\n        /* \"#utility.yul\":7726:7910   */\n      pop\n        /* \"#utility.yul\":7664:7910   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8302   */\n    tag_83:\n        /* \"#utility.yul\":8020:8023   */\n      0x00\n        /* \"#utility.yul\":8048:8086   */\n      tag_179\n        /* \"#utility.yul\":8080:8085   */\n      dup3\n        /* \"#utility.yul\":8048:8086   */\n      tag_80\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8102:8190   */\n      tag_180\n        /* \"#utility.yul\":8183:8189   */\n      dup2\n        /* \"#utility.yul\":8178:8181   */\n      dup6\n        /* \"#utility.yul\":8102:8190   */\n      tag_81\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":8095:8190   */\n      swap4\n      pop\n        /* \"#utility.yul\":8199:8264   */\n      tag_181\n        /* \"#utility.yul\":8257:8263   */\n      dup2\n        /* \"#utility.yul\":8252:8255   */\n      dup6\n        /* \"#utility.yul\":8245:8249   */\n      0x20\n        /* \"#utility.yul\":8238:8243   */\n      dup7\n        /* \"#utility.yul\":8234:8250   */\n      add\n        /* \"#utility.yul\":8199:8264   */\n      tag_82\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8289:8295   */\n      dup1\n        /* \"#utility.yul\":8284:8287   */\n      dup5\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8296   */\n      swap2\n      pop\n        /* \"#utility.yul\":8024:8302   */\n      pop\n        /* \"#utility.yul\":7916:8302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8579   */\n    tag_30:\n        /* \"#utility.yul\":8438:8441   */\n      0x00\n        /* \"#utility.yul\":8460:8553   */\n      tag_183\n        /* \"#utility.yul\":8549:8552   */\n      dup3\n        /* \"#utility.yul\":8540:8546   */\n      dup5\n        /* \"#utility.yul\":8460:8553   */\n      tag_83\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8453:8553   */\n      swap2\n      pop\n        /* \"#utility.yul\":8570:8573   */\n      dup2\n        /* \"#utility.yul\":8563:8573   */\n      swap1\n      pop\n        /* \"#utility.yul\":8308:8579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8585:8675   */\n    tag_84:\n        /* \"#utility.yul\":8619:8626   */\n      0x00\n        /* \"#utility.yul\":8662:8667   */\n      dup2\n        /* \"#utility.yul\":8655:8668   */\n      iszero\n        /* \"#utility.yul\":8648:8669   */\n      iszero\n        /* \"#utility.yul\":8637:8669   */\n      swap1\n      pop\n        /* \"#utility.yul\":8585:8675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8681:8797   */\n    tag_85:\n        /* \"#utility.yul\":8751:8772   */\n      tag_186\n        /* \"#utility.yul\":8766:8771   */\n      dup2\n        /* \"#utility.yul\":8751:8772   */\n      tag_84\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8744:8749   */\n      dup2\n        /* \"#utility.yul\":8741:8773   */\n      eq\n        /* \"#utility.yul\":8731:8791   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":8787:8788   */\n      0x00\n        /* \"#utility.yul\":8784:8785   */\n      dup1\n        /* \"#utility.yul\":8777:8789   */\n      revert\n        /* \"#utility.yul\":8731:8791   */\n    tag_187:\n        /* \"#utility.yul\":8681:8797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8940   */\n    tag_86:\n        /* \"#utility.yul\":8857:8862   */\n      0x00\n        /* \"#utility.yul\":8888:8894   */\n      dup2\n        /* \"#utility.yul\":8882:8895   */\n      mload\n        /* \"#utility.yul\":8873:8895   */\n      swap1\n      pop\n        /* \"#utility.yul\":8904:8934   */\n      tag_189\n        /* \"#utility.yul\":8928:8933   */\n      dup2\n        /* \"#utility.yul\":8904:8934   */\n      tag_85\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8803:8940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8946:9291   */\n    tag_37:\n        /* \"#utility.yul\":9013:9019   */\n      0x00\n        /* \"#utility.yul\":9062:9064   */\n      0x20\n        /* \"#utility.yul\":9050:9059   */\n      dup3\n        /* \"#utility.yul\":9041:9048   */\n      dup5\n        /* \"#utility.yul\":9037:9060   */\n      sub\n        /* \"#utility.yul\":9033:9065   */\n      slt\n        /* \"#utility.yul\":9030:9149   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":9068:9147   */\n      tag_192\n      tag_55\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9030:9149   */\n    tag_191:\n        /* \"#utility.yul\":9188:9189   */\n      0x00\n        /* \"#utility.yul\":9213:9274   */\n      tag_193\n        /* \"#utility.yul\":9266:9273   */\n      dup5\n        /* \"#utility.yul\":9257:9263   */\n      dup3\n        /* \"#utility.yul\":9246:9255   */\n      dup6\n        /* \"#utility.yul\":9242:9264   */\n      add\n        /* \"#utility.yul\":9213:9274   */\n      tag_86\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":9203:9274   */\n      swap2\n      pop\n        /* \"#utility.yul\":9159:9284   */\n      pop\n        /* \"#utility.yul\":8946:9291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9297:9466   */\n    tag_87:\n        /* \"#utility.yul\":9381:9392   */\n      0x00\n        /* \"#utility.yul\":9415:9421   */\n      dup3\n        /* \"#utility.yul\":9410:9413   */\n      dup3\n        /* \"#utility.yul\":9403:9422   */\n      mstore\n        /* \"#utility.yul\":9455:9459   */\n      0x20\n        /* \"#utility.yul\":9450:9453   */\n      dup3\n        /* \"#utility.yul\":9446:9460   */\n      add\n        /* \"#utility.yul\":9431:9460   */\n      swap1\n      pop\n        /* \"#utility.yul\":9297:9466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9472:9625   */\n    tag_88:\n        /* \"#utility.yul\":9612:9617   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9608:9609   */\n      0x00\n        /* \"#utility.yul\":9600:9606   */\n      dup3\n        /* \"#utility.yul\":9596:9610   */\n      add\n        /* \"#utility.yul\":9589:9618   */\n      mstore\n        /* \"#utility.yul\":9472:9625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9631:9996   */\n    tag_89:\n        /* \"#utility.yul\":9773:9776   */\n      0x00\n        /* \"#utility.yul\":9794:9860   */\n      tag_197\n        /* \"#utility.yul\":9858:9859   */\n      0x03\n        /* \"#utility.yul\":9853:9856   */\n      dup4\n        /* \"#utility.yul\":9794:9860   */\n      tag_87\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9787:9860   */\n      swap2\n      pop\n        /* \"#utility.yul\":9869:9962   */\n      tag_198\n        /* \"#utility.yul\":9958:9961   */\n      dup3\n        /* \"#utility.yul\":9869:9962   */\n      tag_88\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":9987:9989   */\n      0x20\n        /* \"#utility.yul\":9982:9985   */\n      dup3\n        /* \"#utility.yul\":9978:9990   */\n      add\n        /* \"#utility.yul\":9971:9990   */\n      swap1\n      pop\n        /* \"#utility.yul\":9631:9996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10002:10421   */\n    tag_40:\n        /* \"#utility.yul\":10168:10172   */\n      0x00\n        /* \"#utility.yul\":10206:10208   */\n      0x20\n        /* \"#utility.yul\":10195:10204   */\n      dup3\n        /* \"#utility.yul\":10191:10209   */\n      add\n        /* \"#utility.yul\":10183:10209   */\n      swap1\n      pop\n        /* \"#utility.yul\":10255:10264   */\n      dup2\n        /* \"#utility.yul\":10249:10253   */\n      dup2\n        /* \"#utility.yul\":10245:10265   */\n      sub\n        /* \"#utility.yul\":10241:10242   */\n      0x00\n        /* \"#utility.yul\":10230:10239   */\n      dup4\n        /* \"#utility.yul\":10226:10243   */\n      add\n        /* \"#utility.yul\":10219:10266   */\n      mstore\n        /* \"#utility.yul\":10283:10414   */\n      tag_200\n        /* \"#utility.yul\":10409:10413   */\n      dup2\n        /* \"#utility.yul\":10283:10414   */\n      tag_89\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":10275:10414   */\n      swap1\n      pop\n        /* \"#utility.yul\":10002:10421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10427:10759   */\n    tag_43:\n        /* \"#utility.yul\":10548:10552   */\n      0x00\n        /* \"#utility.yul\":10586:10588   */\n      0x40\n        /* \"#utility.yul\":10575:10584   */\n      dup3\n        /* \"#utility.yul\":10571:10589   */\n      add\n        /* \"#utility.yul\":10563:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10599:10670   */\n      tag_202\n        /* \"#utility.yul\":10667:10668   */\n      0x00\n        /* \"#utility.yul\":10656:10665   */\n      dup4\n        /* \"#utility.yul\":10652:10669   */\n      add\n        /* \"#utility.yul\":10643:10649   */\n      dup6\n        /* \"#utility.yul\":10599:10670   */\n      tag_79\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":10680:10752   */\n      tag_203\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"#utility.yul\":10737:10746   */\n      dup4\n        /* \"#utility.yul\":10733:10751   */\n      add\n        /* \"#utility.yul\":10724:10730   */\n      dup5\n        /* \"#utility.yul\":10680:10752   */\n      tag_67\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":10427:10759   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10765:10917   */\n    tag_90:\n        /* \"#utility.yul\":10905:10909   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10901:10902   */\n      0x00\n        /* \"#utility.yul\":10893:10899   */\n      dup3\n        /* \"#utility.yul\":10889:10903   */\n      add\n        /* \"#utility.yul\":10882:10910   */\n      mstore\n        /* \"#utility.yul\":10765:10917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10923:11288   */\n    tag_91:\n        /* \"#utility.yul\":11065:11068   */\n      0x00\n        /* \"#utility.yul\":11086:11152   */\n      tag_206\n        /* \"#utility.yul\":11150:11151   */\n      0x02\n        /* \"#utility.yul\":11145:11148   */\n      dup4\n        /* \"#utility.yul\":11086:11152   */\n      tag_87\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":11079:11152   */\n      swap2\n      pop\n        /* \"#utility.yul\":11161:11254   */\n      tag_207\n        /* \"#utility.yul\":11250:11253   */\n      dup3\n        /* \"#utility.yul\":11161:11254   */\n      tag_90\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":11279:11281   */\n      0x20\n        /* \"#utility.yul\":11274:11277   */\n      dup3\n        /* \"#utility.yul\":11270:11282   */\n      add\n        /* \"#utility.yul\":11263:11282   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:11288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11294:11713   */\n    tag_53:\n        /* \"#utility.yul\":11460:11464   */\n      0x00\n        /* \"#utility.yul\":11498:11500   */\n      0x20\n        /* \"#utility.yul\":11487:11496   */\n      dup3\n        /* \"#utility.yul\":11483:11501   */\n      add\n        /* \"#utility.yul\":11475:11501   */\n      swap1\n      pop\n        /* \"#utility.yul\":11547:11556   */\n      dup2\n        /* \"#utility.yul\":11541:11545   */\n      dup2\n        /* \"#utility.yul\":11537:11557   */\n      sub\n        /* \"#utility.yul\":11533:11534   */\n      0x00\n        /* \"#utility.yul\":11522:11531   */\n      dup4\n        /* \"#utility.yul\":11518:11535   */\n      add\n        /* \"#utility.yul\":11511:11558   */\n      mstore\n        /* \"#utility.yul\":11575:11706   */\n      tag_209\n        /* \"#utility.yul\":11701:11705   */\n      dup2\n        /* \"#utility.yul\":11575:11706   */\n      tag_91\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":11567:11706   */\n      swap1\n      pop\n        /* \"#utility.yul\":11294:11713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220beda2ee0f3971509d32163911ebfe893d50d0e1569ce6c4dd4156879e2549bdc64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_404": {
									"entryPoint": null,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:6",
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610b4f380380610b4f833981810160405281019061003191906100c9565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100f4565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b6100a88161008e565b81146100b2575f80fd5b50565b5f815190506100c38161009f565b92915050565b5f602082840312156100de576100dd61006b565b5b5f6100eb848285016100b5565b91505092915050565b608051610a366101195f395f818160990152818161015a01526101ff0152610a365ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80638ebb36c714610038578063c31c9c0714610068575b5f80fd5b610052600480360381019061004d919061058b565b610086565b60405161005f9190610611565b60405180910390f35b6100706101fd565b60405161007d9190610685565b60405180910390f35b5f61009386843087610221565b6100be867f000000000000000000000000000000000000000000000000000000000000000086610373565b5f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018462ffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101b1919061077a565b6020604051808303815f875af11580156101cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f191906107a8565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610257939291906107e2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c19190610883565b5f604051808303815f865af19150503d805f81146102fa576040519150601f19603f3d011682016040523d82523d5f602084013e6102ff565b606091505b509150915081801561032c57505f8151148061032b57508080602001905181019061032a91906108ce565b5b5b61036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290610953565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103a7929190610971565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104119190610883565b5f604051808303815f865af19150503d805f811461044a576040519150601f19603f3d011682016040523d82523d5f602084013e61044f565b606091505b509150915081801561047c57505f8151148061047b57508080602001905181019061047a91906108ce565b5b5b6104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906109e2565b60405180910390fd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104ef826104c6565b9050919050565b6104ff816104e5565b8114610509575f80fd5b50565b5f8135905061051a816104f6565b92915050565b5f819050919050565b61053281610520565b811461053c575f80fd5b50565b5f8135905061054d81610529565b92915050565b5f62ffffff82169050919050565b61056a81610553565b8114610574575f80fd5b50565b5f8135905061058581610561565b92915050565b5f805f805f60a086880312156105a4576105a36104c2565b5b5f6105b18882890161050c565b95505060206105c28882890161050c565b94505060406105d38882890161053f565b93505060606105e48882890161050c565b92505060806105f588828901610577565b9150509295509295909350565b61060b81610520565b82525050565b5f6020820190506106245f830184610602565b92915050565b5f819050919050565b5f61064d610648610643846104c6565b61062a565b6104c6565b9050919050565b5f61065e82610633565b9050919050565b5f61066f82610654565b9050919050565b61067f81610665565b82525050565b5f6020820190506106985f830184610676565b92915050565b6106a7816104e5565b82525050565b6106b681610553565b82525050565b6106c581610520565b82525050565b6106d4816104c6565b82525050565b61010082015f8201516106ef5f85018261069e565b506020820151610702602085018261069e565b50604082015161071560408501826106ad565b506060820151610728606085018261069e565b50608082015161073b60808501826106bc565b5060a082015161074e60a08501826106bc565b5060c082015161076160c08501826106bc565b5060e082015161077460e08501826106cb565b50505050565b5f6101008201905061078e5f8301846106da565b92915050565b5f815190506107a281610529565b92915050565b5f602082840312156107bd576107bc6104c2565b5b5f6107ca84828501610794565b91505092915050565b6107dc816104e5565b82525050565b5f6060820190506107f55f8301866107d3565b61080260208301856107d3565b61080f6040830184610602565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b8381101561084857808201518184015260208101905061082d565b5f8484015250505050565b5f61085d82610817565b6108678185610821565b935061087781856020860161082b565b80840191505092915050565b5f61088e8284610853565b915081905092915050565b5f8115159050919050565b6108ad81610899565b81146108b7575f80fd5b50565b5f815190506108c8816108a4565b92915050565b5f602082840312156108e3576108e26104c2565b5b5f6108f0848285016108ba565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f61093d6003836108f9565b915061094882610909565b602082019050919050565b5f6020820190508181035f83015261096a81610931565b9050919050565b5f6040820190506109845f8301856107d3565b6109916020830184610602565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109cc6002836108f9565b91506109d782610998565b602082019050919050565b5f6020820190508181035f8301526109f9816109c0565b905091905056fea2646970667358221220beda2ee0f3971509d32163911ebfe893d50d0e1569ce6c4dd4156879e2549bdc64736f6c63430008170033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB4F CODESIZE SUB DUP1 PUSH2 0xB4F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0x8E JUMP JUMPDEST DUP2 EQ PUSH2 0xB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC3 DUP2 PUSH2 0x9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE JUMPI PUSH2 0xDD PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB DUP5 DUP3 DUP6 ADD PUSH2 0xB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xA36 PUSH2 0x119 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x99 ADD MSTORE DUP2 DUP2 PUSH2 0x15A ADD MSTORE PUSH2 0x1FF ADD MSTORE PUSH2 0xA36 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EBB36C7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x93 DUP7 DUP5 ADDRESS DUP8 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xBE DUP7 PUSH32 0x0 DUP7 PUSH2 0x373 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x257 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x32C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x32B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x362 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3A7 SWAP3 SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x47C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x47B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4EF DUP3 PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x509 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51A DUP2 PUSH2 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x520 JUMP JUMPDEST DUP2 EQ PUSH2 0x53C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54D DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x553 JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x585 DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5A4 JUMPI PUSH2 0x5A3 PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B1 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x5C2 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5D3 DUP9 DUP3 DUP10 ADD PUSH2 0x53F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x5E4 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x5F5 DUP9 DUP3 DUP10 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x624 PUSH0 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64D PUSH2 0x648 PUSH2 0x643 DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65E DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x66F DUP3 PUSH2 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x665 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x698 PUSH0 DUP4 ADD DUP5 PUSH2 0x676 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A7 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6B6 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x6EF PUSH0 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x702 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x715 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x728 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x73B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x74E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x761 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x774 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x78E PUSH0 DUP4 ADD DUP5 PUSH2 0x6DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A2 DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BC PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CA DUP5 DUP3 DUP6 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7F5 PUSH0 DUP4 ADD DUP7 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x802 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x848 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85D DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x867 DUP2 DUP6 PUSH2 0x821 JUMP JUMPDEST SWAP4 POP PUSH2 0x877 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x82B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88E DUP3 DUP5 PUSH2 0x853 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD DUP2 PUSH2 0x899 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8C8 DUP2 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH2 0x8E2 PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F0 DUP5 DUP3 DUP6 ADD PUSH2 0x8BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x93D PUSH1 0x3 DUP4 PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x948 DUP3 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x96A DUP2 PUSH2 0x931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x984 PUSH0 DUP4 ADD DUP6 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9CC PUSH1 0x2 DUP4 PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D7 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDA 0x2E 0xE0 RETURN SWAP8 ISZERO MULMOD 0xD3 0x21 PUSH4 0x911EBFE8 SWAP4 0xD5 0xD 0xE ISZERO PUSH10 0xCE6C4DD4156879E2549B 0xDC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "306:1251:5:-:0;;;403:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:11;446:37;;;;;;;;;;403:87;306:1251;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;306:1251:5:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@safeApprove_335": {
									"entryPoint": 883,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 545,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapExactInputSingle_468": {
									"entryPoint": 134,
									"id": 468,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@swapRouter_392": {
									"entryPoint": 509,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint24": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11716:6",
										"nodeType": "YulBlock",
										"src": "0:11716:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1241:47:6",
													"nodeType": "YulBlock",
													"src": "1241:47:6",
													"statements": [
														{
															"nativeSrc": "1251:31:6",
															"nodeType": "YulAssignment",
															"src": "1251:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1266:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1266:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1273:8:6",
																		"nodeType": "YulLiteral",
																		"src": "1273:8:6",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1262:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:6"
																},
																"nativeSrc": "1262:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1262:20:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1251:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "1197:91:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1223:5:6",
														"nodeType": "YulTypedName",
														"src": "1223:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1233:7:6",
														"nodeType": "YulTypedName",
														"src": "1233:7:6",
														"type": ""
													}
												],
												"src": "1197:91:6"
											},
											{
												"body": {
													"nativeSrc": "1336:78:6",
													"nodeType": "YulBlock",
													"src": "1336:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1392:16:6",
																"nodeType": "YulBlock",
																"src": "1392:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1401:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1401:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1404:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:6"
																			},
																			"nativeSrc": "1394:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1394:12:6"
																		},
																		"nativeSrc": "1394:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1394:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1359:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1359:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1383:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1383:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "1366:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "1366:16:6"
																				},
																				"nativeSrc": "1366:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1366:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1356:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1356:2:6"
																		},
																		"nativeSrc": "1356:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1349:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1349:6:6"
																},
																"nativeSrc": "1349:42:6",
																"nodeType": "YulFunctionCall",
																"src": "1349:42:6"
															},
															"nativeSrc": "1346:62:6",
															"nodeType": "YulIf",
															"src": "1346:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "1294:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1329:5:6",
														"nodeType": "YulTypedName",
														"src": "1329:5:6",
														"type": ""
													}
												],
												"src": "1294:120:6"
											},
											{
												"body": {
													"nativeSrc": "1471:86:6",
													"nodeType": "YulBlock",
													"src": "1471:86:6",
													"statements": [
														{
															"nativeSrc": "1481:29:6",
															"nodeType": "YulAssignment",
															"src": "1481:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1503:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1490:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1490:12:6"
																},
																"nativeSrc": "1490:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1490:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1481:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1481:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1545:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1545:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "1519:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "1519:25:6"
																},
																"nativeSrc": "1519:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1519:32:6"
															},
															"nativeSrc": "1519:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "1519:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "1420:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1449:6:6",
														"nodeType": "YulTypedName",
														"src": "1449:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1457:3:6",
														"nodeType": "YulTypedName",
														"src": "1457:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1465:5:6",
														"nodeType": "YulTypedName",
														"src": "1465:5:6",
														"type": ""
													}
												],
												"src": "1420:137:6"
											},
											{
												"body": {
													"nativeSrc": "1696:776:6",
													"nodeType": "YulBlock",
													"src": "1696:776:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1743:83:6",
																"nodeType": "YulBlock",
																"src": "1743:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1745:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1745:77:6"
																			},
																			"nativeSrc": "1745:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1745:79:6"
																		},
																		"nativeSrc": "1745:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1745:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1717:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1717:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1726:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1713:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:6"
																		},
																		"nativeSrc": "1713:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1713:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1738:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1738:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1709:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:6"
																},
																"nativeSrc": "1709:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:6"
															},
															"nativeSrc": "1706:120:6",
															"nodeType": "YulIf",
															"src": "1706:120:6"
														},
														{
															"nativeSrc": "1836:117:6",
															"nodeType": "YulBlock",
															"src": "1836:117:6",
															"statements": [
																{
																	"nativeSrc": "1851:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1851:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1865:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1855:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1855:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1880:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1880:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1915:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1915:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1926:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1926:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1911:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1911:3:6"
																				},
																				"nativeSrc": "1911:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1911:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1935:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1935:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1890:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1890:20:6"
																		},
																		"nativeSrc": "1890:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1890:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1880:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1880:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1963:118:6",
															"nodeType": "YulBlock",
															"src": "1963:118:6",
															"statements": [
																{
																	"nativeSrc": "1978:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1982:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2008:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2008:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2043:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2043:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2054:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2054:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2039:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2039:3:6"
																				},
																				"nativeSrc": "2039:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2039:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2018:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2018:20:6"
																		},
																		"nativeSrc": "2018:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2008:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2008:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2091:118:6",
															"nodeType": "YulBlock",
															"src": "2091:118:6",
															"statements": [
																{
																	"nativeSrc": "2106:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2106:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2120:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2110:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2110:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2136:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2136:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2171:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2171:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2182:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2182:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:6"
																				},
																				"nativeSrc": "2167:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2146:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2146:20:6"
																		},
																		"nativeSrc": "2146:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2136:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2136:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2219:118:6",
															"nodeType": "YulBlock",
															"src": "2219:118:6",
															"statements": [
																{
																	"nativeSrc": "2234:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2234:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2238:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2238:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2264:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2264:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2299:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2299:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:6"
																				},
																				"nativeSrc": "2295:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2319:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2319:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2274:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2274:20:6"
																		},
																		"nativeSrc": "2274:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2264:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2264:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2347:118:6",
															"nodeType": "YulBlock",
															"src": "2347:118:6",
															"statements": [
																{
																	"nativeSrc": "2362:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2362:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2376:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2376:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2366:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2366:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2393:62:6",
																	"nodeType": "YulAssignment",
																	"src": "2393:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2427:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2427:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2438:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2438:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2423:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:6"
																				},
																				"nativeSrc": "2423:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2423:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2447:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2447:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "2403:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "2403:19:6"
																		},
																		"nativeSrc": "2403:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2393:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2393:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint24",
												"nativeSrc": "1563:909:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1634:9:6",
														"nodeType": "YulTypedName",
														"src": "1634:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1645:7:6",
														"nodeType": "YulTypedName",
														"src": "1645:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1657:6:6",
														"nodeType": "YulTypedName",
														"src": "1657:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1665:6:6",
														"nodeType": "YulTypedName",
														"src": "1665:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1673:6:6",
														"nodeType": "YulTypedName",
														"src": "1673:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1681:6:6",
														"nodeType": "YulTypedName",
														"src": "1681:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1689:6:6",
														"nodeType": "YulTypedName",
														"src": "1689:6:6",
														"type": ""
													}
												],
												"src": "1563:909:6"
											},
											{
												"body": {
													"nativeSrc": "2543:53:6",
													"nodeType": "YulBlock",
													"src": "2543:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2560:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2560:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2583:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2565:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2565:17:6"
																		},
																		"nativeSrc": "2565:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:6"
																},
																"nativeSrc": "2553:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2553:37:6"
															},
															"nativeSrc": "2553:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2553:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2478:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:6",
														"nodeType": "YulTypedName",
														"src": "2531:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2538:3:6",
														"nodeType": "YulTypedName",
														"src": "2538:3:6",
														"type": ""
													}
												],
												"src": "2478:118:6"
											},
											{
												"body": {
													"nativeSrc": "2700:124:6",
													"nodeType": "YulBlock",
													"src": "2700:124:6",
													"statements": [
														{
															"nativeSrc": "2710:26:6",
															"nodeType": "YulAssignment",
															"src": "2710:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2722:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2733:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2718:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:6"
																},
																"nativeSrc": "2718:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2718:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2710:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2710:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2790:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2790:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2803:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2799:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:6"
																		},
																		"nativeSrc": "2799:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2746:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2746:43:6"
																},
																"nativeSrc": "2746:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2746:71:6"
															},
															"nativeSrc": "2746:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2746:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2602:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:6",
														"nodeType": "YulTypedName",
														"src": "2672:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2684:6:6",
														"nodeType": "YulTypedName",
														"src": "2684:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2695:4:6",
														"nodeType": "YulTypedName",
														"src": "2695:4:6",
														"type": ""
													}
												],
												"src": "2602:222:6"
											},
											{
												"body": {
													"nativeSrc": "2862:28:6",
													"nodeType": "YulBlock",
													"src": "2862:28:6",
													"statements": [
														{
															"nativeSrc": "2872:12:6",
															"nodeType": "YulAssignment",
															"src": "2872:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2879:5:6",
																"nodeType": "YulIdentifier",
																"src": "2879:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2830:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2848:5:6",
														"nodeType": "YulTypedName",
														"src": "2848:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2858:3:6",
														"nodeType": "YulTypedName",
														"src": "2858:3:6",
														"type": ""
													}
												],
												"src": "2830:60:6"
											},
											{
												"body": {
													"nativeSrc": "2956:82:6",
													"nodeType": "YulBlock",
													"src": "2956:82:6",
													"statements": [
														{
															"nativeSrc": "2966:66:6",
															"nodeType": "YulAssignment",
															"src": "2966:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3024:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3024:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3006:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3006:17:6"
																				},
																				"nativeSrc": "3006:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3006:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2997:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2997:8:6"
																		},
																		"nativeSrc": "2997:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2997:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2979:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2979:17:6"
																},
																"nativeSrc": "2979:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2979:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2966:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2966:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2896:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2946:9:6",
														"nodeType": "YulTypedName",
														"src": "2946:9:6",
														"type": ""
													}
												],
												"src": "2896:142:6"
											},
											{
												"body": {
													"nativeSrc": "3104:66:6",
													"nodeType": "YulBlock",
													"src": "3104:66:6",
													"statements": [
														{
															"nativeSrc": "3114:50:6",
															"nodeType": "YulAssignment",
															"src": "3114:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3158:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3158:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3127:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3127:30:6"
																},
																"nativeSrc": "3127:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3127:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3114:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3114:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3044:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3084:5:6",
														"nodeType": "YulTypedName",
														"src": "3084:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3094:9:6",
														"nodeType": "YulTypedName",
														"src": "3094:9:6",
														"type": ""
													}
												],
												"src": "3044:126:6"
											},
											{
												"body": {
													"nativeSrc": "3255:66:6",
													"nodeType": "YulBlock",
													"src": "3255:66:6",
													"statements": [
														{
															"nativeSrc": "3265:50:6",
															"nodeType": "YulAssignment",
															"src": "3265:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3309:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3309:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3278:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3278:30:6"
																},
																"nativeSrc": "3278:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3278:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3265:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3265:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "3176:145:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3235:5:6",
														"nodeType": "YulTypedName",
														"src": "3235:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3245:9:6",
														"nodeType": "YulTypedName",
														"src": "3245:9:6",
														"type": ""
													}
												],
												"src": "3176:145:6"
											},
											{
												"body": {
													"nativeSrc": "3411:85:6",
													"nodeType": "YulBlock",
													"src": "3411:85:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3428:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3428:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3483:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "3433:49:6",
																			"nodeType": "YulIdentifier",
																			"src": "3433:49:6"
																		},
																		"nativeSrc": "3433:56:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3433:56:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:6"
																},
																"nativeSrc": "3421:69:6",
																"nodeType": "YulFunctionCall",
																"src": "3421:69:6"
															},
															"nativeSrc": "3421:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "3421:69:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "3327:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3399:5:6",
														"nodeType": "YulTypedName",
														"src": "3399:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3406:3:6",
														"nodeType": "YulTypedName",
														"src": "3406:3:6",
														"type": ""
													}
												],
												"src": "3327:169:6"
											},
											{
												"body": {
													"nativeSrc": "3619:143:6",
													"nodeType": "YulBlock",
													"src": "3619:143:6",
													"statements": [
														{
															"nativeSrc": "3629:26:6",
															"nodeType": "YulAssignment",
															"src": "3629:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3641:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3652:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3652:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3637:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:6"
																},
																"nativeSrc": "3637:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3637:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3629:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3728:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3752:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:6"
																		},
																		"nativeSrc": "3737:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3737:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "3665:62:6",
																	"nodeType": "YulIdentifier",
																	"src": "3665:62:6"
																},
																"nativeSrc": "3665:90:6",
																"nodeType": "YulFunctionCall",
																"src": "3665:90:6"
															},
															"nativeSrc": "3665:90:6",
															"nodeType": "YulExpressionStatement",
															"src": "3665:90:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "3502:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3591:9:6",
														"nodeType": "YulTypedName",
														"src": "3591:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3603:6:6",
														"nodeType": "YulTypedName",
														"src": "3603:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3614:4:6",
														"nodeType": "YulTypedName",
														"src": "3614:4:6",
														"type": ""
													}
												],
												"src": "3502:260:6"
											},
											{
												"body": {
													"nativeSrc": "3823:53:6",
													"nodeType": "YulBlock",
													"src": "3823:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3840:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3840:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3863:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3845:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3845:17:6"
																		},
																		"nativeSrc": "3845:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:6"
																},
																"nativeSrc": "3833:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3833:37:6"
															},
															"nativeSrc": "3833:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3833:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3768:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3811:5:6",
														"nodeType": "YulTypedName",
														"src": "3811:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3818:3:6",
														"nodeType": "YulTypedName",
														"src": "3818:3:6",
														"type": ""
													}
												],
												"src": "3768:108:6"
											},
											{
												"body": {
													"nativeSrc": "3935:52:6",
													"nodeType": "YulBlock",
													"src": "3935:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3952:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3952:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3974:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3974:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3957:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "3957:16:6"
																		},
																		"nativeSrc": "3957:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3945:6:6"
																},
																"nativeSrc": "3945:36:6",
																"nodeType": "YulFunctionCall",
																"src": "3945:36:6"
															},
															"nativeSrc": "3945:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "3945:36:6"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3882:105:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3923:5:6",
														"nodeType": "YulTypedName",
														"src": "3923:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3930:3:6",
														"nodeType": "YulTypedName",
														"src": "3930:3:6",
														"type": ""
													}
												],
												"src": "3882:105:6"
											},
											{
												"body": {
													"nativeSrc": "4048:53:6",
													"nodeType": "YulBlock",
													"src": "4048:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4065:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4065:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4088:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4088:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4070:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4070:17:6"
																		},
																		"nativeSrc": "4070:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4070:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4058:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:6"
																},
																"nativeSrc": "4058:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4058:37:6"
															},
															"nativeSrc": "4058:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4058:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3993:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4036:5:6",
														"nodeType": "YulTypedName",
														"src": "4036:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4043:3:6",
														"nodeType": "YulTypedName",
														"src": "4043:3:6",
														"type": ""
													}
												],
												"src": "3993:108:6"
											},
											{
												"body": {
													"nativeSrc": "4162:53:6",
													"nodeType": "YulBlock",
													"src": "4162:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4179:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4179:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4202:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "4184:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4184:17:6"
																		},
																		"nativeSrc": "4184:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4172:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:6"
																},
																"nativeSrc": "4172:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4172:37:6"
															},
															"nativeSrc": "4172:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4172:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "4107:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4150:5:6",
														"nodeType": "YulTypedName",
														"src": "4150:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4157:3:6",
														"nodeType": "YulTypedName",
														"src": "4157:3:6",
														"type": ""
													}
												],
												"src": "4107:108:6"
											},
											{
												"body": {
													"nativeSrc": "4459:1479:6",
													"nodeType": "YulBlock",
													"src": "4459:1479:6",
													"statements": [
														{
															"nativeSrc": "4469:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4469:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4485:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4485:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:6:6",
																		"nodeType": "YulLiteral",
																		"src": "4490:6:6",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:6"
																},
																"nativeSrc": "4481:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4481:16:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4473:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4473:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4507:167:6",
															"nodeType": "YulBlock",
															"src": "4507:167:6",
															"statements": [
																{
																	"nativeSrc": "4545:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4545:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4575:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4575:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4582:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4582:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4571:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4571:3:6"
																				},
																				"nativeSrc": "4571:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4571:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4565:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4565:5:6"
																		},
																		"nativeSrc": "4565:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4549:12:6",
																			"nodeType": "YulTypedName",
																			"src": "4549:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4635:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "4635:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4653:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4653:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4658:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4658:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4649:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4649:3:6"
																				},
																				"nativeSrc": "4649:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4649:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4601:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "4601:33:6"
																		},
																		"nativeSrc": "4601:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:63:6"
																	},
																	"nativeSrc": "4601:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "4601:63:6"
																}
															]
														},
														{
															"nativeSrc": "4684:168:6",
															"nodeType": "YulBlock",
															"src": "4684:168:6",
															"statements": [
																{
																	"nativeSrc": "4723:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4723:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4753:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4753:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4760:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4760:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4749:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4749:3:6"
																				},
																				"nativeSrc": "4749:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4749:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4743:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4743:5:6"
																		},
																		"nativeSrc": "4743:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4743:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4727:12:6",
																			"nodeType": "YulTypedName",
																			"src": "4727:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4813:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "4813:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4831:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4831:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4836:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4836:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4827:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4827:3:6"
																				},
																				"nativeSrc": "4827:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4827:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4779:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "4779:33:6"
																		},
																		"nativeSrc": "4779:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:63:6"
																	},
																	"nativeSrc": "4779:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "4779:63:6"
																}
															]
														},
														{
															"nativeSrc": "4862:161:6",
															"nodeType": "YulBlock",
															"src": "4862:161:6",
															"statements": [
																{
																	"nativeSrc": "4896:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4896:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4926:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4926:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4933:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4933:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4922:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4922:3:6"
																				},
																				"nativeSrc": "4922:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4922:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4916:5:6"
																		},
																		"nativeSrc": "4916:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4900:12:6",
																			"nodeType": "YulTypedName",
																			"src": "4900:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4984:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "4984:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5002:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5002:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5007:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5007:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4998:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4998:3:6"
																				},
																				"nativeSrc": "4998:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4998:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4952:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4952:31:6"
																		},
																		"nativeSrc": "4952:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4952:61:6"
																	},
																	"nativeSrc": "4952:61:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "4952:61:6"
																}
															]
														},
														{
															"nativeSrc": "5033:169:6",
															"nodeType": "YulBlock",
															"src": "5033:169:6",
															"statements": [
																{
																	"nativeSrc": "5073:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5103:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5103:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5110:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5110:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5099:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5099:3:6"
																				},
																				"nativeSrc": "5099:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5099:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5093:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5093:5:6"
																		},
																		"nativeSrc": "5093:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5093:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5077:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5077:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5163:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5163:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5181:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5181:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5186:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5186:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5177:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5177:3:6"
																				},
																				"nativeSrc": "5177:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5177:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5129:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5129:33:6"
																		},
																		"nativeSrc": "5129:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:63:6"
																	},
																	"nativeSrc": "5129:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5129:63:6"
																}
															]
														},
														{
															"nativeSrc": "5212:168:6",
															"nodeType": "YulBlock",
															"src": "5212:168:6",
															"statements": [
																{
																	"nativeSrc": "5251:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5251:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5281:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5281:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5288:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5288:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5277:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5277:3:6"
																				},
																				"nativeSrc": "5277:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5277:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5271:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5271:5:6"
																		},
																		"nativeSrc": "5271:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5255:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5255:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5341:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5341:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5359:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5359:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5364:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5364:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5355:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5355:3:6"
																				},
																				"nativeSrc": "5355:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5355:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5307:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5307:33:6"
																		},
																		"nativeSrc": "5307:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:63:6"
																	},
																	"nativeSrc": "5307:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5307:63:6"
																}
															]
														},
														{
															"nativeSrc": "5390:168:6",
															"nodeType": "YulBlock",
															"src": "5390:168:6",
															"statements": [
																{
																	"nativeSrc": "5429:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5429:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5459:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5459:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5466:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5466:4:6",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5455:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5455:3:6"
																				},
																				"nativeSrc": "5455:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5455:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5449:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5449:5:6"
																		},
																		"nativeSrc": "5449:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5433:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5433:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5519:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5519:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5537:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5537:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5542:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5542:4:6",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5533:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:6"
																				},
																				"nativeSrc": "5533:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5533:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5485:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:33:6"
																		},
																		"nativeSrc": "5485:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:63:6"
																	},
																	"nativeSrc": "5485:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5485:63:6"
																}
															]
														},
														{
															"nativeSrc": "5568:176:6",
															"nodeType": "YulBlock",
															"src": "5568:176:6",
															"statements": [
																{
																	"nativeSrc": "5615:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5615:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5645:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5645:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5652:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5652:4:6",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5641:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5641:3:6"
																				},
																				"nativeSrc": "5641:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5641:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5635:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5635:5:6"
																		},
																		"nativeSrc": "5635:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5635:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5619:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5619:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5705:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5705:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5723:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5723:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5728:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5728:4:6",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5719:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5719:3:6"
																				},
																				"nativeSrc": "5719:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5719:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5671:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5671:33:6"
																		},
																		"nativeSrc": "5671:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5671:63:6"
																	},
																	"nativeSrc": "5671:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5671:63:6"
																}
															]
														},
														{
															"nativeSrc": "5754:177:6",
															"nodeType": "YulBlock",
															"src": "5754:177:6",
															"statements": [
																{
																	"nativeSrc": "5802:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5802:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5832:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5832:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5839:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5839:4:6",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5828:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5828:3:6"
																				},
																				"nativeSrc": "5828:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5828:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5822:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5822:5:6"
																		},
																		"nativeSrc": "5822:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5822:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5806:12:6",
																			"nodeType": "YulTypedName",
																			"src": "5806:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5892:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "5892:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5910:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5910:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5915:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5915:4:6",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5906:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5906:3:6"
																				},
																				"nativeSrc": "5906:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5906:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "5858:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "5858:33:6"
																		},
																		"nativeSrc": "5858:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5858:63:6"
																	},
																	"nativeSrc": "5858:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "5858:63:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "4315:1623:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4446:5:6",
														"nodeType": "YulTypedName",
														"src": "4446:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4453:3:6",
														"nodeType": "YulTypedName",
														"src": "4453:3:6",
														"type": ""
													}
												],
												"src": "4315:1623:6"
											},
											{
												"body": {
													"nativeSrc": "6120:203:6",
													"nodeType": "YulBlock",
													"src": "6120:203:6",
													"statements": [
														{
															"nativeSrc": "6130:27:6",
															"nodeType": "YulAssignment",
															"src": "6130:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6142:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6142:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6153:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6153:3:6",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6138:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6138:3:6"
																},
																"nativeSrc": "6138:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6138:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6130:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6130:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6289:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6289:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6302:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6302:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6313:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6313:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6298:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:6"
																		},
																		"nativeSrc": "6298:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6298:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "6167:121:6",
																	"nodeType": "YulIdentifier",
																	"src": "6167:121:6"
																},
																"nativeSrc": "6167:149:6",
																"nodeType": "YulFunctionCall",
																"src": "6167:149:6"
															},
															"nativeSrc": "6167:149:6",
															"nodeType": "YulExpressionStatement",
															"src": "6167:149:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "5944:379:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6092:9:6",
														"nodeType": "YulTypedName",
														"src": "6092:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6104:6:6",
														"nodeType": "YulTypedName",
														"src": "6104:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6115:4:6",
														"nodeType": "YulTypedName",
														"src": "6115:4:6",
														"type": ""
													}
												],
												"src": "5944:379:6"
											},
											{
												"body": {
													"nativeSrc": "6392:80:6",
													"nodeType": "YulBlock",
													"src": "6392:80:6",
													"statements": [
														{
															"nativeSrc": "6402:22:6",
															"nodeType": "YulAssignment",
															"src": "6402:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6417:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6411:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6411:5:6"
																},
																"nativeSrc": "6411:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6411:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6402:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6402:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6460:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6460:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6433:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "6433:26:6"
																},
																"nativeSrc": "6433:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6433:33:6"
															},
															"nativeSrc": "6433:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "6433:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6329:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6370:6:6",
														"nodeType": "YulTypedName",
														"src": "6370:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6378:3:6",
														"nodeType": "YulTypedName",
														"src": "6378:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6386:5:6",
														"nodeType": "YulTypedName",
														"src": "6386:5:6",
														"type": ""
													}
												],
												"src": "6329:143:6"
											},
											{
												"body": {
													"nativeSrc": "6555:274:6",
													"nodeType": "YulBlock",
													"src": "6555:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6601:83:6",
																"nodeType": "YulBlock",
																"src": "6601:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6603:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6603:77:6"
																			},
																			"nativeSrc": "6603:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6603:79:6"
																		},
																		"nativeSrc": "6603:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6603:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6576:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6576:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6585:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6572:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6572:3:6"
																		},
																		"nativeSrc": "6572:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6572:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6597:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6597:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6568:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6568:3:6"
																},
																"nativeSrc": "6568:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6568:32:6"
															},
															"nativeSrc": "6565:119:6",
															"nodeType": "YulIf",
															"src": "6565:119:6"
														},
														{
															"nativeSrc": "6694:128:6",
															"nodeType": "YulBlock",
															"src": "6694:128:6",
															"statements": [
																{
																	"nativeSrc": "6709:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6709:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6723:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6723:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6713:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6713:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6738:74:6",
																	"nodeType": "YulAssignment",
																	"src": "6738:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6784:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6784:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6795:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6780:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:6"
																				},
																				"nativeSrc": "6780:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6780:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6804:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6804:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6748:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "6748:31:6"
																		},
																		"nativeSrc": "6748:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6748:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6738:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6738:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6478:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6525:9:6",
														"nodeType": "YulTypedName",
														"src": "6525:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6536:7:6",
														"nodeType": "YulTypedName",
														"src": "6536:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6548:6:6",
														"nodeType": "YulTypedName",
														"src": "6548:6:6",
														"type": ""
													}
												],
												"src": "6478:351:6"
											},
											{
												"body": {
													"nativeSrc": "6900:53:6",
													"nodeType": "YulBlock",
													"src": "6900:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6917:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6940:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6940:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6922:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6922:17:6"
																		},
																		"nativeSrc": "6922:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6922:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6910:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:6"
																},
																"nativeSrc": "6910:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6910:37:6"
															},
															"nativeSrc": "6910:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6910:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6835:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6888:5:6",
														"nodeType": "YulTypedName",
														"src": "6888:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6895:3:6",
														"nodeType": "YulTypedName",
														"src": "6895:3:6",
														"type": ""
													}
												],
												"src": "6835:118:6"
											},
											{
												"body": {
													"nativeSrc": "7113:288:6",
													"nodeType": "YulBlock",
													"src": "7113:288:6",
													"statements": [
														{
															"nativeSrc": "7123:26:6",
															"nodeType": "YulAssignment",
															"src": "7123:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7135:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7135:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7146:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7131:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7131:3:6"
																},
																"nativeSrc": "7131:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7131:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7123:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7123:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7203:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7203:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7216:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7216:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7227:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7227:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7212:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7212:3:6"
																		},
																		"nativeSrc": "7212:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7159:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7159:43:6"
																},
																"nativeSrc": "7159:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7159:71:6"
															},
															"nativeSrc": "7159:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7159:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7284:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7284:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7297:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7308:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7308:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7293:3:6"
																		},
																		"nativeSrc": "7293:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7293:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7240:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7240:43:6"
																},
																"nativeSrc": "7240:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7240:72:6"
															},
															"nativeSrc": "7240:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7240:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7366:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7366:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7379:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7390:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7375:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:6"
																		},
																		"nativeSrc": "7375:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7375:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7322:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7322:43:6"
																},
																"nativeSrc": "7322:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7322:72:6"
															},
															"nativeSrc": "7322:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7322:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6959:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7069:9:6",
														"nodeType": "YulTypedName",
														"src": "7069:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7081:6:6",
														"nodeType": "YulTypedName",
														"src": "7081:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7089:6:6",
														"nodeType": "YulTypedName",
														"src": "7089:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7097:6:6",
														"nodeType": "YulTypedName",
														"src": "7097:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7108:4:6",
														"nodeType": "YulTypedName",
														"src": "7108:4:6",
														"type": ""
													}
												],
												"src": "6959:442:6"
											},
											{
												"body": {
													"nativeSrc": "7465:40:6",
													"nodeType": "YulBlock",
													"src": "7465:40:6",
													"statements": [
														{
															"nativeSrc": "7476:22:6",
															"nodeType": "YulAssignment",
															"src": "7476:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7492:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7492:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7486:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7486:5:6"
																},
																"nativeSrc": "7486:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7486:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7407:98:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7448:5:6",
														"nodeType": "YulTypedName",
														"src": "7448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7458:6:6",
														"nodeType": "YulTypedName",
														"src": "7458:6:6",
														"type": ""
													}
												],
												"src": "7407:98:6"
											},
											{
												"body": {
													"nativeSrc": "7624:34:6",
													"nodeType": "YulBlock",
													"src": "7624:34:6",
													"statements": [
														{
															"nativeSrc": "7634:18:6",
															"nodeType": "YulAssignment",
															"src": "7634:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "7649:3:6",
																"nodeType": "YulIdentifier",
																"src": "7649:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7634:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7634:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7511:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7596:3:6",
														"nodeType": "YulTypedName",
														"src": "7596:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7601:6:6",
														"nodeType": "YulTypedName",
														"src": "7601:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7612:11:6",
														"nodeType": "YulTypedName",
														"src": "7612:11:6",
														"type": ""
													}
												],
												"src": "7511:147:6"
											},
											{
												"body": {
													"nativeSrc": "7726:184:6",
													"nodeType": "YulBlock",
													"src": "7726:184:6",
													"statements": [
														{
															"nativeSrc": "7736:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7736:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7745:1:6",
																"nodeType": "YulLiteral",
																"src": "7745:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7740:1:6",
																	"nodeType": "YulTypedName",
																	"src": "7740:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7805:63:6",
																"nodeType": "YulBlock",
																"src": "7805:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "7830:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7830:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "7835:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "7835:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7826:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7826:3:6"
																					},
																					"nativeSrc": "7826:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7826:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "7849:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7849:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "7854:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "7854:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7845:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7845:3:6"
																							},
																							"nativeSrc": "7845:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7845:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7839:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7839:5:6"
																					},
																					"nativeSrc": "7839:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7839:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7819:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7819:6:6"
																			},
																			"nativeSrc": "7819:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7819:39:6"
																		},
																		"nativeSrc": "7819:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7819:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7766:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7766:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7769:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7763:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7763:2:6"
																},
																"nativeSrc": "7763:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7763:13:6"
															},
															"nativeSrc": "7755:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7777:19:6",
																"nodeType": "YulBlock",
																"src": "7777:19:6",
																"statements": [
																	{
																		"nativeSrc": "7779:15:6",
																		"nodeType": "YulAssignment",
																		"src": "7779:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7788:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "7788:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7791:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7791:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7784:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7784:3:6"
																			},
																			"nativeSrc": "7784:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7784:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7779:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "7779:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7759:3:6",
																"nodeType": "YulBlock",
																"src": "7759:3:6",
																"statements": []
															},
															"src": "7755:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7888:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7888:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7893:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7893:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7884:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:6"
																		},
																		"nativeSrc": "7884:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7884:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7902:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:6"
																},
																"nativeSrc": "7877:27:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:27:6"
															},
															"nativeSrc": "7877:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "7877:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7664:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7708:3:6",
														"nodeType": "YulTypedName",
														"src": "7708:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7713:3:6",
														"nodeType": "YulTypedName",
														"src": "7713:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7718:6:6",
														"nodeType": "YulTypedName",
														"src": "7718:6:6",
														"type": ""
													}
												],
												"src": "7664:246:6"
											},
											{
												"body": {
													"nativeSrc": "8024:278:6",
													"nodeType": "YulBlock",
													"src": "8024:278:6",
													"statements": [
														{
															"nativeSrc": "8034:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8034:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8080:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8080:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8048:31:6",
																	"nodeType": "YulIdentifier",
																	"src": "8048:31:6"
																},
																"nativeSrc": "8048:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8048:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8038:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8038:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8095:95:6",
															"nodeType": "YulAssignment",
															"src": "8095:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8178:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8178:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8183:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8183:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8102:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "8102:75:6"
																},
																"nativeSrc": "8102:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8102:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8095:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8238:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8238:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8245:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8245:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8234:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:6"
																		},
																		"nativeSrc": "8234:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8234:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8252:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8252:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8257:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8257:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8199:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "8199:34:6"
																},
																"nativeSrc": "8199:65:6",
																"nodeType": "YulFunctionCall",
																"src": "8199:65:6"
															},
															"nativeSrc": "8199:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "8199:65:6"
														},
														{
															"nativeSrc": "8273:23:6",
															"nodeType": "YulAssignment",
															"src": "8273:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8284:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8284:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8289:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8289:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8280:3:6"
																},
																"nativeSrc": "8280:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8280:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8273:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8273:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7916:386:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8005:5:6",
														"nodeType": "YulTypedName",
														"src": "8005:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8012:3:6",
														"nodeType": "YulTypedName",
														"src": "8012:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8020:3:6",
														"nodeType": "YulTypedName",
														"src": "8020:3:6",
														"type": ""
													}
												],
												"src": "7916:386:6"
											},
											{
												"body": {
													"nativeSrc": "8442:137:6",
													"nodeType": "YulBlock",
													"src": "8442:137:6",
													"statements": [
														{
															"nativeSrc": "8453:100:6",
															"nodeType": "YulAssignment",
															"src": "8453:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8540:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8540:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8549:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8549:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8460:79:6",
																	"nodeType": "YulIdentifier",
																	"src": "8460:79:6"
																},
																"nativeSrc": "8460:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8460:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8453:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:6"
																}
															]
														},
														{
															"nativeSrc": "8563:10:6",
															"nodeType": "YulAssignment",
															"src": "8563:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "8570:3:6",
																"nodeType": "YulIdentifier",
																"src": "8570:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8563:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8308:271:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8421:3:6",
														"nodeType": "YulTypedName",
														"src": "8421:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8427:6:6",
														"nodeType": "YulTypedName",
														"src": "8427:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8438:3:6",
														"nodeType": "YulTypedName",
														"src": "8438:3:6",
														"type": ""
													}
												],
												"src": "8308:271:6"
											},
											{
												"body": {
													"nativeSrc": "8627:48:6",
													"nodeType": "YulBlock",
													"src": "8627:48:6",
													"statements": [
														{
															"nativeSrc": "8637:32:6",
															"nodeType": "YulAssignment",
															"src": "8637:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8662:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8662:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8655:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8655:6:6"
																		},
																		"nativeSrc": "8655:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:6"
																},
																"nativeSrc": "8648:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8648:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8585:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8609:5:6",
														"nodeType": "YulTypedName",
														"src": "8609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8619:7:6",
														"nodeType": "YulTypedName",
														"src": "8619:7:6",
														"type": ""
													}
												],
												"src": "8585:90:6"
											},
											{
												"body": {
													"nativeSrc": "8721:76:6",
													"nodeType": "YulBlock",
													"src": "8721:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8775:16:6",
																"nodeType": "YulBlock",
																"src": "8775:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8784:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8784:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8787:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8787:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8777:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8777:6:6"
																			},
																			"nativeSrc": "8777:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8777:12:6"
																		},
																		"nativeSrc": "8777:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8777:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8744:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8744:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8766:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "8766:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8751:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "8751:14:6"
																				},
																				"nativeSrc": "8751:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8751:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8741:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8741:2:6"
																		},
																		"nativeSrc": "8741:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8741:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8734:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:6"
																},
																"nativeSrc": "8734:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8734:40:6"
															},
															"nativeSrc": "8731:60:6",
															"nodeType": "YulIf",
															"src": "8731:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8681:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8714:5:6",
														"nodeType": "YulTypedName",
														"src": "8714:5:6",
														"type": ""
													}
												],
												"src": "8681:116:6"
											},
											{
												"body": {
													"nativeSrc": "8863:77:6",
													"nodeType": "YulBlock",
													"src": "8863:77:6",
													"statements": [
														{
															"nativeSrc": "8873:22:6",
															"nodeType": "YulAssignment",
															"src": "8873:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8888:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8888:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8882:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8882:5:6"
																},
																"nativeSrc": "8882:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8882:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8873:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8873:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8928:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8928:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8904:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "8904:23:6"
																},
																"nativeSrc": "8904:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8904:30:6"
															},
															"nativeSrc": "8904:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8904:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8803:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8841:6:6",
														"nodeType": "YulTypedName",
														"src": "8841:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8849:3:6",
														"nodeType": "YulTypedName",
														"src": "8849:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8857:5:6",
														"nodeType": "YulTypedName",
														"src": "8857:5:6",
														"type": ""
													}
												],
												"src": "8803:137:6"
											},
											{
												"body": {
													"nativeSrc": "9020:271:6",
													"nodeType": "YulBlock",
													"src": "9020:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9066:83:6",
																"nodeType": "YulBlock",
																"src": "9066:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9068:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9068:77:6"
																			},
																			"nativeSrc": "9068:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9068:79:6"
																		},
																		"nativeSrc": "9068:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9068:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9041:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9041:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9050:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9050:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9037:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9037:3:6"
																		},
																		"nativeSrc": "9037:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9062:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9062:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9033:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9033:3:6"
																},
																"nativeSrc": "9033:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9033:32:6"
															},
															"nativeSrc": "9030:119:6",
															"nodeType": "YulIf",
															"src": "9030:119:6"
														},
														{
															"nativeSrc": "9159:125:6",
															"nodeType": "YulBlock",
															"src": "9159:125:6",
															"statements": [
																{
																	"nativeSrc": "9174:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9174:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9178:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9178:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9203:71:6",
																	"nodeType": "YulAssignment",
																	"src": "9203:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9246:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9246:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9257:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9257:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9242:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9242:3:6"
																				},
																				"nativeSrc": "9242:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9242:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9266:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9266:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9213:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "9213:28:6"
																		},
																		"nativeSrc": "9213:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9203:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9203:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8946:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8990:9:6",
														"nodeType": "YulTypedName",
														"src": "8990:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9001:7:6",
														"nodeType": "YulTypedName",
														"src": "9001:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9013:6:6",
														"nodeType": "YulTypedName",
														"src": "9013:6:6",
														"type": ""
													}
												],
												"src": "8946:345:6"
											},
											{
												"body": {
													"nativeSrc": "9393:73:6",
													"nodeType": "YulBlock",
													"src": "9393:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9410:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9415:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9415:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:6"
																},
																"nativeSrc": "9403:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9403:19:6"
															},
															"nativeSrc": "9403:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "9403:19:6"
														},
														{
															"nativeSrc": "9431:29:6",
															"nodeType": "YulAssignment",
															"src": "9431:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9450:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9450:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9455:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9455:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9446:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9446:3:6"
																},
																"nativeSrc": "9446:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9446:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9431:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9431:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9297:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9365:3:6",
														"nodeType": "YulTypedName",
														"src": "9365:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9370:6:6",
														"nodeType": "YulTypedName",
														"src": "9370:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9381:11:6",
														"nodeType": "YulTypedName",
														"src": "9381:11:6",
														"type": ""
													}
												],
												"src": "9297:169:6"
											},
											{
												"body": {
													"nativeSrc": "9578:47:6",
													"nodeType": "YulBlock",
													"src": "9578:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9600:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9600:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9608:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9608:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9596:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:6"
																		},
																		"nativeSrc": "9596:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:14:6"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "9612:5:6",
																		"nodeType": "YulLiteral",
																		"src": "9612:5:6",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:6"
																},
																"nativeSrc": "9589:29:6",
																"nodeType": "YulFunctionCall",
																"src": "9589:29:6"
															},
															"nativeSrc": "9589:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "9589:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "9472:153:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9570:6:6",
														"nodeType": "YulTypedName",
														"src": "9570:6:6",
														"type": ""
													}
												],
												"src": "9472:153:6"
											},
											{
												"body": {
													"nativeSrc": "9777:219:6",
													"nodeType": "YulBlock",
													"src": "9777:219:6",
													"statements": [
														{
															"nativeSrc": "9787:73:6",
															"nodeType": "YulAssignment",
															"src": "9787:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9853:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9853:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9858:1:6",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9794:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9794:58:6"
																},
																"nativeSrc": "9794:66:6",
																"nodeType": "YulFunctionCall",
																"src": "9794:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9787:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9958:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9958:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "9869:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9869:88:6"
																},
																"nativeSrc": "9869:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9869:93:6"
															},
															"nativeSrc": "9869:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9869:93:6"
														},
														{
															"nativeSrc": "9971:19:6",
															"nodeType": "YulAssignment",
															"src": "9971:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9982:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9982:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9987:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9987:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:6"
																},
																"nativeSrc": "9978:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9978:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9631:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9765:3:6",
														"nodeType": "YulTypedName",
														"src": "9765:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9773:3:6",
														"nodeType": "YulTypedName",
														"src": "9773:3:6",
														"type": ""
													}
												],
												"src": "9631:365:6"
											},
											{
												"body": {
													"nativeSrc": "10173:248:6",
													"nodeType": "YulBlock",
													"src": "10173:248:6",
													"statements": [
														{
															"nativeSrc": "10183:26:6",
															"nodeType": "YulAssignment",
															"src": "10183:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10195:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10195:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:6"
																},
																"nativeSrc": "10191:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10191:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10183:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10183:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10241:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10241:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10226:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10226:3:6"
																		},
																		"nativeSrc": "10226:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10226:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10249:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10249:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10255:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10245:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:6"
																		},
																		"nativeSrc": "10245:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10219:6:6"
																},
																"nativeSrc": "10219:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10219:47:6"
															},
															"nativeSrc": "10219:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10219:47:6"
														},
														{
															"nativeSrc": "10275:139:6",
															"nodeType": "YulAssignment",
															"src": "10275:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10409:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10409:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10283:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10283:124:6"
																},
																"nativeSrc": "10283:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10283:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10275:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10275:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10002:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10153:9:6",
														"nodeType": "YulTypedName",
														"src": "10153:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10168:4:6",
														"nodeType": "YulTypedName",
														"src": "10168:4:6",
														"type": ""
													}
												],
												"src": "10002:419:6"
											},
											{
												"body": {
													"nativeSrc": "10553:206:6",
													"nodeType": "YulBlock",
													"src": "10553:206:6",
													"statements": [
														{
															"nativeSrc": "10563:26:6",
															"nodeType": "YulAssignment",
															"src": "10563:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10575:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10575:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10586:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10586:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10571:3:6"
																},
																"nativeSrc": "10571:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10571:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10563:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10643:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10643:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10667:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10667:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:6"
																		},
																		"nativeSrc": "10652:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10599:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10599:43:6"
																},
																"nativeSrc": "10599:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10599:71:6"
															},
															"nativeSrc": "10599:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10599:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10724:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10724:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10748:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10733:3:6"
																		},
																		"nativeSrc": "10733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10733:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10680:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10680:43:6"
																},
																"nativeSrc": "10680:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10680:72:6"
															},
															"nativeSrc": "10680:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10680:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10427:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10517:9:6",
														"nodeType": "YulTypedName",
														"src": "10517:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10529:6:6",
														"nodeType": "YulTypedName",
														"src": "10529:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10537:6:6",
														"nodeType": "YulTypedName",
														"src": "10537:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10548:4:6",
														"nodeType": "YulTypedName",
														"src": "10548:4:6",
														"type": ""
													}
												],
												"src": "10427:332:6"
											},
											{
												"body": {
													"nativeSrc": "10871:46:6",
													"nodeType": "YulBlock",
													"src": "10871:46:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10893:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10893:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10901:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10901:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10889:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10889:3:6"
																		},
																		"nativeSrc": "10889:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10889:14:6"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "10905:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10905:4:6",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10882:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:6"
																},
																"nativeSrc": "10882:28:6",
																"nodeType": "YulFunctionCall",
																"src": "10882:28:6"
															},
															"nativeSrc": "10882:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "10882:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "10765:152:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10863:6:6",
														"nodeType": "YulTypedName",
														"src": "10863:6:6",
														"type": ""
													}
												],
												"src": "10765:152:6"
											},
											{
												"body": {
													"nativeSrc": "11069:219:6",
													"nodeType": "YulBlock",
													"src": "11069:219:6",
													"statements": [
														{
															"nativeSrc": "11079:73:6",
															"nodeType": "YulAssignment",
															"src": "11079:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11145:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11145:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11150:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11150:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11086:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11086:58:6"
																},
																"nativeSrc": "11086:66:6",
																"nodeType": "YulFunctionCall",
																"src": "11086:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11079:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11079:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11250:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11250:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "11161:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11161:88:6"
																},
																"nativeSrc": "11161:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11161:93:6"
															},
															"nativeSrc": "11161:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11161:93:6"
														},
														{
															"nativeSrc": "11263:19:6",
															"nodeType": "YulAssignment",
															"src": "11263:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11274:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11274:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11279:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11279:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11270:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11270:3:6"
																},
																"nativeSrc": "11270:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11270:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11263:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10923:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11057:3:6",
														"nodeType": "YulTypedName",
														"src": "11057:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11065:3:6",
														"nodeType": "YulTypedName",
														"src": "11065:3:6",
														"type": ""
													}
												],
												"src": "10923:365:6"
											},
											{
												"body": {
													"nativeSrc": "11465:248:6",
													"nodeType": "YulBlock",
													"src": "11465:248:6",
													"statements": [
														{
															"nativeSrc": "11475:26:6",
															"nodeType": "YulAssignment",
															"src": "11475:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11487:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11487:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11498:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11483:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11483:3:6"
																},
																"nativeSrc": "11483:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11483:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11475:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11475:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11522:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11533:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11533:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11518:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:6"
																		},
																		"nativeSrc": "11518:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11518:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11541:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11541:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11547:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11537:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11537:3:6"
																		},
																		"nativeSrc": "11537:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11537:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11511:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:6"
																},
																"nativeSrc": "11511:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11511:47:6"
															},
															"nativeSrc": "11511:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11511:47:6"
														},
														{
															"nativeSrc": "11567:139:6",
															"nodeType": "YulAssignment",
															"src": "11567:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11701:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11701:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11575:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11575:124:6"
																},
																"nativeSrc": "11575:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11575:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11567:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11567:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11294:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11445:9:6",
														"nodeType": "YulTypedName",
														"src": "11445:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11460:4:6",
														"nodeType": "YulTypedName",
														"src": "11460:4:6",
														"type": ""
													}
												],
												"src": "11294:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint24(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"392": [
									{
										"length": 32,
										"start": 153
									},
									{
										"length": 32,
										"start": 346
									},
									{
										"length": 32,
										"start": 511
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80638ebb36c714610038578063c31c9c0714610068575b5f80fd5b610052600480360381019061004d919061058b565b610086565b60405161005f9190610611565b60405180910390f35b6100706101fd565b60405161007d9190610685565b60405180910390f35b5f61009386843087610221565b6100be867f000000000000000000000000000000000000000000000000000000000000000086610373565b5f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018462ffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101b1919061077a565b6020604051808303815f875af11580156101cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f191906107a8565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610257939291906107e2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c19190610883565b5f604051808303815f865af19150503d805f81146102fa576040519150601f19603f3d011682016040523d82523d5f602084013e6102ff565b606091505b509150915081801561032c57505f8151148061032b57508080602001905181019061032a91906108ce565b5b5b61036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290610953565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103a7929190610971565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104119190610883565b5f604051808303815f865af19150503d805f811461044a576040519150601f19603f3d011682016040523d82523d5f602084013e61044f565b606091505b509150915081801561047c57505f8151148061047b57508080602001905181019061047a91906108ce565b5b5b6104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906109e2565b60405180910390fd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104ef826104c6565b9050919050565b6104ff816104e5565b8114610509575f80fd5b50565b5f8135905061051a816104f6565b92915050565b5f819050919050565b61053281610520565b811461053c575f80fd5b50565b5f8135905061054d81610529565b92915050565b5f62ffffff82169050919050565b61056a81610553565b8114610574575f80fd5b50565b5f8135905061058581610561565b92915050565b5f805f805f60a086880312156105a4576105a36104c2565b5b5f6105b18882890161050c565b95505060206105c28882890161050c565b94505060406105d38882890161053f565b93505060606105e48882890161050c565b92505060806105f588828901610577565b9150509295509295909350565b61060b81610520565b82525050565b5f6020820190506106245f830184610602565b92915050565b5f819050919050565b5f61064d610648610643846104c6565b61062a565b6104c6565b9050919050565b5f61065e82610633565b9050919050565b5f61066f82610654565b9050919050565b61067f81610665565b82525050565b5f6020820190506106985f830184610676565b92915050565b6106a7816104e5565b82525050565b6106b681610553565b82525050565b6106c581610520565b82525050565b6106d4816104c6565b82525050565b61010082015f8201516106ef5f85018261069e565b506020820151610702602085018261069e565b50604082015161071560408501826106ad565b506060820151610728606085018261069e565b50608082015161073b60808501826106bc565b5060a082015161074e60a08501826106bc565b5060c082015161076160c08501826106bc565b5060e082015161077460e08501826106cb565b50505050565b5f6101008201905061078e5f8301846106da565b92915050565b5f815190506107a281610529565b92915050565b5f602082840312156107bd576107bc6104c2565b5b5f6107ca84828501610794565b91505092915050565b6107dc816104e5565b82525050565b5f6060820190506107f55f8301866107d3565b61080260208301856107d3565b61080f6040830184610602565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b8381101561084857808201518184015260208101905061082d565b5f8484015250505050565b5f61085d82610817565b6108678185610821565b935061087781856020860161082b565b80840191505092915050565b5f61088e8284610853565b915081905092915050565b5f8115159050919050565b6108ad81610899565b81146108b7575f80fd5b50565b5f815190506108c8816108a4565b92915050565b5f602082840312156108e3576108e26104c2565b5b5f6108f0848285016108ba565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f61093d6003836108f9565b915061094882610909565b602082019050919050565b5f6020820190508181035f83015261096a81610931565b9050919050565b5f6040820190506109845f8301856107d3565b6109916020830184610602565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f6109cc6002836108f9565b91506109d782610998565b602082019050919050565b5f6020820190508181035f8301526109f9816109c0565b905091905056fea2646970667358221220beda2ee0f3971509d32163911ebfe893d50d0e1569ce6c4dd4156879e2549bdc64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EBB36C7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x93 DUP7 DUP5 ADDRESS DUP8 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xBE DUP7 PUSH32 0x0 DUP7 PUSH2 0x373 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x257 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x32C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x32B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x362 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3A7 SWAP3 SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x47C JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x47B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4EF DUP3 PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x509 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51A DUP2 PUSH2 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x520 JUMP JUMPDEST DUP2 EQ PUSH2 0x53C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54D DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x553 JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x585 DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5A4 JUMPI PUSH2 0x5A3 PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B1 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x5C2 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5D3 DUP9 DUP3 DUP10 ADD PUSH2 0x53F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x5E4 DUP9 DUP3 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x5F5 DUP9 DUP3 DUP10 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x624 PUSH0 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64D PUSH2 0x648 PUSH2 0x643 DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65E DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x66F DUP3 PUSH2 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x665 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x698 PUSH0 DUP4 ADD DUP5 PUSH2 0x676 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A7 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6B6 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x6EF PUSH0 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x702 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x715 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x728 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x73B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x74E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x761 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x774 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x6CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x78E PUSH0 DUP4 ADD DUP5 PUSH2 0x6DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A2 DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BC PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CA DUP5 DUP3 DUP6 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7F5 PUSH0 DUP4 ADD DUP7 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x802 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x848 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85D DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x867 DUP2 DUP6 PUSH2 0x821 JUMP JUMPDEST SWAP4 POP PUSH2 0x877 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x82B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88E DUP3 DUP5 PUSH2 0x853 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD DUP2 PUSH2 0x899 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8C8 DUP2 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH2 0x8E2 PUSH2 0x4C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F0 DUP5 DUP3 DUP6 ADD PUSH2 0x8BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x93D PUSH1 0x3 DUP4 PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x948 DUP3 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x96A DUP2 PUSH2 0x931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x984 PUSH0 DUP4 ADD DUP6 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9CC PUSH1 0x2 DUP4 PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D7 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDA 0x2E 0xE0 RETURN SWAP8 ISZERO MULMOD 0xD3 0x21 PUSH4 0x911EBFE8 SWAP4 0xD5 0xD 0xE ISZERO PUSH10 0xCE6C4DD4156879E2549B 0xDC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "306:1251:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:970;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;585:970;721:17;822:76;854:7;863:9;882:4;889:8;822:31;:76::i;:::-;983:66;1010:7;1027:10;1040:8;983:26;:66::i;:::-;1104:48;1155:306;;;;;;;;1213:7;1155:306;;;;;;1244:8;1155:306;;;;;;1271:7;1155:306;;;;;;1303:9;1155:306;;;;;;1336:15;1155:306;;;;1375:8;1155:306;;;;1415:1;1155:306;;;;1449:1;1155:306;;;;;1104:357;;1513:10;:27;;;1541:6;1513:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1501:47;;740:815;585:970;;;;;;;:::o;357:39::-;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:91::-;1233:7;1273:8;1266:5;1262:20;1251:31;;1197:91;;;:::o;1294:120::-;1366:23;1383:5;1366:23;:::i;:::-;1359:5;1356:34;1346:62;;1404:1;1401;1394:12;1346:62;1294:120;:::o;1420:137::-;1465:5;1503:6;1490:20;1481:29;;1519:32;1545:5;1519:32;:::i;:::-;1420:137;;;;:::o;1563:909::-;1657:6;1665;1673;1681;1689;1738:3;1726:9;1717:7;1713:23;1709:33;1706:120;;;1745:79;;:::i;:::-;1706:120;1865:1;1890:53;1935:7;1926:6;1915:9;1911:22;1890:53;:::i;:::-;1880:63;;1836:117;1992:2;2018:53;2063:7;2054:6;2043:9;2039:22;2018:53;:::i;:::-;2008:63;;1963:118;2120:2;2146:53;2191:7;2182:6;2171:9;2167:22;2146:53;:::i;:::-;2136:63;;2091:118;2248:2;2274:53;2319:7;2310:6;2299:9;2295:22;2274:53;:::i;:::-;2264:63;;2219:118;2376:3;2403:52;2447:7;2438:6;2427:9;2423:22;2403:52;:::i;:::-;2393:62;;2347:118;1563:909;;;;;;;;:::o;2478:118::-;2565:24;2583:5;2565:24;:::i;:::-;2560:3;2553:37;2478:118;;:::o;2602:222::-;2695:4;2733:2;2722:9;2718:18;2710:26;;2746:71;2814:1;2803:9;2799:17;2790:6;2746:71;:::i;:::-;2602:222;;;;:::o;2830:60::-;2858:3;2879:5;2872:12;;2830:60;;;:::o;2896:142::-;2946:9;2979:53;2997:34;3006:24;3024:5;3006:24;:::i;:::-;2997:34;:::i;:::-;2979:53;:::i;:::-;2966:66;;2896:142;;;:::o;3044:126::-;3094:9;3127:37;3158:5;3127:37;:::i;:::-;3114:50;;3044:126;;;:::o;3176:145::-;3245:9;3278:37;3309:5;3278:37;:::i;:::-;3265:50;;3176:145;;;:::o;3327:169::-;3433:56;3483:5;3433:56;:::i;:::-;3428:3;3421:69;3327:169;;:::o;3502:260::-;3614:4;3652:2;3641:9;3637:18;3629:26;;3665:90;3752:1;3741:9;3737:17;3728:6;3665:90;:::i;:::-;3502:260;;;;:::o;3768:108::-;3845:24;3863:5;3845:24;:::i;:::-;3840:3;3833:37;3768:108;;:::o;3882:105::-;3957:23;3974:5;3957:23;:::i;:::-;3952:3;3945:36;3882:105;;:::o;3993:108::-;4070:24;4088:5;4070:24;:::i;:::-;4065:3;4058:37;3993:108;;:::o;4107:::-;4184:24;4202:5;4184:24;:::i;:::-;4179:3;4172:37;4107:108;;:::o;4315:1623::-;4490:6;4485:3;4481:16;4582:4;4575:5;4571:16;4565:23;4601:63;4658:4;4653:3;4649:14;4635:12;4601:63;:::i;:::-;4507:167;4760:4;4753:5;4749:16;4743:23;4779:63;4836:4;4831:3;4827:14;4813:12;4779:63;:::i;:::-;4684:168;4933:4;4926:5;4922:16;4916:23;4952:61;5007:4;5002:3;4998:14;4984:12;4952:61;:::i;:::-;4862:161;5110:4;5103:5;5099:16;5093:23;5129:63;5186:4;5181:3;5177:14;5163:12;5129:63;:::i;:::-;5033:169;5288:4;5281:5;5277:16;5271:23;5307:63;5364:4;5359:3;5355:14;5341:12;5307:63;:::i;:::-;5212:168;5466:4;5459:5;5455:16;5449:23;5485:63;5542:4;5537:3;5533:14;5519:12;5485:63;:::i;:::-;5390:168;5652:4;5645:5;5641:16;5635:23;5671:63;5728:4;5723:3;5719:14;5705:12;5671:63;:::i;:::-;5568:176;5839:4;5832:5;5828:16;5822:23;5858:63;5915:4;5910:3;5906:14;5892:12;5858:63;:::i;:::-;5754:177;4459:1479;4315:1623;;:::o;5944:379::-;6115:4;6153:3;6142:9;6138:19;6130:27;;6167:149;6313:1;6302:9;6298:17;6289:6;6167:149;:::i;:::-;5944:379;;;;:::o;6329:143::-;6386:5;6417:6;6411:13;6402:22;;6433:33;6460:5;6433:33;:::i;:::-;6329:143;;;;:::o;6478:351::-;6548:6;6597:2;6585:9;6576:7;6572:23;6568:32;6565:119;;;6603:79;;:::i;:::-;6565:119;6723:1;6748:64;6804:7;6795:6;6784:9;6780:22;6748:64;:::i;:::-;6738:74;;6694:128;6478:351;;;;:::o;6835:118::-;6922:24;6940:5;6922:24;:::i;:::-;6917:3;6910:37;6835:118;;:::o;6959:442::-;7108:4;7146:2;7135:9;7131:18;7123:26;;7159:71;7227:1;7216:9;7212:17;7203:6;7159:71;:::i;:::-;7240:72;7308:2;7297:9;7293:18;7284:6;7240:72;:::i;:::-;7322;7390:2;7379:9;7375:18;7366:6;7322:72;:::i;:::-;6959:442;;;;;;:::o;7407:98::-;7458:6;7492:5;7486:12;7476:22;;7407:98;;;:::o;7511:147::-;7612:11;7649:3;7634:18;;7511:147;;;;:::o;7664:246::-;7745:1;7755:113;7769:6;7766:1;7763:13;7755:113;;;7854:1;7849:3;7845:11;7839:18;7835:1;7830:3;7826:11;7819:39;7791:2;7788:1;7784:10;7779:15;;7755:113;;;7902:1;7893:6;7888:3;7884:16;7877:27;7726:184;7664:246;;;:::o;7916:386::-;8020:3;8048:38;8080:5;8048:38;:::i;:::-;8102:88;8183:6;8178:3;8102:88;:::i;:::-;8095:95;;8199:65;8257:6;8252:3;8245:4;8238:5;8234:16;8199:65;:::i;:::-;8289:6;8284:3;8280:16;8273:23;;8024:278;7916:386;;;;:::o;8308:271::-;8438:3;8460:93;8549:3;8540:6;8460:93;:::i;:::-;8453:100;;8570:3;8563:10;;8308:271;;;;:::o;8585:90::-;8619:7;8662:5;8655:13;8648:21;8637:32;;8585:90;;;:::o;8681:116::-;8751:21;8766:5;8751:21;:::i;:::-;8744:5;8741:32;8731:60;;8787:1;8784;8777:12;8731:60;8681:116;:::o;8803:137::-;8857:5;8888:6;8882:13;8873:22;;8904:30;8928:5;8904:30;:::i;:::-;8803:137;;;;:::o;8946:345::-;9013:6;9062:2;9050:9;9041:7;9037:23;9033:32;9030:119;;;9068:79;;:::i;:::-;9030:119;9188:1;9213:61;9266:7;9257:6;9246:9;9242:22;9213:61;:::i;:::-;9203:71;;9159:125;8946:345;;;;:::o;9297:169::-;9381:11;9415:6;9410:3;9403:19;9455:4;9450:3;9446:14;9431:29;;9297:169;;;;:::o;9472:153::-;9612:5;9608:1;9600:6;9596:14;9589:29;9472:153;:::o;9631:365::-;9773:3;9794:66;9858:1;9853:3;9794:66;:::i;:::-;9787:73;;9869:93;9958:3;9869:93;:::i;:::-;9987:2;9982:3;9978:12;9971:19;;9631:365;;;:::o;10002:419::-;10168:4;10206:2;10195:9;10191:18;10183:26;;10255:9;10249:4;10245:20;10241:1;10230:9;10226:17;10219:47;10283:131;10409:4;10283:131;:::i;:::-;10275:139;;10002:419;;;:::o;10427:332::-;10548:4;10586:2;10575:9;10571:18;10563:26;;10599:71;10667:1;10656:9;10652:17;10643:6;10599:71;:::i;:::-;10680:72;10748:2;10737:9;10733:18;10724:6;10680:72;:::i;:::-;10427:332;;;;;:::o;10765:152::-;10905:4;10901:1;10893:6;10889:14;10882:28;10765:152;:::o;10923:365::-;11065:3;11086:66;11150:1;11145:3;11086:66;:::i;:::-;11079:73;;11161:93;11250:3;11161:93;:::i;:::-;11279:2;11274:3;11270:12;11263:19;;10923:365;;;:::o;11294:419::-;11460:4;11498:2;11487:9;11483:18;11475:26;;11547:9;11541:4;11537:20;11533:1;11522:9;11518:17;11511:47;11575:131;11701:4;11575:131;:::i;:::-;11567:139;;11294:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "522800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"swapExactInputSingle(address,address,uint256,address,uint24)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 403,
									"end": 490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 403,
									"end": 490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 471,
									"end": 482,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 446,
									"end": 483,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 446,
									"end": 483,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 446,
									"end": 483,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 446,
									"end": 483,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 403,
									"end": 490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "392"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 1557,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220beda2ee0f3971509d32163911ebfe893d50d0e1569ce6c4dd4156879e2549bdc64736f6c63430008170033",
									".code": [
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "8EBB36C7"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "C31C9C07"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 306,
											"end": 1557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 585,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 854,
											"end": 861,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 882,
											"end": 886,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 889,
											"end": 897,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 822,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 822,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 822,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1010,
											"end": 1017,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1037,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 1040,
											"end": 1048,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 983,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1252,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1312,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1351,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1523,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "414BF389"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1513,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1513,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1513,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 740,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 1555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 357,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 1266,
											"end": 1271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1383,
											"end": 1388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1366,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1356,
											"end": 1390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1519,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1745,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1745,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1706,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1890,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1890,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2018,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2018,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2146,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2146,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2319,
											"end": 2326,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2274,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2436,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2403,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 2472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2565,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2746,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2746,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2890,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3038,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2896,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2997,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3024,
											"end": 3029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3006,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3006,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2997,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3031,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2997,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2979,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3032,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2979,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 3038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3044,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3127,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3127,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3321,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3176,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3278,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3278,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3496,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3327,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3483,
											"end": 3488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3433,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3489,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3433,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3665,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3665,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3876,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3768,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3863,
											"end": 3868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3845,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3869,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3845,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 3870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3987,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3882,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3957,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3993,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4070,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4215,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4107,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4202,
											"end": 4207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4184,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 5938,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4315,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4656,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4635,
											"end": 4647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4601,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4766,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4779,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5002,
											"end": 5005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4952,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 5013,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4952,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5103,
											"end": 5108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5129,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5129,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5281,
											"end": 5286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5359,
											"end": 5362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5307,
											"end": 5370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5370,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5307,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5459,
											"end": 5464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5537,
											"end": 5540,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5485,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5723,
											"end": 5726,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5719,
											"end": 5733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5671,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5734,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5671,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5839,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5832,
											"end": 5837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5910,
											"end": 5913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5858,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5858,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 5938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 5938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 5938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 5938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6156,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6142,
											"end": 6151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6167,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6167,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6460,
											"end": 6465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6433,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6576,
											"end": 6583,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6684,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6565,
											"end": 6684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6603,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6603,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6603,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6684,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6565,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6723,
											"end": 6724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6748,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6812,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6748,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6953,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6835,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6940,
											"end": 6945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6922,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 6920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7148,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7227,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7203,
											"end": 7209,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7159,
											"end": 7230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7230,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7159,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7308,
											"end": 7310,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7240,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7312,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7240,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7322,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7322,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7505,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7407,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7910,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7664,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7776,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7857,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 7858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7791,
											"end": 7793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7755,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7899,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7884,
											"end": 7900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8020,
											"end": 8023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8080,
											"end": 8085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8048,
											"end": 8086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8086,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8048,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8181,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 8102,
											"end": 8190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8190,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8102,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8190,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8257,
											"end": 8263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8243,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 8199,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8264,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8199,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8024,
											"end": 8302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8549,
											"end": 8552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 8460,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8553,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8460,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8570,
											"end": 8573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8308,
											"end": 8579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8675,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8585,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8637,
											"end": 8669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8637,
											"end": 8669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8797,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 8681,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8766,
											"end": 8771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8751,
											"end": 8772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8772,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8751,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8744,
											"end": 8749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8773,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8731,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8731,
											"end": 8791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8787,
											"end": 8788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8731,
											"end": 8791,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8731,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8857,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 8904,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8934,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8904,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9050,
											"end": 9059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9048,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9060,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9065,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9149,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9030,
											"end": 9149,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9068,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 9068,
											"end": 9147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9147,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9068,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9149,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9030,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9266,
											"end": 9273,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9242,
											"end": 9264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9213,
											"end": 9274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9274,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9213,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9203,
											"end": 9274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9203,
											"end": 9274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9625,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 9472,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9617,
											"name": "PUSH",
											"source": 6,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9996,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 9631,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 9776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9858,
											"end": 9859,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9853,
											"end": 9856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9794,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9860,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9794,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9787,
											"end": 9860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9787,
											"end": 9860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 9869,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 9989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9978,
											"end": 9990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10195,
											"end": 10204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10183,
											"end": 10209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10183,
											"end": 10209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10245,
											"end": 10265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10409,
											"end": 10413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10283,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10575,
											"end": 10584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10563,
											"end": 10589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10563,
											"end": 10589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10649,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 10599,
											"end": 10670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10670,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10599,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10737,
											"end": 10746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10730,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 10680,
											"end": 10752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10752,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10680,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10917,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10765,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 6,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10889,
											"end": 10903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10882,
											"end": 10910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11288,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 10923,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11086,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11150,
											"end": 11151,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11145,
											"end": 11148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11086,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11152,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11086,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11250,
											"end": 11253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 11161,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11254,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11161,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11274,
											"end": 11277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11270,
											"end": 11282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11263,
											"end": 11282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11263,
											"end": 11282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11713,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 11294,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11541,
											"end": 11545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11557,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11533,
											"end": 11534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11518,
											"end": 11535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11701,
											"end": 11705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 11575,
											"end": 11706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11706,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11575,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11567,
											"end": 11706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11567,
											"end": 11706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/vault/Trade/ITrade.sol",
								"contracts/vault/Trade/Trade.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"swapExactInputSingle(address,address,uint256,address,uint24)": "8ebb36c7",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/Trade/Trade.sol\":\"TradingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/vault/Trade/ITrade.sol\":{\"keccak256\":\"0x515aecefe9d337d39429e309b07768b92d7c5c51bca8e31ae86810ff8aaa63b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a18ab463774f164694b0b9b2ef70068d1f87778a31d4d11730430ea425dc8653\",\"dweb:/ipfs/QmeuhF1xPbgVEnZe19YZZfKpb12jHGRMYbEmNqDCVZSgyV\"]},\"contracts/vault/Trade/Trade.sol\":{\"keccak256\":\"0x85b53da42c51cac00f2578f89501133c965147d6611586cd897450cb8f02261b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82ebf92ba6b34280c7f38cab0375d18c7243fadcd0fabdf2e717cf03b974e5c0\",\"dweb:/ipfs/QmbyoJdcbiRG5MRX7JwCkkNGUvx2egLBmnNGiA8oUV7797\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/vault/Trade/ITrade.sol": {
				"ast": {
					"absolutePath": "contracts/vault/Trade/ITrade.sol",
					"exportedSymbols": {
						"ITradingContract": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITradingContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "ITradingContract",
							"nameLocation": "69:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ebb36c7",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "101:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "130:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "122:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "147:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "139:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "165:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "157:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "183:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "175:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "201:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "194:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 373,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "194:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "121:88:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "236:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "228:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:19:4"
									},
									"scope": 380,
									"src": "92:155:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "59:190:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:216:4"
				},
				"id": 4
			},
			"contracts/vault/Trade/Trade.sol": {
				"ast": {
					"absolutePath": "contracts/vault/Trade/Trade.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"ITradingContract": [
							380
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"TradingContract": [
							469
						],
						"TransferHelper": [
							362
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 192,
							"src": "59:68:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 78,
							"src": "129:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 363,
							"src": "186:70:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/vault/Trade/ITrade.sol",
							"file": "./ITrade.sol",
							"id": 387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 381,
							"src": "257:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 386,
										"name": "ITradingContract",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "265:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 388,
										"name": "ITradingContract",
										"nameLocations": [
											"334:16:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "334:16:5"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "334:16:5"
								}
							],
							"canonicalName": "TradingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469,
								380
							],
							"name": "TradingContract",
							"nameLocation": "315:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 392,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "386:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 469,
									"src": "357:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 391,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 390,
											"name": "ISwapRouter",
											"nameLocations": [
												"357:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "357:11:5"
										},
										"referencedDeclaration": 191,
										"src": "357:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "436:54:5",
										"statements": [
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "446:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 399,
																"name": "_swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "471:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 398,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "459:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "459:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "446:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "446:37:5"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "423:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "415:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:21:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:5"
									},
									"scope": 469,
									"src": "403:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "740:815:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "854:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "863:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 426,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "882:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TradingContract_$469",
																		"typeString": "contract TradingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TradingContract_$469",
																		"typeString": "contract TradingContract"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "874:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "874:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "874:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "889:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 419,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "822:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "837:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "822:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "822:76:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1010:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 437,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1027:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1019:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1019:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1019:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1040:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 431,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "983:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "998:11:5",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "983:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "983:66:5"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1146:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "1104:48:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 445,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 444,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1104:11:5",
																	"1116:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1104:34:5"
															},
															"referencedDeclaration": 115,
															"src": "1104:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1213:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1244:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "1271:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 452,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1303:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 453,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1336:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1342:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1336:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 455,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1375:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1449:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 447,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1155:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1167:22:5",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1155:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1204:7:5",
														"1234:8:5",
														"1266:3:5",
														"1292:9:5",
														"1326:8:5",
														"1365:8:5",
														"1397:16:5",
														"1430:17:5"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1155:306:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1104:357:5"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1501:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 463,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "1541:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 461,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1513:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1524:16:5",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "1513:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1513:35:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1501:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1501:47:5"
											}
										]
									},
									"functionSelector": "8ebb36c7",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "594:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "623:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "615:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "640:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "632:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "658:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "650:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "676:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "668:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "694:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "687:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 413,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "687:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:88:5"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "729:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "721:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:19:5"
									},
									"scope": 469,
									"src": "585:970:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 470,
							"src": "306:1251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1524:5"
				},
				"id": 5
			}
		}
	}
}